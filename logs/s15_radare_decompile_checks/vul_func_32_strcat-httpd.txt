[*] Binary protection state of httpd

  
  	No RELRO       No Canary found   NX disabled  No PIE       No RPATH     No RUNPATH   No Symbols


[*] Function strcat tear down of httpd

    ; assembly                               | /* r2dec pseudo code output */
                                             | /* /logs/firmware/unblob_extracted/firmware_extract/1180160-3904000.squashfs_v4_le_extract/usr/bin/httpd @ 0x4c3990 */
                                             | #include <stdint.h>
                                             |  
    ; (fcn) sym.dhcpServerStart ()           | void dhcpServerStart () {
    0x004c3990 lui gp, 0xe                   |     
    0x004c3994 addiu gp, gp, -0x4370         |     
    0x004c3998 addu gp, gp, t9               |     gp += t9;
    0x004c399c addiu sp, sp, -0x1f0          |     
    0x004c39a0 sw ra, 0x1ec(sp)              |     *(var_1ech) = ra;
    0x004c39a4 sw s6, 0x1e8(sp)              |     *(var_1e8h) = s6;
    0x004c39a8 sw s5, 0x1e4(sp)              |     *(var_1e4h) = s5;
    0x004c39ac sw s4, 0x1e0(sp)              |     *(var_1e0h) = s4;
    0x004c39b0 sw s3, 0x1dc(sp)              |     *(var_1dch) = s3;
    0x004c39b4 sw s2, 0x1d8(sp)              |     *(var_1d8h) = s2;
    0x004c39b8 sw s1, 0x1d4(sp)              |     *(var_1d4h) = s1;
    0x004c39bc sw s0, 0x1d0(sp)              |     *(var_1d0h) = s0;
    0x004c39c0 sw gp, 0x20(sp)               |     *(var_20h) = gp;
    0x004c39c4 lw t9, -0x7cf0(gp)            |     t9 = sym.swGetLanIpMask;
    0x004c39c8 move s4, a0                   |     s4 = a0;
    0x004c39cc move s6, a1                   |     s6 = a1;
    0x004c39d0 addiu a0, sp, 0x1c8           |     a0 = sp + 0x1c8;
    0x004c39d4 addiu a1, sp, 0x1cc           |     a1 = sp + 0x1cc;
    0x004c39d8 jalr t9                       |     t9 ();
    0x004c39dc lw v0, (s4)                   |     v0 = *(s4);
    0x004c39e0 lw gp, 0x20(sp)               |     gp = *(var_20h);
                                             |     if (v0 == 0) {
    0x004c39e4 bnez v0, 0x4c3a04             |         
    0x004c39e8 nop                           |         
    0x004c39ec lw a0, -0x7fb8(gp)            |         a0 = *((gp - 8174));
    0x004c39f0 lw t9, -0x554c(gp)            |         t9 = sym.imp.puts;
                                             |         /* esilref: 'dhcp server disabled' */
    0x004c39f4 addiu a0, a0, 0x141c          |         a0 += 0x141c;
    0x004c39f8 jalr t9                       |         t9 ();
    0x004c39fc b 0x4c3a3c                    |         goto label_0;
    0x004c3a00 nop                           |         
                                             |     }
    0x004c3a04 lw s0, -0x7fb8(gp)            |     s0 = *((gp - 8174));
    0x004c3a08 lw a1, -0x7fb8(gp)            |     a1 = *((gp - 8174));
    0x004c3a0c lw t9, -0x6bd4(gp)            |     t9 = sym.imp.fopen;
                                             |     /* esilref: '/tmp/wr841n/udhcpd.conf' */
    0x004c3a10 addiu a0, s0, 0x1434          |     a0 = s0 + 0x1434;
                                             |     /* esilref: 'w+' */
    0x004c3a14 addiu a1, a1, 0x144c          |     a1 += 0x144c;
    0x004c3a18 jalr t9                       |     t9 ();
    0x004c3a1c lw gp, 0x20(sp)               |     gp = *(var_20h);
    0x004c3a20 move s3, v0                   |     s3 = v0;
                                             |     if (v0 == 0) {
    0x004c3a24 bnez v0, 0x4c3a48             |         
    0x004c3a28 lw a0, -0x7fb8(gp)            |         a0 = *((gp - 8174));
                                             |         /* esilref: '/tmp/wr841n/udhcpd.conf' */
    0x004c3a2c addiu a1, s0, 0x1434          |         a1 = s0 + 0x1434;
    0x004c3a30 lw t9, -0x4d1c(gp)            |         t9 = sym.imp.printf;
                                             |         /* esilref: 'open config file &s failed
' */
    0x004c3a34 addiu a0, a0, 0x1450          |         a0 += 0x1450;
    0x004c3a38 jalr t9                       |         t9 ();
                                             | label_0:
    0x004c3a3c lw gp, 0x20(sp)               |         gp = *(var_20h);
    0x004c3a40 move v0, zero                 |         v0 = 0;
    0x004c3a44 b 0x4c3e0c                    |         goto label_1;
                                             |     }
    0x004c3a48 lw t9, -0x64d8(gp)            |     t9 = sym.swIpAddr2Str;
    0x004c3a4c addiu s1, sp, 0x128           |     s1 = sp + 0x128;
    0x004c3a50 lw a0, 4(s4)                  |     a0 = *((s4 + 1));
    0x004c3a54 move a1, s1                   |     a1 = s1;
    0x004c3a58 addiu s0, sp, 0x138           |     s0 = sp + 0x138;
    0x004c3a5c addiu s2, sp, 0x158           |     s2 = sp + 0x158;
    0x004c3a60 jalr t9                       |     t9 ();
    0x004c3a64 lw gp, 0x20(sp)               |     gp = *(var_20h);
    0x004c3a68 lw a0, 8(s4)                  |     a0 = *((s4 + 2));
    0x004c3a6c lw t9, -0x64d8(gp)            |     t9 = sym.swIpAddr2Str;
    0x004c3a70 move a1, s0                   |     a1 = s0;
    0x004c3a74 jalr t9                       |     t9 ();
    0x004c3a78 move a2, s1                   |     a2 = s1;
    0x004c3a7c lw gp, 0x20(sp)               |     gp = *(var_20h);
    0x004c3a80 move a3, s0                   |     a3 = s0;
    0x004c3a84 lw v0, 0xc(s4)                |     v0 = *((s4 + 3));
    0x004c3a88 move a0, s3                   |     a0 = s3;
    0x004c3a8c lw a1, -0x7fb8(gp)            |     a1 = *((gp - 8174));
    0x004c3a90 lw t9, -0x6040(gp)            |     t9 = sym.imp.fprintf;
                                             |     /* esilref: 'start	&s
end	&s
opt	lease	&d
' */
    0x004c3a94 addiu a1, a1, 0x146c          |     a1 += 0x146c;
    0x004c3a98 sw v0, 0x10(sp)               |     *(var_10h) = v0;
    0x004c3a9c jalr t9                       |     t9 ();
    0x004c3aa0 move a0, s2                   |     a0 = s2;
    0x004c3aa4 lw gp, 0x20(sp)               |     gp = *(var_20h);
    0x004c3aa8 move a1, zero                 |     a1 = 0;
    0x004c3aac lw t9, -0x6c0c(gp)            |     t9 = sym.imp.memset;
    0x004c3ab0 addiu a2, zero, 0x50          |     a2 = 0x50;
    0x004c3ab4 jalr t9                       |     t9 ();
    0x004c3ab8 lw a0, 0x30(s4)               |     a0 = *((s4 + 12));
    0x004c3abc lw gp, 0x20(sp)               |     gp = *(var_20h);
                                             |     if (a0 == 0) {
    0x004c3ac0 bnez a0, 0x4c3adc             |         
    0x004c3ac4 nop                           |         
    0x004c3ac8 lw v0, 0x34(s4)               |         v0 = *((s4 + 13));
                                             |         if (v0 == 0) {
    0x004c3acc beqz v0, 0x4c3b34             |             goto label_2;
                                             |         }
    0x004c3ad0 nop                           |         
    0x004c3ad4 b 0x4c3b1c                    |         goto label_3;
    0x004c3ad8 nop                           |         
                                             |     }
    0x004c3adc lw t9, -0x64d8(gp)            |     t9 = sym.swIpAddr2Str;
    0x004c3ae0 addiu s0, sp, 0x148           |     s0 = sp + 0x148;
    0x004c3ae4 move a1, s0                   |     a1 = s0;
    0x004c3ae8 jalr t9                       |     t9 ();
    0x004c3aec move a0, s2                   |     a0 = s2;
    0x004c3af0 lw gp, 0x20(sp)               |     gp = *(var_20h);
[31m    0x004c3af4 lw t9, -0x60b8(gp)            |     t9 = sym.imp.strcat;[0m
    0x004c3af8 move a1, s0                   |     a1 = s0;
    0x004c3afc jalr t9                       |     t9 ();
    0x004c3b00 move a0, s2                   |     a0 = s2;
    0x004c3b04 lw gp, 0x20(sp)               |     gp = *(var_20h);
    0x004c3b08 lw a1, -0x7fb8(gp)            |     a1 = *((gp - 8174));
[31m    0x004c3b0c lw t9, -0x60b8(gp)            |     t9 = sym.imp.strcat;[0m
    0x004c3b10 addiu a1, a1, 0x148c          |     a1 += 0x148c;
    0x004c3b14 jalr t9                       |     t9 ();
    0x004c3b18 lw gp, 0x20(sp)               |     gp = *(var_20h);
                                             | label_3:
    0x004c3b1c lw a0, 0x34(s4)               |     a0 = *((s4 + 13));
                                             |     if (a0 != 0) {
    0x004c3b20 beqz a0, 0x4c3b60             |         
    0x004c3b24 nop                           |         
    0x004c3b28 lw t9, -0x64d8(gp)            |         t9 = sym.swIpAddr2Str;
    0x004c3b2c addiu s0, sp, 0x148           |         s0 = sp + 0x148;
    0x004c3b30 b 0x4c3b40                    |         goto label_4;
                                             | label_2:
    0x004c3b34 lw t9, -0x64d8(gp)            |         t9 = sym.swIpAddr2Str;
    0x004c3b38 addiu s0, sp, 0x148           |         s0 = sp + 0x148;
    0x004c3b3c lw a0, 0x1c8(sp)              |         a0 = *(var_1c8h);
                                             | label_4:
    0x004c3b40 move a1, s0                   |         a1 = s0;
    0x004c3b44 jalr t9                       |         t9 ();
    0x004c3b48 move a0, s2                   |         a0 = s2;
    0x004c3b4c lw gp, 0x20(sp)               |         gp = *(var_20h);
[31m    0x004c3b50 lw t9, -0x60b8(gp)            |         t9 = sym.imp.strcat;[0m
    0x004c3b54 move a1, s0                   |         a1 = s0;
    0x004c3b58 jalr t9                       |         t9 ();
    0x004c3b5c lw gp, 0x20(sp)               |         gp = *(var_20h);
                                             |     }
    0x004c3b60 lw a1, -0x7fb8(gp)            |     a1 = *((gp - 8174));
    0x004c3b64 move a2, s2                   |     a2 = s2;
    0x004c3b68 lw t9, -0x6040(gp)            |     t9 = sym.imp.fprintf;
    0x004c3b6c move a0, s3                   |     a0 = s3;
                                             |     /* esilref: 'opt	dns	&s
' */
    0x004c3b70 addiu a1, a1, 0x1490          |     a1 += 0x1490;
    0x004c3b74 jalr t9                       |     t9 ();
    0x004c3b78 addiu v0, zero, -0x10         |     v0 = -0x10;
    0x004c3b7c lw gp, 0x20(sp)               |     gp = *(var_20h);
                                             |     if (s4 != v0) {
    0x004c3b80 beq s4, v0, 0x4c3bac          |         
    0x004c3b84 nop                           |         
    0x004c3b88 lbu v0, 0x10(s4)              |         v0 = *((s4 + 16));
    0x004c3b8c move a0, s3                   |         a0 = s3;
                                             |         if (v0 == 0) {
    0x004c3b90 beqz v0, 0x4c3bac             |             goto label_5;
                                             |         }
    0x004c3b94 lw a1, -0x7fb8(gp)            |         a1 = *((gp - 8174));
    0x004c3b98 lw t9, -0x6040(gp)            |         t9 = sym.imp.fprintf;
    0x004c3b9c addiu a2, s4, 0x10            |         a2 = s4 + 0x10;
                                             |         /* esilref: 'opt	domain	&s
' */
    0x004c3ba0 addiu a1, a1, 0x149c          |         a1 += 0x149c;
    0x004c3ba4 jalr t9                       |         t9 ();
    0x004c3ba8 lw gp, 0x20(sp)               |         gp = *(var_20h);
                                             |     }
                                             | label_5:
    0x004c3bac lw a0, 0x38(s4)               |     a0 = *((s4 + 14));
    0x004c3bb0 addiu s0, sp, 0x148           |     s0 = sp + 0x148;
                                             |     if (a0 != 0) {
    0x004c3bb4 beqz a0, 0x4c3be4             |         
    0x004c3bb8 lw t9, -0x64d8(gp)            |         t9 = sym.swIpAddr2Str;
    0x004c3bbc move a1, s0                   |         a1 = s0;
    0x004c3bc0 jalr t9                       |         t9 ();
    0x004c3bc4 move a0, s3                   |         a0 = s3;
    0x004c3bc8 lw gp, 0x20(sp)               |         gp = *(var_20h);
    0x004c3bcc move a2, s0                   |         a2 = s0;
    0x004c3bd0 lw a1, -0x7fb8(gp)            |         a1 = *((gp - 8174));
    0x004c3bd4 lw t9, -0x6040(gp)            |         t9 = sym.imp.fprintf;
                                             |         /* esilref: 'opt	router	&s
' */
    0x004c3bd8 addiu a1, a1, 0x14ac          |         a1 += 0x14ac;
    0x004c3bdc jalr t9                       |         t9 ();
    0x004c3be0 lw gp, 0x20(sp)               |         gp = *(var_20h);
                                             |     }
    0x004c3be4 lw t9, -0x64d8(gp)            |     t9 = sym.swIpAddr2Str;
    0x004c3be8 addiu s1, sp, 0x148           |     s1 = sp + 0x148;
    0x004c3bec lw a0, 0x1cc(sp)              |     a0 = *(var_1cch);
    0x004c3bf0 move a1, s1                   |     a1 = s1;
    0x004c3bf4 move s2, zero                 |     s2 = 0;
    0x004c3bf8 jalr t9                       |     t9 ();
    0x004c3bfc move a0, s3                   |     a0 = s3;
    0x004c3c00 lw gp, 0x20(sp)               |     gp = *(var_20h);
    0x004c3c04 move a2, s1                   |     a2 = s1;
    0x004c3c08 lw a1, -0x7fb8(gp)            |     a1 = *((gp - 8174));
    0x004c3c0c lw t9, -0x6040(gp)            |     t9 = sym.imp.fprintf;
                                             |     /* esilref: 'opt	subnet	&s
' */
    0x004c3c10 addiu a1, a1, 0x14bc          |     a1 += 0x14bc;
    0x004c3c14 jalr t9                       |     t9 ();
    0x004c3c18 lw v0, (s6)                   |     v0 = *(s6);
    0x004c3c1c lw gp, 0x20(sp)               |     gp = *(var_20h);
    0x004c3c20 move s0, s6                   |     s0 = s6;
                                             |     if (v0 <= 0) {
    0x004c3c24 blez v0, 0x4c3c98             |         goto label_6;
                                             |     }
                                             |     do {
    0x004c3c28 lw v0, 4(s0)                  |         v0 = *((s0 + 1));
    0x004c3c2c addiu s5, sp, 0x1b0           |         s5 = sp + 0x1b0;
    0x004c3c30 lw t9, -0x5c78(gp)            |         t9 = sym.swMac2Str;
    0x004c3c34 addiu a0, s0, 8               |         a0 = s0 + 8;
    0x004c3c38 addiu a2, zero, 1             |         a2 = 1;
    0x004c3c3c move a1, s5                   |         a1 = s5;
    0x004c3c40 addiu s2, s2, 1               |         s2++;
                                             |         if (v0 != 0) {
    0x004c3c44 beqz v0, 0x4c3c88             |             
    0x004c3c48 jalr t9                       |             t9 ();
    0x004c3c4c nop                           |             
    0x004c3c50 lw gp, 0x20(sp)               |             gp = *(var_20h);
    0x004c3c54 lw a0, 0x10(s0)               |             a0 = *((s0 + 4));
    0x004c3c58 lw t9, -0x64d8(gp)            |             t9 = sym.swIpAddr2Str;
    0x004c3c5c move a1, s1                   |             a1 = s1;
    0x004c3c60 jalr t9                       |             t9 ();
    0x004c3c64 move a0, s3                   |             a0 = s3;
    0x004c3c68 lw gp, 0x20(sp)               |             gp = *(var_20h);
    0x004c3c6c move a2, s5                   |             a2 = s5;
    0x004c3c70 move a3, s1                   |             a3 = s1;
    0x004c3c74 lw a1, -0x7fb8(gp)            |             a1 = *((gp - 8174));
    0x004c3c78 lw t9, -0x6040(gp)            |             t9 = sym.imp.fprintf;
                                             |             /* esilref: 'static_lease	&s &s
' */
    0x004c3c7c addiu a1, a1, 0x14cc          |             a1 += 0x14cc;
    0x004c3c80 jalr t9                       |             t9 ();
    0x004c3c84 lw gp, 0x20(sp)               |             gp = *(var_20h);
                                             |         }
    0x004c3c88 lw v0, (s6)                   |         v0 = *(s6);
    0x004c3c8c slt v0, s2, v0                |         v0 = (s2 < v0) ? 1 : 0;
    0x004c3c90 addiu s0, s0, 0x10            |         s0 += 0x10;
    0x004c3c94 bnez v0, 0x4c3c28             |         
                                             |     } while (v0 != 0);
                                             | label_6:
    0x004c3c98 lw t9, -0x7cf0(gp)            |     t9 = sym.swGetLanIpMask;
    0x004c3c9c addiu a0, sp, 0x1c8           |     a0 = sp + 0x1c8;
    0x004c3ca0 addiu a1, sp, 0x1cc           |     a1 = sp + 0x1cc;
    0x004c3ca4 addiu s2, sp, 0x148           |     s2 = sp + 0x148;
    0x004c3ca8 jalr t9                       |     t9 ();
    0x004c3cac move a1, s2                   |     a1 = s2;
    0x004c3cb0 lw gp, 0x20(sp)               |     gp = *(var_20h);
    0x004c3cb4 addiu s0, sp, 0x1a8           |     s0 = sp + 0x1a8;
    0x004c3cb8 lw a0, 0x1c8(sp)              |     a0 = *(var_1c8h);
    0x004c3cbc lw t9, -0x64d8(gp)            |     t9 = sym.swIpAddr2Str;
    0x004c3cc0 addiu s1, sp, 0x1b0           |     s1 = sp + 0x1b0;
    0x004c3cc4 jalr t9                       |     t9 ();
    0x004c3cc8 lw gp, 0x20(sp)               |     gp = *(var_20h);
    0x004c3ccc lw t9, -0x77dc(gp)            |     t9 = sym.swGetLanMac;
    0x004c3cd0 move a0, s0                   |     a0 = s0;
    0x004c3cd4 jalr t9                       |     t9 ();
    0x004c3cd8 move a0, s0                   |     a0 = s0;
    0x004c3cdc lw gp, 0x20(sp)               |     gp = *(var_20h);
    0x004c3ce0 move a1, s1                   |     a1 = s1;
    0x004c3ce4 lw t9, -0x5c78(gp)            |     t9 = sym.swMac2Str;
    0x004c3ce8 addiu a2, zero, 1             |     a2 = 1;
    0x004c3cec jalr t9                       |     t9 ();
    0x004c3cf0 move a0, s3                   |     a0 = s3;
    0x004c3cf4 lw gp, 0x20(sp)               |     gp = *(var_20h);
    0x004c3cf8 move a2, s1                   |     a2 = s1;
    0x004c3cfc move a3, s2                   |     a3 = s2;
    0x004c3d00 lw a1, -0x7fb8(gp)            |     a1 = *((gp - 8174));
    0x004c3d04 lw t9, -0x6040(gp)            |     t9 = sym.imp.fprintf;
                                             |     /* esilref: 'static_lease	&s &s
' */
    0x004c3d08 addiu a1, a1, 0x14cc          |     a1 += 0x14cc;
    0x004c3d0c jalr t9                       |     t9 ();
    0x004c3d10 lw gp, 0x20(sp)               |     gp = *(var_20h);
    0x004c3d14 lw t9, -0x6ab0(gp)            |     t9 = sym.getDhcpsMaxEntrySize;
    0x004c3d18 jalr t9                       |     t9 ();
    0x004c3d1c nop                           |     
    0x004c3d20 move s0, v0                   |     s0 = v0;
    0x004c3d24 lw v1, 4(s4)                  |     v1 = *((s4 + 1));
    0x004c3d28 lw v0, 8(s4)                  |     v0 = *((s4 + 2));
    0x004c3d2c lw gp, 0x20(sp)               |     gp = *(var_20h);
    0x004c3d30 subu v0, v0, v1               |     __asm ("subu v0, v0, v1");
    0x004c3d34 addiu v1, v0, 1               |     v1 = v0 + 1;
    0x004c3d38 sltu v0, v1, s0               |     v0 = (v1 < s0) ? 1 : 0;
                                             |     if (v0 != 0) {
    0x004c3d3c beqz v0, 0x4c3d48             |         
    0x004c3d40 nop                           |         
    0x004c3d44 move s0, v1                   |         s0 = v1;
                                             |     }
    0x004c3d48 lw t9, -0x602c(gp)            |     t9 = sym.getLanBridgeName;
    0x004c3d4c jalr t9                       |     t9 ();
    0x004c3d50 nop                           |     
    0x004c3d54 move a3, s0                   |     a3 = s0;
    0x004c3d58 lw gp, 0x20(sp)               |     gp = *(var_20h);
    0x004c3d5c move a2, v0                   |     a2 = v0;
    0x004c3d60 lw v0, 0xc(s4)                |     v0 = *((s4 + 3));
    0x004c3d64 move a0, s3                   |     a0 = s3;
    0x004c3d68 lw a1, -0x7fb8(gp)            |     a1 = *((gp - 8174));
    0x004c3d6c sw v0, 0x10(sp)               |     *(var_10h) = v0;
    0x004c3d70 lw v0, -0x7fb8(gp)            |     v0 = *((gp - 8174));
                                             |     /* esilref: 'interface	&s
max_leases	&d
auto_time	&d
lease_file	&s
pidfile	&s
' */
    0x004c3d74 addiu a1, a1, 0x14e0          |     a1 += 0x14e0;
    0x004c3d78 lw t9, -0x6040(gp)            |     t9 = sym.imp.fprintf;
                                             |     /* esilref: '/tmp/wr841n/udhcpd.leases' */
    0x004c3d7c addiu v0, v0, 0x1524          |     v0 += 0x1524;
    0x004c3d80 sw v0, 0x14(sp)               |     *(var_14h) = v0;
    0x004c3d84 lw v0, -0x7fb8(gp)            |     v0 = *((gp - 8174));
                                             |     /* esilref: '/tmp/wr841n/udhcpd.pid' */
    0x004c3d88 addiu v0, v0, 0x138c          |     v0 += 0x138c;
    0x004c3d8c sw v0, 0x18(sp)               |     *(var_18h) = v0;
    0x004c3d90 jalr t9                       |     t9 ();
    0x004c3d94 lw gp, 0x20(sp)               |     gp = *(var_20h);
    0x004c3d98 lw t9, -0x6d68(gp)            |     t9 = sym.imp.fclose;
    0x004c3d9c move a0, s3                   |     a0 = s3;
    0x004c3da0 jalr t9                       |     t9 ();
    0x004c3da4 addiu a0, sp, 0x28            |     a0 = sp + 0x28;
    0x004c3da8 lw gp, 0x20(sp)               |     gp = *(var_20h);
    0x004c3dac lw a1, -0x7fb8(gp)            |     a1 = *((gp - 8174));
    0x004c3db0 lw a2, -0x7fb8(gp)            |     a2 = *((gp - 8174));
    0x004c3db4 lw a3, -0x7fb8(gp)            |     a3 = *((gp - 8174));
                                             |     /* esilref: '&s &s &' */
    0x004c3db8 addiu a1, a1, 0x1540          |     a1 += 0x1540;
    0x004c3dbc lw t9, -0x70a4(gp)            |     t9 = sym.imp.sprintf;
                                             |     /* esilref: '/usr/sbin/udhcpd' */
    0x004c3dc0 addiu a2, a2, 0x1548          |     a2 += 0x1548;
                                             |     /* esilref: '/tmp/wr841n/udhcpd.conf' */
    0x004c3dc4 addiu a3, a3, 0x1434          |     a3 += 0x1434;
    0x004c3dc8 jalr t9                       |     t9 ();
    0x004c3dcc lw gp, 0x20(sp)               |     gp = *(var_20h);
    0x004c3dd0 lw t9, -0x5610(gp)            |     t9 = sym.imp.system;
    0x004c3dd4 addiu a0, sp, 0x28            |     a0 = sp + 0x28;
    0x004c3dd8 jalr t9                       |     t9 ();
    0x004c3ddc addiu v1, zero, 1             |     v1 = 1;
    0x004c3de0 lw gp, 0x20(sp)               |     gp = *(var_20h);
    0x004c3de4 addiu a0, zero, 5             |     a0 = 5;
    0x004c3de8 addiu a1, zero, 2             |     a1 = 2;
    0x004c3dec lw v0, -0x5cd8(gp)            |     v0 = *(gp);
    0x004c3df0 lw a2, -0x7fb8(gp)            |     a2 = *((gp - 8174));
    0x004c3df4 lw t9, -0x546c(gp)            |     t9 = sym.imp.msglogd;
    0x004c3df8 sw v1, (v0)                   |     *(v0) = v1;
                                             |     /* esilref: 'DHCP server started' */
    0x004c3dfc addiu a2, a2, 0x155c          |     a2 += 0x155c;
    0x004c3e00 jalr t9                       |     t9 ();
    0x004c3e04 addiu v0, zero, 1             |     v0 = 1;
    0x004c3e08 lw gp, 0x20(sp)               |     gp = *(var_20h);
                                             | label_1:
    0x004c3e0c lw ra, 0x1ec(sp)              |     ra = *(var_1ech);
    0x004c3e10 lw s6, 0x1e8(sp)              |     s6 = *(var_1e8h);
    0x004c3e14 lw s5, 0x1e4(sp)              |     s5 = *(var_1e4h);
    0x004c3e18 lw s4, 0x1e0(sp)              |     s4 = *(var_1e0h);
    0x004c3e1c lw s3, 0x1dc(sp)              |     s3 = *(var_1dch);
    0x004c3e20 lw s2, 0x1d8(sp)              |     s2 = *(var_1d8h);
    0x004c3e24 lw s1, 0x1d4(sp)              |     s1 = *(var_1d4h);
    0x004c3e28 lw s0, 0x1d0(sp)              |     s0 = *(var_1d0h);
    0x004c3e2c addiu sp, sp, 0x1f0           |     
    0x004c3e30 jr ra                         |     return v0;
                                             | }
    ; assembly                               | /* r2dec pseudo code output */
                                             | /* /logs/firmware/unblob_extracted/firmware_extract/1180160-3904000.squashfs_v4_le_extract/usr/bin/httpd @ 0x4d4804 */
                                             | #include <stdint.h>
                                             |  
    ; (fcn) sym.getUint8Array ()             | void getUint8Array () {
    0x004d4804 lui gp, 0xd                   |     
    0x004d4808 addiu gp, gp, -0x51e4         |     
    0x004d480c addu gp, gp, t9               |     gp += t9;
    0x004d4810 addiu sp, sp, -0x48           |     
    0x004d4814 sw ra, 0x40(sp)               |     *(var_40h) = ra;
    0x004d4818 sw s5, 0x3c(sp)               |     *(var_3ch) = s5;
    0x004d481c sw s4, 0x38(sp)               |     *(var_38h) = s4;
    0x004d4820 sw s3, 0x34(sp)               |     *(var_34h) = s3;
    0x004d4824 sw s2, 0x30(sp)               |     *(var_30h) = s2;
    0x004d4828 sw s1, 0x2c(sp)               |     *(var_2ch) = s1;
    0x004d482c sw s0, 0x28(sp)               |     *(var_28h) = s0;
    0x004d4830 sw gp, 0x10(sp)               |     *(var_10h) = gp;
    0x004d4834 move s1, zero                 |     s1 = 0;
    0x004d4838 lw t9, -0x6c0c(gp)            |     t9 = sym.imp.memset;
    0x004d483c move s0, a0                   |     s0 = a0;
    0x004d4840 move s2, a1                   |     s2 = a1;
    0x004d4844 move s5, a2                   |     s5 = a2;
    0x004d4848 addiu a0, sp, 0x18            |     a0 = sp + 0x18;
    0x004d484c move a1, zero                 |     a1 = 0;
    0x004d4850 addiu a2, zero, 0xa           |     a2 = 0xa;
    0x004d4854 lw s3, 0x58(sp)               |     s3 = *(arg_58h);
    0x004d4858 move s4, a3                   |     s4 = a3;
    0x004d485c jalr t9                       |     t9 ();
    0x004d4860 lw gp, 0x10(sp)               |     gp = *(var_10h);
                                             |     if (s2 <= 0) {
    0x004d4864 blez s2, 0x4d48cc             |         goto label_0;
                                             |     }
    0x004d4868 nop                           |     
                                             |     do {
    0x004d486c lw t9, -0x70a4(gp)            |         t9 = sym.imp.sprintf;
    0x004d4870 addiu a0, sp, 0x18            |         a0 = sp + 0x18;
    0x004d4874 lbu a2, (s0)                  |         a2 = *(s0);
    0x004d4878 move a1, s5                   |         a1 = s5;
    0x004d487c addiu s0, s0, 1               |         s0++;
    0x004d4880 jalr t9                       |         t9 ();
    0x004d4884 move a0, s3                   |         a0 = s3;
    0x004d4888 lw gp, 0x10(sp)               |         gp = *(var_10h);
[31m    0x004d488c lw t9, -0x60b8(gp)            |         t9 = sym.imp.strcat;[0m
    0x004d4890 addiu a1, sp, 0x18            |         a1 = sp + 0x18;
    0x004d4894 jalr t9                       |         t9 ();
    0x004d4898 addiu v0, s2, -1              |         v0 = s2 + -1;
    0x004d489c lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x004d48a0 move a0, s3                   |         a0 = s3;
[31m    0x004d48a4 lw t9, -0x60b8(gp)            |         t9 = sym.imp.strcat;[0m
    0x004d48a8 move a1, s4                   |         a1 = s4;
                                             |         if (s1 != v0) {
    0x004d48ac beq s1, v0, 0x4d48bc          |             
    0x004d48b0 jalr t9                       |             t9 ();
    0x004d48b4 nop                           |             
    0x004d48b8 lw gp, 0x10(sp)               |             gp = *(var_10h);
                                             |         }
    0x004d48bc addiu s1, s1, 1               |         s1++;
    0x004d48c0 slt v0, s1, s2                |         v0 = (s1 < s2) ? 1 : 0;
    0x004d48c4 bnez v0, 0x4d486c             |         
                                             |     } while (v0 != 0);
    0x004d48c8 nop                           |     
                                             | label_0:
    0x004d48cc lw ra, 0x40(sp)               |     ra = *(var_40h);
    0x004d48d0 lw s5, 0x3c(sp)               |     s5 = *(var_3ch);
    0x004d48d4 lw s4, 0x38(sp)               |     s4 = *(var_38h);
    0x004d48d8 lw s3, 0x34(sp)               |     s3 = *(var_34h);
    0x004d48dc lw s2, 0x30(sp)               |     s2 = *(var_30h);
    0x004d48e0 lw s1, 0x2c(sp)               |     s1 = *(var_2ch);
    0x004d48e4 lw s0, 0x28(sp)               |     s0 = *(var_28h);
    0x004d48e8 addiu sp, sp, 0x48            |     
    0x004d48ec jr ra                         |     return v0;
                                             | }
    ; assembly                               | /* r2dec pseudo code output */
                                             | /* /logs/firmware/unblob_extracted/firmware_extract/1180160-3904000.squashfs_v4_le_extract/usr/bin/httpd @ 0x427134 */
                                             | #include <stdint.h>
                                             |  
    ; (fcn) sym.httpRpmFs ()                 | void httpRpmFs () {
    0x00427134 lui gp, 0x18                  |     
    0x00427138 addiu gp, gp, -0x7b14         |     
    0x0042713c addu gp, gp, t9               |     gp += t9;
    0x00427140 addiu sp, sp, -0x118          |     
    0x00427144 sw ra, 0x110(sp)              |     *(var_110h) = ra;
    0x00427148 sw s7, 0x10c(sp)              |     *(var_10ch) = s7;
    0x0042714c sw s6, 0x108(sp)              |     *(var_108h) = s6;
    0x00427150 sw s5, 0x104(sp)              |     *(var_104h) = s5;
    0x00427154 sw s4, 0x100(sp)              |     *(var_100h) = s4;
    0x00427158 sw s3, 0xfc(sp)               |     *(var_fch) = s3;
    0x0042715c sw s2, 0xf8(sp)               |     *(var_f8h) = s2;
    0x00427160 sw s1, 0xf4(sp)               |     *(var_f4h) = s1;
    0x00427164 sw s0, 0xf0(sp)               |     *(var_f0h) = s0;
    0x00427168 sw gp, 0x10(sp)               |     *(var_10h) = gp;
    0x0042716c move s7, zero                 |     s7 = 0;
    0x00427170 lw t9, -0x61dc(gp)            |     t9 = sym.httpBufferGet;
    0x00427174 move s5, a0                   |     s5 = a0;
    0x00427178 jalr t9                       |     t9 ();
    0x0042717c lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x00427180 move s0, v0                   |     s0 = v0;
    0x00427184 lw v0, -0x65a4(gp)            |     v0 = *(gp);
    0x00427188 lbu v0, (v0)                  |     v0 = *(v0);
    0x0042718c move a0, s5                   |     a0 = s5;
                                             |     if (v0 == 0) {
    0x00427190 bnez v0, 0x4271a4             |         
    0x00427194 lw t9, -0x6444(gp)            |         t9 = sym.httpMimeContentEncodingGet;
    0x00427198 move a1, zero                 |         a1 = 0;
    0x0042719c jalr t9                       |         t9 ();
    0x004271a0 lw gp, 0x10(sp)               |         gp = *(var_10h);
                                             |     }
    0x004271a4 lw v0, -0x7fd4(gp)            |     v0 = *((gp - 8181));
    0x004271a8 move a0, s5                   |     a0 = s5;
    0x004271ac lw t9, -0x7564(gp)            |     t9 = sym.httpRpmDataGet;
                                             |     /* esilref: '/tmp/' */
    0x004271b0 addiu v1, v0, -0x1c48         |     v1 = v0 + -0x1c48;
    0x004271b4 lw v0, -0x1c48(v0)            |     v0 = *((v0 - 1810));
    0x004271b8 lbu t0, 5(v1)                 |     t0 = *((v1 + 5));
    0x004271bc lbu a3, 4(v1)                 |     a3 = *((v1 + 4));
    0x004271c0 srl a2, v0, 8                 |     a2 = v0 >> 8;
    0x004271c4 srl v1, v0, 0x18              |     v1 = v0 >> 0x18;
    0x004271c8 srl a1, v0, 0x10              |     a1 = v0 >> 0x10;
    0x004271cc sb v1, (s0)                   |     *(s0) = v1;
    0x004271d0 sb a2, 2(s0)                  |     *((s0 + 2)) = a2;
    0x004271d4 sb a3, 4(s0)                  |     *((s0 + 4)) = a3;
    0x004271d8 sb t0, 5(s0)                  |     *((s0 + 5)) = t0;
    0x004271dc sb a1, 1(s0)                  |     *((s0 + 1)) = a1;
    0x004271e0 sb v0, 3(s0)                  |     *((s0 + 3)) = v0;
    0x004271e4 jalr t9                       |     t9 ();
    0x004271e8 move a0, s0                   |     a0 = s0;
    0x004271ec lw gp, 0x10(sp)               |     gp = *(var_10h);
[31m    0x004271f0 lw t9, -0x60b8(gp)            |     t9 = sym.imp.strcat;[0m
    0x004271f4 move a1, v0                   |     a1 = v0;
    0x004271f8 jalr t9                       |     t9 ();
    0x004271fc move a0, s0                   |     a0 = s0;
    0x00427200 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x00427204 lw t9, -0x7a88(gp)            |     t9 = sym.imp.open;
    0x00427208 move a1, zero                 |     a1 = 0;
    0x0042720c jalr t9                       |     t9 ();
    0x00427210 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x00427214 move s4, v0                   |     s4 = v0;
                                             |     if (v0 < 0) {
    0x00427218 bgez v0, 0x4272bc             |         
    0x0042721c lw v0, -0x7fd4(gp)            |         v0 = *((gp - 8181));
    0x00427220 move a0, s5                   |         a0 = s5;
    0x00427224 lw t9, -0x7564(gp)            |         t9 = sym.httpRpmDataGet;
                                             |         /* esilref: '/web/' */
    0x00427228 addiu v1, v0, -0x1c40         |         v1 = v0 + -0x1c40;
    0x0042722c lw v0, -0x1c40(v0)            |         v0 = *((v0 - 1808));
    0x00427230 lbu t0, 5(v1)                 |         t0 = *((v1 + 5));
    0x00427234 lbu a3, 4(v1)                 |         a3 = *((v1 + 4));
    0x00427238 srl a2, v0, 8                 |         a2 = v0 >> 8;
    0x0042723c srl v1, v0, 0x18              |         v1 = v0 >> 0x18;
    0x00427240 srl a1, v0, 0x10              |         a1 = v0 >> 0x10;
    0x00427244 sb v1, (s0)                   |         *(s0) = v1;
    0x00427248 sb a2, 2(s0)                  |         *((s0 + 2)) = a2;
    0x0042724c sb a3, 4(s0)                  |         *((s0 + 4)) = a3;
    0x00427250 sb t0, 5(s0)                  |         *((s0 + 5)) = t0;
    0x00427254 sb a1, 1(s0)                  |         *((s0 + 1)) = a1;
    0x00427258 sb v0, 3(s0)                  |         *((s0 + 3)) = v0;
    0x0042725c jalr t9                       |         t9 ();
    0x00427260 move a0, s0                   |         a0 = s0;
    0x00427264 lw gp, 0x10(sp)               |         gp = *(var_10h);
[31m    0x00427268 lw t9, -0x60b8(gp)            |         t9 = sym.imp.strcat;[0m
    0x0042726c move a1, v0                   |         a1 = v0;
    0x00427270 jalr t9                       |         t9 ();
    0x00427274 move a0, s0                   |         a0 = s0;
    0x00427278 lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x0042727c lw t9, -0x7a88(gp)            |         t9 = sym.imp.open;
    0x00427280 move a1, zero                 |         a1 = 0;
    0x00427284 jalr t9                       |         t9 ();
    0x00427288 lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x0042728c move s4, v0                   |         s4 = v0;
                                             |         if (v0 < 0) {
    0x00427290 bgez v0, 0x4272bc             |             
    0x00427294 lw a0, -0x7fd4(gp)            |             a0 = *((gp - 8181));
    0x00427298 move a1, s0                   |             a1 = s0;
    0x0042729c lw t9, -0x4d1c(gp)            |             t9 = sym.imp.printf;
                                             |             /* esilref: 'open &s error!
' */
    0x004272a0 addiu a0, a0, -0x1c38         |             a0 += -0x1c38;
    0x004272a4 jalr t9                       |             t9 ();
    0x004272a8 lw gp, 0x10(sp)               |             gp = *(var_10h);
    0x004272ac lw a0, -0x7fd4(gp)            |             a0 = *((gp - 8181));
    0x004272b0 lw t9, -0x54c0(gp)            |             t9 = sym.imp.perror;
                                             |             /* esilref: 'reason:' */
    0x004272b4 addiu a0, a0, -0x1c24         |             a0 += -0x1c24;
    0x004272b8 b 0x427370                    |             
                                             |         }
                                             |     } else {
    0x004272bc lw t9, -0x7524(gp)            |         t9 = sym.imp.stat;
    0x004272c0 move a0, s0                   |         a0 = s0;
    0x004272c4 addiu a1, sp, 0x50            |         a1 = sp + 0x50;
    0x004272c8 jalr t9                       |         t9 ();
    0x004272cc addiu a1, zero, 1             |         a1 = 1;
    0x004272d0 lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x004272d4 move a0, s5                   |         a0 = s5;
    0x004272d8 lw s2, 0x84(sp)               |         s2 = *(var_84h);
    0x004272dc lw t9, -0x71c4(gp)            |         t9 = sym.httpMimeContentLengthSet;
    0x004272e0 move a2, s2                   |         a2 = s2;
    0x004272e4 move s1, s2                   |         s1 = s2;
    0x004272e8 jalr t9                       |         t9 ();
    0x004272ec lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x004272f0 lw t9, -0x6ce0(gp)            |         t9 = sym.httpReqMemPartIdGet;
    0x004272f4 move a0, s5                   |         a0 = s5;
    0x004272f8 jalr t9                       |         t9 ();
    0x004272fc addiu a1, sp, 0xe8            |         a1 = sp + 0xe8;
    0x00427300 lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x00427304 move a0, v0                   |         a0 = v0;
    0x00427308 sw s2, 0xe8(sp)               |         *(var_e8h) = s2;
    0x0042730c lw t9, -0x6ba4(gp)            |         t9 = sym.httpConservativeAlloc;
    0x00427310 move s6, v0                   |         s6 = v0;
    0x00427314 jalr t9                       |         t9 ();
    0x00427318 lw v1, 0xe8(sp)               |         v1 = *(var_e8h);
    0x0042731c move s3, v0                   |         s3 = v0;
    0x00427320 lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x00427324 sltu v0, s2, v1               |         v0 = (s2 < v1) ? 1 : 0;
    0x00427328 lw t9, -0x693c(gp)            |         t9 = sym.httpStatusSet;
                                             |         if (v0 != 0) {
    0x0042732c movz s1, v1, v0               |             s1 = v1;
                                             |         }
                                             |         if (s3 != 0) {
    0x00427330 bnez s3, 0x427384             |             goto label_0;
                                             |         }
    0x00427334 addiu a1, zero, 0x19d         |         a1 = 0x19d;
    0x00427338 move a0, s5                   |         a0 = s5;
    0x0042733c jalr t9                       |         t9 ();
    0x00427340 lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x00427344 lw t9, -0x73c4(gp)            |         t9 = sym.httpErrStringGet;
    0x00427348 addiu a0, zero, 7             |         a0 = 7;
    0x0042734c jalr t9                       |         t9 ();
    0x00427350 move a0, s5                   |         a0 = s5;
    0x00427354 lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x00427358 lw t9, -0x5108(gp)            |         t9 = sym.httpError;
    0x0042735c move a1, v0                   |         a1 = v0;
    0x00427360 jalr t9                       |         t9 ();
    0x00427364 move a0, s4                   |         a0 = s4;
    0x00427368 lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x0042736c lw t9, -0x5f34(gp)            |         t9 = sym.forceClose;
                                             |     }
    0x00427370 jalr t9                       |     t9 ();
    0x00427374 nop                           |     
    0x00427378 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x0042737c addiu v0, zero, -1            |     v0 = -1;
    0x00427380 b 0x427488                    |     goto label_1;
                                             | label_0:
    0x00427384 move a0, s5                   |     a0 = s5;
    0x00427388 move a1, zero                 |     a1 = 0;
    0x0042738c jalr t9                       |     t9 ();
    0x00427390 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x00427394 lw t9, -0x4f60(gp)            |     t9 = sym.httpFileContentTypeGet;
    0x00427398 addiu a0, sp, 0x18            |     a0 = sp + 0x18;
    0x0042739c jalr t9                       |     t9 ();
    0x004273a0 lw gp, 0x10(sp)               |     gp = *(var_10h);
                                             |     if (v0 != 0) {
    0x004273a4 beqz v0, 0x4273dc             |         
    0x004273a8 nop                           |         
    0x004273ac lw t9, -0x50a8(gp)            |         t9 = sym.httpGetMimeTypeByFileName;
    0x004273b0 move a0, s0                   |         a0 = s0;
    0x004273b4 jalr t9                       |         t9 ();
    0x004273b8 move a0, s5                   |         a0 = s5;
    0x004273bc lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x004273c0 move a3, v0                   |         a3 = v0;
    0x004273c4 addiu a1, zero, 1             |         a1 = 1;
    0x004273c8 lw a2, -0x7fd4(gp)            |         a2 = *((gp - 8181));
    0x004273cc lw t9, -0x77d4(gp)            |         t9 = sym.httpMimeHdrSet;
                                             |         /* esilref: 'Content-Type' */
    0x004273d0 addiu a2, a2, -0x1c1c         |         a2 += -0x1c1c;
    0x004273d4 jalr t9                       |         t9 ();
    0x004273d8 lw gp, 0x10(sp)               |         gp = *(var_10h);
                                             |     }
    0x004273dc lw t9, -0x7114(gp)            |     t9 = sym.httpHeaderGenerate;
    0x004273e0 move a0, s5                   |     a0 = s5;
    0x004273e4 jalr t9                       |     t9 ();
    0x004273e8 lw gp, 0x10(sp)               |     gp = *(var_10h);
                                             |     do {
    0x004273ec lw t9, -0x656c(gp)            |         t9 = sym.imp.read;
    0x004273f0 move a2, s1                   |         a2 = s1;
    0x004273f4 move a0, s4                   |         a0 = s4;
    0x004273f8 move a1, s3                   |         a1 = s3;
    0x004273fc jalr t9                       |         t9 ();
    0x00427400 move a0, s5                   |         a0 = s5;
    0x00427404 lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x00427408 move a2, v0                   |         a2 = v0;
    0x0042740c move a1, s3                   |         a1 = s3;
    0x00427410 addu s7, s7, v0               |         s7 += v0;
    0x00427414 lw t9, -0x6b20(gp)            |         t9 = sym.httpBlockPut;
    0x00427418 move s0, v0                   |         s0 = v0;
    0x0042741c jalr t9                       |         t9 ();
    0x00427420 addiu v1, zero, -1            |         v1 = -1;
    0x00427424 lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x00427428 subu a2, s2, s7               |         __asm ("subu a2, s2, s7");
                                             |         if (v0 == v1) {
    0x0042742c beq v0, v1, 0x427450          |             goto label_2;
                                             |         }
    0x00427430 lw v1, 0xe8(sp)               |         v1 = *(var_e8h);
    0x00427434 move s1, a2                   |         s1 = a2;
    0x00427438 sltu v0, a2, v1               |         v0 = (a2 < v1) ? 1 : 0;
                                             |         if (v0 != 0) {
    0x0042743c movz s1, v1, v0               |             s1 = v1;
                                             |         }
                                             |         if (s1 == 0) {
    0x00427440 beqz s1, 0x427450             |             goto label_2;
                                             |         }
    0x00427444 nop                           |         
    0x00427448 bnez s0, 0x4273ec             |         
                                             |     } while (s0 != 0);
    0x0042744c nop                           |     
                                             | label_2:
    0x00427450 lw t9, -0x6094(gp)            |     t9 = sym.httpFileClose;
    0x00427454 addiu a0, sp, 0x18            |     a0 = sp + 0x18;
    0x00427458 jalr t9                       |     t9 ();
    0x0042745c lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x00427460 lw t9, -0x5f34(gp)            |     t9 = sym.forceClose;
    0x00427464 move a0, s4                   |     a0 = s4;
    0x00427468 jalr t9                       |     t9 ();
    0x0042746c move a0, s6                   |     a0 = s6;
    0x00427470 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x00427474 lw t9, -0x6380(gp)            |     t9 = sym.memPoolFree;
    0x00427478 move a1, s3                   |     a1 = s3;
    0x0042747c jalr t9                       |     t9 ();
    0x00427480 addiu v0, zero, 2             |     v0 = 2;
    0x00427484 lw gp, 0x10(sp)               |     gp = *(var_10h);
                                             | label_1:
    0x00427488 lw ra, 0x110(sp)              |     ra = *(var_110h);
    0x0042748c lw s7, 0x10c(sp)              |     s7 = *(var_10ch);
    0x00427490 lw s6, 0x108(sp)              |     s6 = *(var_108h);
    0x00427494 lw s5, 0x104(sp)              |     s5 = *(var_104h);
    0x00427498 lw s4, 0x100(sp)              |     s4 = *(var_100h);
    0x0042749c lw s3, 0xfc(sp)               |     s3 = *(var_fch);
    0x004274a0 lw s2, 0xf8(sp)               |     s2 = *(var_f8h);
    0x004274a4 lw s1, 0xf4(sp)               |     s1 = *(var_f4h);
    0x004274a8 lw s0, 0xf0(sp)               |     s0 = *(var_f0h);
    0x004274ac addiu sp, sp, 0x118           |     
    0x004274b0 jr ra                         |     return v0;
                                             | }
    ; assembly                               | /* r2dec pseudo code output */
                                             | /* /logs/firmware/unblob_extracted/firmware_extract/1180160-3904000.squashfs_v4_le_extract/usr/bin/httpd @ 0x4274b4 */
                                             | #include <stdint.h>
                                             |  
    ; (fcn) sym.httpRpmFsA ()                | void httpRpmFsA () {
    0x004274b4 lui gp, 0x18                  |     
    0x004274b8 addiu gp, gp, -0x7e94         |     
    0x004274bc addu gp, gp, t9               |     gp += t9;
    0x004274c0 addiu sp, sp, -0x118          |     
    0x004274c4 sw ra, 0x110(sp)              |     *(var_110h) = ra;
    0x004274c8 sw s7, 0x10c(sp)              |     *(var_10ch) = s7;
    0x004274cc sw s6, 0x108(sp)              |     *(var_108h) = s6;
    0x004274d0 sw s5, 0x104(sp)              |     *(var_104h) = s5;
    0x004274d4 sw s4, 0x100(sp)              |     *(var_100h) = s4;
    0x004274d8 sw s3, 0xfc(sp)               |     *(var_fch) = s3;
    0x004274dc sw s2, 0xf8(sp)               |     *(var_f8h) = s2;
    0x004274e0 sw s1, 0xf4(sp)               |     *(var_f4h) = s1;
    0x004274e4 sw s0, 0xf0(sp)               |     *(var_f0h) = s0;
    0x004274e8 sw gp, 0x10(sp)               |     *(var_10h) = gp;
    0x004274ec move s6, zero                 |     s6 = 0;
    0x004274f0 lw t9, -0x61dc(gp)            |     t9 = sym.httpBufferGet;
    0x004274f4 move s7, a1                   |     s7 = a1;
    0x004274f8 move s4, a0                   |     s4 = a0;
    0x004274fc jalr t9                       |     t9 ();
    0x00427500 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x00427504 move s0, v0                   |     s0 = v0;
    0x00427508 lw v0, -0x65a4(gp)            |     v0 = *(gp);
    0x0042750c lbu v0, (v0)                  |     v0 = *(v0);
    0x00427510 move a0, s4                   |     a0 = s4;
                                             |     if (v0 == 0) {
    0x00427514 bnez v0, 0x427528             |         
    0x00427518 lw t9, -0x6444(gp)            |         t9 = sym.httpMimeContentEncodingGet;
    0x0042751c move a1, zero                 |         a1 = 0;
    0x00427520 jalr t9                       |         t9 ();
    0x00427524 lw gp, 0x10(sp)               |         gp = *(var_10h);
                                             |     }
    0x00427528 lw v0, -0x7fd4(gp)            |     v0 = *((gp - 8181));
    0x0042752c move a0, s0                   |     a0 = s0;
[31m    0x00427530 lw t9, -0x60b8(gp)            |     t9 = sym.imp.strcat;[0m
    0x00427534 move a1, s7                   |     a1 = s7;
                                             |     /* esilref: '/tmp/' */
    0x00427538 addiu v1, v0, -0x1c48         |     v1 = v0 + -0x1c48;
    0x0042753c lw v0, -0x1c48(v0)            |     v0 = *((v0 - 1810));
    0x00427540 lbu t1, 5(v1)                 |     t1 = *((v1 + 5));
    0x00427544 lbu t0, 4(v1)                 |     t0 = *((v1 + 4));
    0x00427548 srl a2, v0, 0x10              |     a2 = v0 >> 0x10;
    0x0042754c srl v1, v0, 0x18              |     v1 = v0 >> 0x18;
    0x00427550 srl a3, v0, 8                 |     a3 = v0 >> 8;
    0x00427554 sb v1, (s0)                   |     *(s0) = v1;
    0x00427558 sb a2, 1(s0)                  |     *((s0 + 1)) = a2;
    0x0042755c sb a3, 2(s0)                  |     *((s0 + 2)) = a3;
    0x00427560 sb t0, 4(s0)                  |     *((s0 + 4)) = t0;
    0x00427564 sb t1, 5(s0)                  |     *((s0 + 5)) = t1;
    0x00427568 sb v0, 3(s0)                  |     *((s0 + 3)) = v0;
    0x0042756c jalr t9                       |     t9 ();
    0x00427570 move a0, s0                   |     a0 = s0;
    0x00427574 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x00427578 lw t9, -0x7a88(gp)            |     t9 = sym.imp.open;
    0x0042757c move a1, zero                 |     a1 = 0;
    0x00427580 jalr t9                       |     t9 ();
    0x00427584 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x00427588 move s3, v0                   |     s3 = v0;
                                             |     if (v0 < 0) {
    0x0042758c bgez v0, 0x42764c             |         
    0x00427590 lw v0, -0x7fd4(gp)            |         v0 = *((gp - 8181));
    0x00427594 move a0, s0                   |         a0 = s0;
[31m    0x00427598 lw t9, -0x60b8(gp)            |         t9 = sym.imp.strcat;[0m
    0x0042759c move a1, s7                   |         a1 = s7;
                                             |         /* esilref: '/web/' */
    0x004275a0 addiu v1, v0, -0x1c40         |         v1 = v0 + -0x1c40;
    0x004275a4 lw v0, -0x1c40(v0)            |         v0 = *((v0 - 1808));
    0x004275a8 lbu t1, 5(v1)                 |         t1 = *((v1 + 5));
    0x004275ac lbu t0, 4(v1)                 |         t0 = *((v1 + 4));
    0x004275b0 srl a2, v0, 0x10              |         a2 = v0 >> 0x10;
    0x004275b4 srl v1, v0, 0x18              |         v1 = v0 >> 0x18;
    0x004275b8 srl a3, v0, 8                 |         a3 = v0 >> 8;
    0x004275bc sb v1, (s0)                   |         *(s0) = v1;
    0x004275c0 sb a2, 1(s0)                  |         *((s0 + 1)) = a2;
    0x004275c4 sb a3, 2(s0)                  |         *((s0 + 2)) = a3;
    0x004275c8 sb t0, 4(s0)                  |         *((s0 + 4)) = t0;
    0x004275cc sb t1, 5(s0)                  |         *((s0 + 5)) = t1;
    0x004275d0 sb v0, 3(s0)                  |         *((s0 + 3)) = v0;
    0x004275d4 jalr t9                       |         t9 ();
    0x004275d8 move a0, s0                   |         a0 = s0;
    0x004275dc lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x004275e0 lw a1, -0x7fd4(gp)            |         a1 = *((gp - 8181));
    0x004275e4 lw t9, -0x64ac(gp)            |         t9 = sym.imp.strstr;
                                             |         /* esilref: '..' */
    0x004275e8 addiu a1, a1, -0x1c0c         |         a1 += -0x1c0c;
    0x004275ec jalr t9                       |         t9 ();
    0x004275f0 lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x004275f4 addiu a0, zero, -1            |         a0 = -1;
                                             |         if (v0 != 0) {
    0x004275f8 bnez v0, 0x4277d8             |             goto label_0;
                                             |         }
    0x004275fc lw t9, -0x7a88(gp)            |         t9 = sym.imp.open;
    0x00427600 move a0, s0                   |         a0 = s0;
    0x00427604 move a1, zero                 |         a1 = 0;
    0x00427608 jalr t9                       |         t9 ();
    0x0042760c lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x00427610 move s3, v0                   |         s3 = v0;
                                             |         if (v0 >= 0) {
    0x00427614 bgez v0, 0x42764c             |             goto label_1;
                                             |         }
    0x00427618 lw a0, -0x7fd4(gp)            |         a0 = *((gp - 8181));
    0x0042761c move a1, s0                   |         a1 = s0;
    0x00427620 lw t9, -0x4d1c(gp)            |         t9 = sym.imp.printf;
                                             |         /* esilref: 'open &s error!
' */
    0x00427624 addiu a0, a0, -0x1c38         |         a0 += -0x1c38;
    0x00427628 jalr t9                       |         t9 ();
    0x0042762c lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x00427630 lw a0, -0x7fd4(gp)            |         a0 = *((gp - 8181));
    0x00427634 lw t9, -0x54c0(gp)            |         t9 = sym.imp.perror;
                                             |         /* esilref: 'reason:' */
    0x00427638 addiu a0, a0, -0x1c24         |         a0 += -0x1c24;
    0x0042763c jalr t9                       |         t9 ();
    0x00427640 lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x00427644 addiu a0, zero, -1            |         a0 = -1;
    0x00427648 b 0x4277d8                    |         goto label_0;
                                             |     }
                                             | label_1:
    0x0042764c lw t9, -0x7524(gp)            |     t9 = sym.imp.stat;
    0x00427650 move a0, s0                   |     a0 = s0;
    0x00427654 addiu a1, sp, 0x50            |     a1 = sp + 0x50;
    0x00427658 jalr t9                       |     t9 ();
    0x0042765c addiu a1, zero, 1             |     a1 = 1;
    0x00427660 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x00427664 move a0, s4                   |     a0 = s4;
    0x00427668 lw s1, 0x84(sp)               |     s1 = *(var_84h);
    0x0042766c lw t9, -0x71c4(gp)            |     t9 = sym.httpMimeContentLengthSet;
    0x00427670 move a2, s1                   |     a2 = s1;
    0x00427674 jalr t9                       |     t9 ();
    0x00427678 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x0042767c lw t9, -0x6ce0(gp)            |     t9 = sym.httpReqMemPartIdGet;
    0x00427680 move a0, s4                   |     a0 = s4;
    0x00427684 jalr t9                       |     t9 ();
    0x00427688 addiu a1, sp, 0xe8            |     a1 = sp + 0xe8;
    0x0042768c lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x00427690 move a0, v0                   |     a0 = v0;
    0x00427694 sw s1, 0xe8(sp)               |     *(var_e8h) = s1;
    0x00427698 lw t9, -0x6ba4(gp)            |     t9 = sym.httpConservativeAlloc;
    0x0042769c move s5, v0                   |     s5 = v0;
    0x004276a0 jalr t9                       |     t9 ();
    0x004276a4 move a2, s1                   |     a2 = s1;
    0x004276a8 lw v1, 0xe8(sp)               |     v1 = *(var_e8h);
    0x004276ac move s2, v0                   |     s2 = v0;
    0x004276b0 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x004276b4 addiu a0, zero, -1            |     a0 = -1;
    0x004276b8 sltu v0, s1, v1               |     v0 = (s1 < v1) ? 1 : 0;
                                             |     if (v0 != 0) {
    0x004276bc movz a2, v1, v0               |         a2 = v1;
                                             |     }
                                             |     if (s2 == 0) {
    0x004276c0 beqz s2, 0x4277d8             |         goto label_0;
                                             |     }
                                             |     do {
    0x004276c4 lw t9, -0x656c(gp)            |         t9 = sym.imp.read;
    0x004276c8 move a0, s3                   |         a0 = s3;
    0x004276cc move a1, s2                   |         a1 = s2;
    0x004276d0 jalr t9                       |         t9 ();
    0x004276d4 move a0, s4                   |         a0 = s4;
    0x004276d8 lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x004276dc move a2, v0                   |         a2 = v0;
    0x004276e0 move a1, s2                   |         a1 = s2;
    0x004276e4 addu s6, s6, v0               |         s6 += v0;
    0x004276e8 lw t9, -0x6b20(gp)            |         t9 = sym.httpBlockPut;
    0x004276ec move s0, v0                   |         s0 = v0;
    0x004276f0 jalr t9                       |         t9 ();
    0x004276f4 addiu v1, zero, -1            |         v1 = -1;
    0x004276f8 lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x004276fc subu a2, s1, s6               |         __asm ("subu a2, s1, s6");
                                             |         if (v0 == v1) {
    0x00427700 beq v0, v1, 0x427720          |             goto label_2;
                                             |         }
    0x00427704 lw v1, 0xe8(sp)               |         v1 = *(var_e8h);
    0x00427708 sltu v0, a2, v1               |         v0 = (a2 < v1) ? 1 : 0;
                                             |         if (v0 != 0) {
    0x0042770c movz a2, v1, v0               |             a2 = v1;
                                             |         }
                                             |         if (a2 == 0) {
    0x00427710 beqz a2, 0x427720             |             goto label_2;
                                             |         }
    0x00427714 nop                           |         
    0x00427718 bnez s0, 0x4276c4             |         
                                             |     } while (s0 != 0);
    0x0042771c nop                           |     
                                             | label_2:
    0x00427720 lw t9, -0x6094(gp)            |     t9 = sym.httpFileClose;
    0x00427724 addiu a0, sp, 0x18            |     a0 = sp + 0x18;
    0x00427728 jalr t9                       |     t9 ();
    0x0042772c lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x00427730 lw t9, -0x5f34(gp)            |     t9 = sym.forceClose;
    0x00427734 move a0, s3                   |     a0 = s3;
    0x00427738 jalr t9                       |     t9 ();
    0x0042773c move a0, s5                   |     a0 = s5;
    0x00427740 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x00427744 lw t9, -0x6380(gp)            |     t9 = sym.memPoolFree;
    0x00427748 move a1, s2                   |     a1 = s2;
    0x0042774c jalr t9                       |     t9 ();
    0x00427750 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x00427754 lw t9, -0x6cc4(gp)            |     t9 = sym.getIsFirmwareBetaEdition;
    0x00427758 jalr t9                       |     t9 ();
    0x0042775c nop                           |     
    0x00427760 addiu v1, zero, 1             |     v1 = 1;
    0x00427764 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x00427768 addiu a0, zero, 2             |     a0 = 2;
                                             |     if (v0 == v1) {
    0x0042776c bne v0, v1, 0x4277d8          |         
    0x00427770 lw a1, -0x7fd4(gp)            |         a1 = *((gp - 8181));
    0x00427774 move a0, s7                   |         a0 = s7;
    0x00427778 lw t9, -0x64ac(gp)            |         t9 = sym.imp.strstr;
                                             |         /* esilref: 'htm' */
    0x0042777c addiu a1, a1, -0x1c08         |         a1 += -0x1c08;
    0x00427780 jalr t9                       |         t9 ();
    0x00427784 lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x00427788 move a0, s4                   |         a0 = s4;
                                             |         if (v0 != 0) {
    0x0042778c beqz v0, 0x4277d4             |             
    0x00427790 lw a1, -0x7fd4(gp)            |             a1 = *((gp - 8181));
    0x00427794 lw t9, -0x4f1c(gp)            |             t9 = sym.httpPrintf;
                                             |             /* esilref: '
<SCRIPT type="text/javascript">
' */
    0x00427798 addiu a1, a1, -0x1c04         |             a1 += -0x1c04;
    0x0042779c jalr t9                       |             t9 ();
    0x004277a0 move a0, s4                   |             a0 = s4;
    0x004277a4 lw gp, 0x10(sp)               |             gp = *(var_10h);
    0x004277a8 lw a1, -0x7fd4(gp)            |             a1 = *((gp - 8181));
    0x004277ac lw t9, -0x4f1c(gp)            |             t9 = sym.httpPrintf;
                                             |             /* esilref: '		document.body.style.background = "url(../images/tp-beta-mark.png)";
' */
    0x004277b0 addiu a1, a1, -0x1be0         |             a1 += -0x1be0;
    0x004277b4 jalr t9                       |             t9 ();
    0x004277b8 move a0, s4                   |             a0 = s4;
    0x004277bc lw gp, 0x10(sp)               |             gp = *(var_10h);
    0x004277c0 lw a1, -0x7fd4(gp)            |             a1 = *((gp - 8181));
    0x004277c4 lw t9, -0x4f1c(gp)            |             t9 = sym.httpPrintf;
                                             |             /* esilref: '</SCRIPT>
' */
    0x004277c8 addiu a1, a1, -0x1b98         |             a1 += -0x1b98;
    0x004277cc jalr t9                       |             t9 ();
    0x004277d0 lw gp, 0x10(sp)               |             gp = *(var_10h);
                                             |         }
    0x004277d4 addiu a0, zero, 2             |         a0 = 2;
                                             |     }
                                             | label_0:
    0x004277d8 lw ra, 0x110(sp)              |     ra = *(var_110h);
    0x004277dc move v0, a0                   |     v0 = a0;
    0x004277e0 lw s7, 0x10c(sp)              |     s7 = *(var_10ch);
    0x004277e4 lw s6, 0x108(sp)              |     s6 = *(var_108h);
    0x004277e8 lw s5, 0x104(sp)              |     s5 = *(var_104h);
    0x004277ec lw s4, 0x100(sp)              |     s4 = *(var_100h);
    0x004277f0 lw s3, 0xfc(sp)               |     s3 = *(var_fch);
    0x004277f4 lw s2, 0xf8(sp)               |     s2 = *(var_f8h);
    0x004277f8 lw s1, 0xf4(sp)               |     s1 = *(var_f4h);
    0x004277fc lw s0, 0xf0(sp)               |     s0 = *(var_f0h);
    0x00427800 addiu sp, sp, 0x118           |     
    0x00427804 jr ra                         |     return v0;
                                             | }
    ; assembly                               | /* r2dec pseudo code output */
                                             | /* /logs/firmware/unblob_extracted/firmware_extract/1180160-3904000.squashfs_v4_le_extract/usr/bin/httpd @ 0x4274b4 */
                                             | #include <stdint.h>
                                             |  
    ; (fcn) sym.httpRpmFsA ()                | void httpRpmFsA () {
    0x004274b4 lui gp, 0x18                  |     
    0x004274b8 addiu gp, gp, -0x7e94         |     
    0x004274bc addu gp, gp, t9               |     gp += t9;
    0x004274c0 addiu sp, sp, -0x118          |     
    0x004274c4 sw ra, 0x110(sp)              |     *(var_110h) = ra;
    0x004274c8 sw s7, 0x10c(sp)              |     *(var_10ch) = s7;
    0x004274cc sw s6, 0x108(sp)              |     *(var_108h) = s6;
    0x004274d0 sw s5, 0x104(sp)              |     *(var_104h) = s5;
    0x004274d4 sw s4, 0x100(sp)              |     *(var_100h) = s4;
    0x004274d8 sw s3, 0xfc(sp)               |     *(var_fch) = s3;
    0x004274dc sw s2, 0xf8(sp)               |     *(var_f8h) = s2;
    0x004274e0 sw s1, 0xf4(sp)               |     *(var_f4h) = s1;
    0x004274e4 sw s0, 0xf0(sp)               |     *(var_f0h) = s0;
    0x004274e8 sw gp, 0x10(sp)               |     *(var_10h) = gp;
    0x004274ec move s6, zero                 |     s6 = 0;
    0x004274f0 lw t9, -0x61dc(gp)            |     t9 = sym.httpBufferGet;
    0x004274f4 move s7, a1                   |     s7 = a1;
    0x004274f8 move s4, a0                   |     s4 = a0;
    0x004274fc jalr t9                       |     t9 ();
    0x00427500 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x00427504 move s0, v0                   |     s0 = v0;
    0x00427508 lw v0, -0x65a4(gp)            |     v0 = *(gp);
    0x0042750c lbu v0, (v0)                  |     v0 = *(v0);
    0x00427510 move a0, s4                   |     a0 = s4;
                                             |     if (v0 == 0) {
    0x00427514 bnez v0, 0x427528             |         
    0x00427518 lw t9, -0x6444(gp)            |         t9 = sym.httpMimeContentEncodingGet;
    0x0042751c move a1, zero                 |         a1 = 0;
    0x00427520 jalr t9                       |         t9 ();
    0x00427524 lw gp, 0x10(sp)               |         gp = *(var_10h);
                                             |     }
    0x00427528 lw v0, -0x7fd4(gp)            |     v0 = *((gp - 8181));
    0x0042752c move a0, s0                   |     a0 = s0;
[31m    0x00427530 lw t9, -0x60b8(gp)            |     t9 = sym.imp.strcat;[0m
    0x00427534 move a1, s7                   |     a1 = s7;
                                             |     /* esilref: '/tmp/' */
    0x00427538 addiu v1, v0, -0x1c48         |     v1 = v0 + -0x1c48;
    0x0042753c lw v0, -0x1c48(v0)            |     v0 = *((v0 - 1810));
    0x00427540 lbu t1, 5(v1)                 |     t1 = *((v1 + 5));
    0x00427544 lbu t0, 4(v1)                 |     t0 = *((v1 + 4));
    0x00427548 srl a2, v0, 0x10              |     a2 = v0 >> 0x10;
    0x0042754c srl v1, v0, 0x18              |     v1 = v0 >> 0x18;
    0x00427550 srl a3, v0, 8                 |     a3 = v0 >> 8;
    0x00427554 sb v1, (s0)                   |     *(s0) = v1;
    0x00427558 sb a2, 1(s0)                  |     *((s0 + 1)) = a2;
    0x0042755c sb a3, 2(s0)                  |     *((s0 + 2)) = a3;
    0x00427560 sb t0, 4(s0)                  |     *((s0 + 4)) = t0;
    0x00427564 sb t1, 5(s0)                  |     *((s0 + 5)) = t1;
    0x00427568 sb v0, 3(s0)                  |     *((s0 + 3)) = v0;
    0x0042756c jalr t9                       |     t9 ();
    0x00427570 move a0, s0                   |     a0 = s0;
    0x00427574 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x00427578 lw t9, -0x7a88(gp)            |     t9 = sym.imp.open;
    0x0042757c move a1, zero                 |     a1 = 0;
    0x00427580 jalr t9                       |     t9 ();
    0x00427584 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x00427588 move s3, v0                   |     s3 = v0;
                                             |     if (v0 < 0) {
    0x0042758c bgez v0, 0x42764c             |         
    0x00427590 lw v0, -0x7fd4(gp)            |         v0 = *((gp - 8181));
    0x00427594 move a0, s0                   |         a0 = s0;
[31m    0x00427598 lw t9, -0x60b8(gp)            |         t9 = sym.imp.strcat;[0m
    0x0042759c move a1, s7                   |         a1 = s7;
                                             |         /* esilref: '/web/' */
    0x004275a0 addiu v1, v0, -0x1c40         |         v1 = v0 + -0x1c40;
    0x004275a4 lw v0, -0x1c40(v0)            |         v0 = *((v0 - 1808));
    0x004275a8 lbu t1, 5(v1)                 |         t1 = *((v1 + 5));
    0x004275ac lbu t0, 4(v1)                 |         t0 = *((v1 + 4));
    0x004275b0 srl a2, v0, 0x10              |         a2 = v0 >> 0x10;
    0x004275b4 srl v1, v0, 0x18              |         v1 = v0 >> 0x18;
    0x004275b8 srl a3, v0, 8                 |         a3 = v0 >> 8;
    0x004275bc sb v1, (s0)                   |         *(s0) = v1;
    0x004275c0 sb a2, 1(s0)                  |         *((s0 + 1)) = a2;
    0x004275c4 sb a3, 2(s0)                  |         *((s0 + 2)) = a3;
    0x004275c8 sb t0, 4(s0)                  |         *((s0 + 4)) = t0;
    0x004275cc sb t1, 5(s0)                  |         *((s0 + 5)) = t1;
    0x004275d0 sb v0, 3(s0)                  |         *((s0 + 3)) = v0;
    0x004275d4 jalr t9                       |         t9 ();
    0x004275d8 move a0, s0                   |         a0 = s0;
    0x004275dc lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x004275e0 lw a1, -0x7fd4(gp)            |         a1 = *((gp - 8181));
    0x004275e4 lw t9, -0x64ac(gp)            |         t9 = sym.imp.strstr;
                                             |         /* esilref: '..' */
    0x004275e8 addiu a1, a1, -0x1c0c         |         a1 += -0x1c0c;
    0x004275ec jalr t9                       |         t9 ();
    0x004275f0 lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x004275f4 addiu a0, zero, -1            |         a0 = -1;
                                             |         if (v0 != 0) {
    0x004275f8 bnez v0, 0x4277d8             |             goto label_0;
                                             |         }
    0x004275fc lw t9, -0x7a88(gp)            |         t9 = sym.imp.open;
    0x00427600 move a0, s0                   |         a0 = s0;
    0x00427604 move a1, zero                 |         a1 = 0;
    0x00427608 jalr t9                       |         t9 ();
    0x0042760c lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x00427610 move s3, v0                   |         s3 = v0;
                                             |         if (v0 >= 0) {
    0x00427614 bgez v0, 0x42764c             |             goto label_1;
                                             |         }
    0x00427618 lw a0, -0x7fd4(gp)            |         a0 = *((gp - 8181));
    0x0042761c move a1, s0                   |         a1 = s0;
    0x00427620 lw t9, -0x4d1c(gp)            |         t9 = sym.imp.printf;
                                             |         /* esilref: 'open &s error!
' */
    0x00427624 addiu a0, a0, -0x1c38         |         a0 += -0x1c38;
    0x00427628 jalr t9                       |         t9 ();
    0x0042762c lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x00427630 lw a0, -0x7fd4(gp)            |         a0 = *((gp - 8181));
    0x00427634 lw t9, -0x54c0(gp)            |         t9 = sym.imp.perror;
                                             |         /* esilref: 'reason:' */
    0x00427638 addiu a0, a0, -0x1c24         |         a0 += -0x1c24;
    0x0042763c jalr t9                       |         t9 ();
    0x00427640 lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x00427644 addiu a0, zero, -1            |         a0 = -1;
    0x00427648 b 0x4277d8                    |         goto label_0;
                                             |     }
                                             | label_1:
    0x0042764c lw t9, -0x7524(gp)            |     t9 = sym.imp.stat;
    0x00427650 move a0, s0                   |     a0 = s0;
    0x00427654 addiu a1, sp, 0x50            |     a1 = sp + 0x50;
    0x00427658 jalr t9                       |     t9 ();
    0x0042765c addiu a1, zero, 1             |     a1 = 1;
    0x00427660 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x00427664 move a0, s4                   |     a0 = s4;
    0x00427668 lw s1, 0x84(sp)               |     s1 = *(var_84h);
    0x0042766c lw t9, -0x71c4(gp)            |     t9 = sym.httpMimeContentLengthSet;
    0x00427670 move a2, s1                   |     a2 = s1;
    0x00427674 jalr t9                       |     t9 ();
    0x00427678 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x0042767c lw t9, -0x6ce0(gp)            |     t9 = sym.httpReqMemPartIdGet;
    0x00427680 move a0, s4                   |     a0 = s4;
    0x00427684 jalr t9                       |     t9 ();
    0x00427688 addiu a1, sp, 0xe8            |     a1 = sp + 0xe8;
    0x0042768c lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x00427690 move a0, v0                   |     a0 = v0;
    0x00427694 sw s1, 0xe8(sp)               |     *(var_e8h) = s1;
    0x00427698 lw t9, -0x6ba4(gp)            |     t9 = sym.httpConservativeAlloc;
    0x0042769c move s5, v0                   |     s5 = v0;
    0x004276a0 jalr t9                       |     t9 ();
    0x004276a4 move a2, s1                   |     a2 = s1;
    0x004276a8 lw v1, 0xe8(sp)               |     v1 = *(var_e8h);
    0x004276ac move s2, v0                   |     s2 = v0;
    0x004276b0 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x004276b4 addiu a0, zero, -1            |     a0 = -1;
    0x004276b8 sltu v0, s1, v1               |     v0 = (s1 < v1) ? 1 : 0;
                                             |     if (v0 != 0) {
    0x004276bc movz a2, v1, v0               |         a2 = v1;
                                             |     }
                                             |     if (s2 == 0) {
    0x004276c0 beqz s2, 0x4277d8             |         goto label_0;
                                             |     }
                                             |     do {
    0x004276c4 lw t9, -0x656c(gp)            |         t9 = sym.imp.read;
    0x004276c8 move a0, s3                   |         a0 = s3;
    0x004276cc move a1, s2                   |         a1 = s2;
    0x004276d0 jalr t9                       |         t9 ();
    0x004276d4 move a0, s4                   |         a0 = s4;
    0x004276d8 lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x004276dc move a2, v0                   |         a2 = v0;
    0x004276e0 move a1, s2                   |         a1 = s2;
    0x004276e4 addu s6, s6, v0               |         s6 += v0;
    0x004276e8 lw t9, -0x6b20(gp)            |         t9 = sym.httpBlockPut;
    0x004276ec move s0, v0                   |         s0 = v0;
    0x004276f0 jalr t9                       |         t9 ();
    0x004276f4 addiu v1, zero, -1            |         v1 = -1;
    0x004276f8 lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x004276fc subu a2, s1, s6               |         __asm ("subu a2, s1, s6");
                                             |         if (v0 == v1) {
    0x00427700 beq v0, v1, 0x427720          |             goto label_2;
                                             |         }
    0x00427704 lw v1, 0xe8(sp)               |         v1 = *(var_e8h);
    0x00427708 sltu v0, a2, v1               |         v0 = (a2 < v1) ? 1 : 0;
                                             |         if (v0 != 0) {
    0x0042770c movz a2, v1, v0               |             a2 = v1;
                                             |         }
                                             |         if (a2 == 0) {
    0x00427710 beqz a2, 0x427720             |             goto label_2;
                                             |         }
    0x00427714 nop                           |         
    0x00427718 bnez s0, 0x4276c4             |         
                                             |     } while (s0 != 0);
    0x0042771c nop                           |     
                                             | label_2:
    0x00427720 lw t9, -0x6094(gp)            |     t9 = sym.httpFileClose;
    0x00427724 addiu a0, sp, 0x18            |     a0 = sp + 0x18;
    0x00427728 jalr t9                       |     t9 ();
    0x0042772c lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x00427730 lw t9, -0x5f34(gp)            |     t9 = sym.forceClose;
    0x00427734 move a0, s3                   |     a0 = s3;
    0x00427738 jalr t9                       |     t9 ();
    0x0042773c move a0, s5                   |     a0 = s5;
    0x00427740 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x00427744 lw t9, -0x6380(gp)            |     t9 = sym.memPoolFree;
    0x00427748 move a1, s2                   |     a1 = s2;
    0x0042774c jalr t9                       |     t9 ();
    0x00427750 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x00427754 lw t9, -0x6cc4(gp)            |     t9 = sym.getIsFirmwareBetaEdition;
    0x00427758 jalr t9                       |     t9 ();
    0x0042775c nop                           |     
    0x00427760 addiu v1, zero, 1             |     v1 = 1;
    0x00427764 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x00427768 addiu a0, zero, 2             |     a0 = 2;
                                             |     if (v0 == v1) {
    0x0042776c bne v0, v1, 0x4277d8          |         
    0x00427770 lw a1, -0x7fd4(gp)            |         a1 = *((gp - 8181));
    0x00427774 move a0, s7                   |         a0 = s7;
    0x00427778 lw t9, -0x64ac(gp)            |         t9 = sym.imp.strstr;
                                             |         /* esilref: 'htm' */
    0x0042777c addiu a1, a1, -0x1c08         |         a1 += -0x1c08;
    0x00427780 jalr t9                       |         t9 ();
    0x00427784 lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x00427788 move a0, s4                   |         a0 = s4;
                                             |         if (v0 != 0) {
    0x0042778c beqz v0, 0x4277d4             |             
    0x00427790 lw a1, -0x7fd4(gp)            |             a1 = *((gp - 8181));
    0x00427794 lw t9, -0x4f1c(gp)            |             t9 = sym.httpPrintf;
                                             |             /* esilref: '
<SCRIPT type="text/javascript">
' */
    0x00427798 addiu a1, a1, -0x1c04         |             a1 += -0x1c04;
    0x0042779c jalr t9                       |             t9 ();
    0x004277a0 move a0, s4                   |             a0 = s4;
    0x004277a4 lw gp, 0x10(sp)               |             gp = *(var_10h);
    0x004277a8 lw a1, -0x7fd4(gp)            |             a1 = *((gp - 8181));
    0x004277ac lw t9, -0x4f1c(gp)            |             t9 = sym.httpPrintf;
                                             |             /* esilref: '		document.body.style.background = "url(../images/tp-beta-mark.png)";
' */
    0x004277b0 addiu a1, a1, -0x1be0         |             a1 += -0x1be0;
    0x004277b4 jalr t9                       |             t9 ();
    0x004277b8 move a0, s4                   |             a0 = s4;
    0x004277bc lw gp, 0x10(sp)               |             gp = *(var_10h);
    0x004277c0 lw a1, -0x7fd4(gp)            |             a1 = *((gp - 8181));
    0x004277c4 lw t9, -0x4f1c(gp)            |             t9 = sym.httpPrintf;
                                             |             /* esilref: '</SCRIPT>
' */
    0x004277c8 addiu a1, a1, -0x1b98         |             a1 += -0x1b98;
    0x004277cc jalr t9                       |             t9 ();
    0x004277d0 lw gp, 0x10(sp)               |             gp = *(var_10h);
                                             |         }
    0x004277d4 addiu a0, zero, 2             |         a0 = 2;
                                             |     }
                                             | label_0:
    0x004277d8 lw ra, 0x110(sp)              |     ra = *(var_110h);
    0x004277dc move v0, a0                   |     v0 = a0;
    0x004277e0 lw s7, 0x10c(sp)              |     s7 = *(var_10ch);
    0x004277e4 lw s6, 0x108(sp)              |     s6 = *(var_108h);
    0x004277e8 lw s5, 0x104(sp)              |     s5 = *(var_104h);
    0x004277ec lw s4, 0x100(sp)              |     s4 = *(var_100h);
    0x004277f0 lw s3, 0xfc(sp)               |     s3 = *(var_fch);
    0x004277f4 lw s2, 0xf8(sp)               |     s2 = *(var_f8h);
    0x004277f8 lw s1, 0xf4(sp)               |     s1 = *(var_f4h);
    0x004277fc lw s0, 0xf0(sp)               |     s0 = *(var_f0h);
    0x00427800 addiu sp, sp, 0x118           |     
    0x00427804 jr ra                         |     return v0;
                                             | }
    ; assembly                                       | /* r2dec pseudo code output */
                                                     | /* /logs/firmware/unblob_extracted/firmware_extract/1180160-3904000.squashfs_v4_le_extract/usr/bin/httpd @ 0x470b20 */
                                                     | #include <stdint.h>
                                                     |  
    ; (fcn) sym.httpSendRedirectRespond ()           | void httpSendRedirectRespond () {
    0x00470b20 lui gp, 0x13                          |     
    0x00470b24 addiu gp, gp, -0x1500                 |     
    0x00470b28 addu gp, gp, t9                       |     gp += t9;
    0x00470b2c addiu sp, sp, -0xe8                   |     
    0x00470b30 sw ra, 0xe0(sp)                       |     *(var_e0h) = ra;
    0x00470b34 sw s3, 0xdc(sp)                       |     *(var_dch) = s3;
    0x00470b38 sw s2, 0xd8(sp)                       |     *(var_d8h) = s2;
    0x00470b3c sw s1, 0xd4(sp)                       |     *(var_d4h) = s1;
    0x00470b40 sw s0, 0xd0(sp)                       |     *(var_d0h) = s0;
    0x00470b44 sw gp, 0x20(sp)                       |     *(var_20h) = gp;
    0x00470b48 lw v0, -0x7fd4(gp)                    |     v0 = *((gp - 8181));
    0x00470b4c move s3, a0                           |     s3 = a0;
    0x00470b50 addiu t0, sp, 0x28                    |     t0 = sp + 0x28;
                                                     |     /* esilref: 'HTTP/1.1 301 Moved
Location: http://' */
    0x00470b54 addiu a3, v0, 0x7c10                  |     a3 = v0 + 0x7c10;
    0x00470b58 addiu a2, a3, 0x20                    |     a2 = a3 + 0x20;
                                                     |     do {
    0x00470b5c lw v0, (a3)                           |         v0 = *(a3);
    0x00470b60 lw v1, 4(a3)                          |         v1 = *((a3 + 1));
    0x00470b64 lw a0, 8(a3)                          |         a0 = *((a3 + 2));
    0x00470b68 lw a1, 0xc(a3)                        |         a1 = *((a3 + 3));
    0x00470b6c addiu a3, a3, 0x10                    |         a3 += 0x10;
    0x00470b70 sw v0, (t0)                           |         *(t0) = v0;
    0x00470b74 sw v1, 4(t0)                          |         *(var_4h) = v1;
    0x00470b78 sw a0, 8(t0)                          |         *(var_8h) = a0;
    0x00470b7c sw a1, 0xc(t0)                        |         *(var_ch) = a1;
    0x00470b80 addiu t0, t0, 0x10                    |         t0 += 0x10;
    0x00470b84 bne a3, a2, 0x470b5c                  |         
                                                     |     } while (a3 != a2);
    0x00470b88 lw v1, -0x7fd4(gp)                    |     v1 = *((gp - 8181));
    0x00470b8c addiu a0, sp, 0xb0                    |     a0 = sp + 0xb0;
    0x00470b90 lhu a2, 4(a3)                         |     a2 = *((a3 + 2));
    0x00470b94 addiu s2, sp, 0xb8                    |     s2 = sp + 0xb8;
    0x00470b98 addiu v0, v1, 0x7c38                  |     v0 = v1 + 0x7c38;
    0x00470b9c addiu s0, sp, 0x58                    |     s0 = sp + 0x58;
    0x00470ba0 lbu a1, 4(v0)                         |     a1 = *((v0 + 4));
    0x00470ba4 addiu s1, sp, 0x98                    |     s1 = sp + 0x98;
    0x00470ba8 lw v0, (a3)                           |     v0 = *(a3);
    0x00470bac lw v1, 0x7c38(v1)                     |     v1 = *((v1 + 7950));
    0x00470bb0 lw t9, -0x5ff8(gp)                    |     t9 = sym.swGetLanCfg;
    0x00470bb4 sh a2, 4(t0)                          |     *(var_4h_2) = a2;
    0x00470bb8 sw v0, (t0)                           |     *(t0) = v0;
    0x00470bbc sw v1, 0x50(sp)                       |     *(var_50h) = v1;
    0x00470bc0 sb a1, 0x54(sp)                       |     *(var_54h) = a1;
    0x00470bc4 jalr t9                               |     t9 ();
    0x00470bc8 lw gp, 0x20(sp)                       |     gp = *(var_20h);
    0x00470bcc lw t9, -0x7580(gp)                    |     t9 = sym.swGetFirewallHttpCtrlPort;
    0x00470bd0 jalr t9                               |     t9 ();
    0x00470bd4 nop                                   |     
    0x00470bd8 move a0, s2                           |     a0 = s2;
    0x00470bdc lw a2, 0xb0(sp)                       |     a2 = *(var_b0h);
    0x00470be0 lw gp, 0x20(sp)                       |     gp = *(var_20h);
    0x00470be4 andi v1, a2, 0xff00                   |     v1 = a2 & 0xff00;
    0x00470be8 andi t0, a2, 0xff                     |     t0 = a2 & 0xff;
    0x00470bec lw a1, -0x7fd4(gp)                    |     a1 = *((gp - 8181));
    0x00470bf0 srl v1, v1, 8                         |     v1 >>= 8;
    0x00470bf4 lw t9, -0x70a4(gp)                    |     t9 = sym.imp.sprintf;
    0x00470bf8 srl a3, a2, 0x10                      |     a3 = a2 >> 0x10;
    0x00470bfc sw v1, 0x10(sp)                       |     *(var_10h) = v1;
    0x00470c00 andi a3, a3, 0xff                     |     a3 &= 0xff;
    0x00470c04 sw t0, 0x14(sp)                       |     *(var_14h) = t0;
                                                     |     /* esilref: '&d.&d.&d.&d:&d' */
    0x00470c08 addiu a1, a1, 0x7c40                  |     a1 += 0x7c40;
    0x00470c0c srl a2, a2, 0x18                      |     a2 >>= 0x18;
    0x00470c10 sw v0, 0x18(sp)                       |     *(var_18h) = v0;
    0x00470c14 jalr t9                               |     t9 ();
    0x00470c18 move a0, s0                           |     a0 = s0;
    0x00470c1c lw gp, 0x20(sp)                       |     gp = *(var_20h);
    0x00470c20 move a1, zero                         |     a1 = 0;
    0x00470c24 lw t9, -0x6c0c(gp)                    |     t9 = sym.imp.memset;
    0x00470c28 addiu a2, zero, 0x40                  |     a2 = 0x40;
    0x00470c2c jalr t9                               |     t9 ();
    0x00470c30 addiu a2, zero, 0x16                  |     a2 = 0x16;
    0x00470c34 lw gp, 0x20(sp)                       |     gp = *(var_20h);
    0x00470c38 move a0, s1                           |     a0 = s1;
    0x00470c3c lw t9, -0x6c0c(gp)                    |     t9 = sym.imp.memset;
    0x00470c40 move a1, zero                         |     a1 = 0;
    0x00470c44 jalr t9                               |     t9 ();
    0x00470c48 move a0, s1                           |     a0 = s1;
    0x00470c4c lw gp, 0x20(sp)                       |     gp = *(var_20h);
    0x00470c50 lw t9, -0x4b5c(gp)                    |     t9 = sym.imp.strcpy;
    0x00470c54 move a1, s2                           |     a1 = s2;
    0x00470c58 jalr t9                               |     t9 ();
    0x00470c5c move a0, s0                           |     a0 = s0;
    0x00470c60 lw gp, 0x20(sp)                       |     gp = *(var_20h);
    0x00470c64 lw t9, -0x4b5c(gp)                    |     t9 = sym.imp.strcpy;
    0x00470c68 addiu a1, sp, 0x28                    |     a1 = sp + 0x28;
    0x00470c6c jalr t9                               |     t9 ();
    0x00470c70 move a0, s0                           |     a0 = s0;
    0x00470c74 lw gp, 0x20(sp)                       |     gp = *(var_20h);
[31m    0x00470c78 lw t9, -0x60b8(gp)                    |     t9 = sym.imp.strcat;[0m
    0x00470c7c move a1, s1                           |     a1 = s1;
    0x00470c80 jalr t9                               |     t9 ();
    0x00470c84 move a0, s0                           |     a0 = s0;
    0x00470c88 lw gp, 0x20(sp)                       |     gp = *(var_20h);
[31m    0x00470c8c lw t9, -0x60b8(gp)                    |     t9 = sym.imp.strcat;[0m
    0x00470c90 addiu a1, sp, 0x50                    |     a1 = sp + 0x50;
    0x00470c94 jalr t9                               |     t9 ();
    0x00470c98 move a0, s3                           |     a0 = s3;
    0x00470c9c lw gp, 0x20(sp)                       |     gp = *(var_20h);
    0x00470ca0 move a1, s0                           |     a1 = s0;
    0x00470ca4 addiu a2, zero, 0x40                  |     a2 = 0x40;
    0x00470ca8 lw t9, -0x5bc4(gp)                    |     t9 = sym.imp.send;
    0x00470cac move a3, zero                         |     a3 = 0;
    0x00470cb0 jalr t9                               |     t9 ();
    0x00470cb4 lw gp, 0x20(sp)                       |     gp = *(var_20h);
    0x00470cb8 move v1, zero                         |     v1 = 0;
                                                     |     if (v0 <= 0) {
    0x00470cbc bgtz v0, 0x470cd8                     |         
    0x00470cc0 lw a0, -0x7fd4(gp)                    |         a0 = *((gp - 8181));
    0x00470cc4 lw t9, -0x54c0(gp)                    |         t9 = sym.imp.perror;
                                                     |         /* esilref: 'httpSendRedirectRespond' */
    0x00470cc8 addiu a0, a0, 0x7c50                  |         a0 += 0x7c50;
    0x00470ccc jalr t9                               |         t9 ();
    0x00470cd0 addiu v1, zero, -1                    |         v1 = -1;
    0x00470cd4 lw gp, 0x20(sp)                       |         gp = *(var_20h);
                                                     |     }
    0x00470cd8 lw ra, 0xe0(sp)                       |     ra = *(var_e0h);
    0x00470cdc move v0, v1                           |     v0 = v1;
    0x00470ce0 lw s3, 0xdc(sp)                       |     s3 = *(var_dch);
    0x00470ce4 lw s2, 0xd8(sp)                       |     s2 = *(var_d8h);
    0x00470ce8 lw s1, 0xd4(sp)                       |     s1 = *(var_d4h);
    0x00470cec lw s0, 0xd0(sp)                       |     s0 = *(var_d0h);
    0x00470cf0 addiu sp, sp, 0xe8                    |     
    0x00470cf4 jr ra                                 |     return v0;
                                                     | }
    ; assembly                               | /* r2dec pseudo code output */
                                             | /* /logs/firmware/unblob_extracted/firmware_extract/1180160-3904000.squashfs_v4_le_extract/usr/bin/httpd @ 0x4eb2f0 */
                                             | #include <stdint.h>
                                             |  
    ; (fcn) sym.http_SendMessage ()          | void http_SendMessage () {
    0x004eb2f0 lui gp, 0xb                   |     
    0x004eb2f4 addiu gp, gp, 0x4330          |     
    0x004eb2f8 addu gp, gp, t9               |     gp += t9;
    0x004eb2fc addiu sp, sp, -0x458          |     
    0x004eb300 sw ra, 0x454(sp)              |     *(var_454h) = ra;
    0x004eb304 sw fp, 0x450(sp)              |     *(var_450h) = fp;
    0x004eb308 sw s7, 0x44c(sp)              |     *(var_44ch) = s7;
    0x004eb30c sw s6, 0x448(sp)              |     *(var_448h) = s6;
    0x004eb310 sw s5, 0x444(sp)              |     *(var_444h) = s5;
    0x004eb314 sw s4, 0x440(sp)              |     *(var_440h) = s4;
    0x004eb318 sw s3, 0x43c(sp)              |     *(var_43ch) = s3;
    0x004eb31c sw s2, 0x438(sp)              |     *(var_438h) = s2;
    0x004eb320 sw s1, 0x434(sp)              |     *(var_434h) = s1;
    0x004eb324 sw s0, 0x430(sp)              |     *(var_430h) = s0;
    0x004eb328 sw gp, 0x10(sp)               |     *(var_10h) = gp;
    0x004eb32c move s5, zero                 |     s5 = 0;
    0x004eb330 lb s0, (a2)                   |     s0 = *(a2);
    0x004eb334 move fp, a0                   |     fp = a0;
    0x004eb338 sw a1, 0x45c(sp)              |     *(arg_45ch) = a1;
    0x004eb33c addiu s1, a2, 1               |     s1 = a2 + 1;
    0x004eb340 sw a3, 0x464(sp)              |     *(arg_464h) = a3;
    0x004eb344 move s6, zero                 |     s6 = 0;
    0x004eb348 move s4, zero                 |     s4 = 0;
    0x004eb34c addiu s7, zero, 0x3e8         |     s7 = 0x3e8;
    0x004eb350 sw zero, 0x428(sp)            |     *(var_428h) = 0;
    0x004eb354 addiu s2, sp, 0x464           |     s2 = sp + 0x464;
                                             | label_1:
    0x004eb358 addiu v0, zero, 0x49          |     v0 = 0x49;
                                             |     if (s0 == 0) {
    0x004eb35c beqz s0, 0x4eb72c             |         goto label_2;
                                             |     }
    0x004eb360 addiu v0, zero, 0x66          |     v0 = 0x66;
                                             |     if (s0 == v0) {
    0x004eb364 bne s0, v0, 0x4eb3c0          |         
    0x004eb368 lw a0, -0x7fdc(gp)            |         a0 = *((gp - 8183));
    0x004eb36c addiu s6, sp, 0x22            |         s6 = sp + 0x22;
    0x004eb370 lw s4, (s2)                   |         s4 = *(s2);
    0x004eb374 addiu a2, zero, 0x169         |         a2 = 0x169;
    0x004eb378 lw a1, -0x7fdc(gp)            |         a1 = *((gp - 8183));
                                             |         /* esilref: 'Instr' */
    0x004eb37c addiu a0, a0, -0x75ec         |         a0 += -0x75ec;
    0x004eb380 lw a3, -0x7fdc(gp)            |         a3 = *((gp - 8183));
    0x004eb384 addiu s2, s2, 4               |         s2 += 4;
                                             |         /* esilref: 'libUpnp/src/httpreadwrite.c' */
    0x004eb388 addiu a1, a1, -0x75e4         |         a1 += -0x75e4;
    0x004eb38c lw t9, -0x7b30(gp)            |         t9 = sym.imp.__assert;
                                             |         /* esilref: 'http_SendMessage' */
    0x004eb390 addiu a3, a3, -0x7600         |         a3 += -0x7600;
                                             |         if (s4 == 0) {
    0x004eb394 bnez s4, 0x4eb3a4             |             
    0x004eb398 jalr t9                       |             t9 ();
    0x004eb39c nop                           |             
    0x004eb3a0 lw gp, 0x10(sp)               |             gp = *(var_10h);
                                             |         }
    0x004eb3a4 lw v0, 0xdc(s4)               |         v0 = *((s4 + 55));
    0x004eb3a8 slti v1, v0, 0                |         v1 = (v0 < 0) ? 1 : 0;
    0x004eb3ac move s5, v0                   |         s5 = v0;
                                             |         if (v1 == 0) {
    0x004eb3b0 movn s5, s7, v1               |             s5 = s7;
                                             |         }
    0x004eb3b4 slti v0, s5, 0x3e8            |         v0 = (s5 < 0x3e8) ? 1 : 0;
                                             |         if (v0 == 0) {
    0x004eb3b8 movn s7, s5, v0               |             s7 = s5;
                                             |         }
    0x004eb3bc addiu v0, zero, 0x66          |         v0 = 0x66;
                                             |     }
    0x004eb3c0 addiu v1, s2, 4               |     v1 = s2 + 4;
                                             |     if (s0 != v0) {
    0x004eb3c4 bne s0, v0, 0x4eb6e4          |         goto label_3;
                                             |     }
    0x004eb3c8 lw a0, (s2)                   |     a0 = *(s2);
                                             |     if (s4 != 0) {
    0x004eb3cc beqz s4, 0x4eb3f8             |         
    0x004eb3d0 nop                           |         
    0x004eb3d4 lw v0, (s4)                   |         v0 = *(s4);
                                             |         if (v0 == 0) {
    0x004eb3d8 beqz v0, 0x4eb3f8             |             goto label_4;
                                             |         }
    0x004eb3dc nop                           |         
    0x004eb3e0 lw v0, -0x4f80(gp)            |         v0 = *(gp);
    0x004eb3e4 lw t9, 4(v0)                  |         t9 = *((v0 + 1));
    0x004eb3e8 move a1, zero                 |         a1 = 0;
    0x004eb3ec jalr t9                       |         t9 ();
    0x004eb3f0 b 0x4eb404                    |         goto label_5;
    0x004eb3f4 nop                           |         
                                             |     }
                                             | label_4:
    0x004eb3f8 lw t9, -0x7a38(gp)            |     t9 = sym.sfOpen;
    0x004eb3fc jalr t9                       |     t9 ();
    0x004eb400 nop                           |     
                                             | label_5:
    0x004eb404 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x004eb408 move s3, v0                   |     s3 = v0;
    0x004eb40c addiu v1, zero, -0x1f7        |     v1 = -0x1f7;
                                             |     if (v0 == 0) {
    0x004eb410 beqz v0, 0x4eb730             |         goto label_6;
                                             |     }
                                             |     if (s4 == 0) {
    0x004eb414 beqz s4, 0x4eb4ac             |         goto label_0;
                                             |     }
    0x004eb418 nop                           |     
    0x004eb41c lw v1, 8(s4)                  |     v1 = *((s4 + 2));
                                             |     if (v1 != 0) {
    0x004eb420 beqz v1, 0x4eb450             |         
    0x004eb424 nop                           |         
    0x004eb428 lw v0, (s4)                   |         v0 = *(s4);
    0x004eb42c move a0, s3                   |         a0 = s3;
                                             |         if (v0 == 0) {
    0x004eb430 beqz v0, 0x4eb458             |             goto label_7;
                                             |         }
    0x004eb434 lw v0, -0x4f80(gp)            |         v0 = *(gp);
    0x004eb438 lw a1, 0xd8(s4)               |         a1 = *((s4 + 54));
    0x004eb43c lw t9, 0x10(v0)               |         t9 = *((v0 + 4));
    0x004eb440 addiu a2, zero, 1             |         a2 = 1;
    0x004eb444 jalr t9                       |         t9 ();
    0x004eb448 b 0x4eb470                    |         goto label_8;
    0x004eb44c nop                           |         
                                             |     }
                                             |     if (s4 == 0) {
    0x004eb450 beqz s4, 0x4eb4ac             |         goto label_0;
                                             |     }
    0x004eb454 nop                           |     
                                             | label_7:
    0x004eb458 move a0, s3                   |     a0 = s3;
                                             |     if (v1 == 0) {
    0x004eb45c beqz v1, 0x4eb4ac             |         goto label_0;
                                             |     }
    0x004eb460 lw t9, -0x6ed0(gp)            |     t9 = sym.sfSeek;
    0x004eb464 lw a1, 0xd8(s4)               |     a1 = *((s4 + 54));
    0x004eb468 addiu a2, zero, 1             |     a2 = 1;
    0x004eb46c jalr t9                       |     t9 ();
                                             | label_8:
    0x004eb470 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x004eb474 addiu v1, zero, -0x1f7        |     v1 = -0x1f7;
                                             |     if (v0 != 0) {
    0x004eb478 bnez v0, 0x4eb730             |         goto label_6;
                                             |     }
    0x004eb47c b 0x4eb4ac                    |     goto label_0;
    0x004eb480 nop                           |     
                                             |     do {
    0x004eb484 lw a1, -0x7fdc(gp)            |         a1 = *((gp - 8183));
    0x004eb488 move a0, fp                   |         a0 = fp;
    0x004eb48c lw t9, -0x61f8(gp)            |         t9 = sym.sock_write;
    0x004eb490 addiu a2, zero, 5             |         a2 = 5;
    0x004eb494 lw a3, 0x45c(sp)              |         a3 = *(arg_45ch);
                                             |         /* esilref: '0

' */
    0x004eb498 addiu a1, a1, -0x75c8         |         a1 += -0x75c8;
    0x004eb49c jalr t9                       |         t9 ();
    0x004eb4a0 lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x004eb4a4 b 0x4eb69c                    |         goto label_9;
    0x004eb4a8 nop                           |         
                                             |         if (s5 == 0) {
                                             | label_0:
    0x004eb4ac beqz s5, 0x4eb69c             |             goto label_9;
                                             |         }
    0x004eb4b0 nop                           |         
    0x004eb4b4 slt v0, s5, s7                |         v0 = (s5 < s7) ? 1 : 0;
                                             |         if (s4 != 0) {
    0x004eb4b8 beqz s4, 0x4eb550             |             
    0x004eb4bc lw v1, (s4)                   |             v1 = *(s4);
                                             |             if (v0 == 0) {
    0x004eb4c0 bnez v0, 0x4eb4f4             |                 
    0x004eb4c4 nop                           |                 
                                             |                 if (v1 != 0) {
    0x004eb4c8 beqz v1, 0x4eb4e0             |                     
    0x004eb4cc nop                           |                     
    0x004eb4d0 move a0, s3                   |                     a0 = s3;
    0x004eb4d4 move a1, s6                   |                     a1 = s6;
    0x004eb4d8 move a2, s7                   |                     a2 = s7;
    0x004eb4dc b 0x4eb508                    |                     
                                             |                 } else {
    0x004eb4e0 lw t9, -0x59a8(gp)            |                     t9 = sym.sfRead;
    0x004eb4e4 move a0, s6                   |                     a0 = s6;
    0x004eb4e8 addiu a1, zero, 1             |                     a1 = 1;
    0x004eb4ec move a2, s7                   |                     a2 = s7;
    0x004eb4f0 b 0x4eb52c                    |                     
                                             |                 } else {
    0x004eb4f4 move a0, s6                   |                     a0 = s6;
                                             |                     if (v1 == 0) {
    0x004eb4f8 beqz v1, 0x4eb520             |                         goto label_10;
                                             |                     }
    0x004eb4fc move a0, s3                   |                     a0 = s3;
    0x004eb500 move a1, s6                   |                     a1 = s6;
    0x004eb504 move a2, s5                   |                     a2 = s5;
                                             |                 }
    0x004eb508 lw v0, -0x4f80(gp)            |                 v0 = *(gp);
    0x004eb50c lw t9, 8(v0)                  |                 t9 = *((v0 + 2));
    0x004eb510 jalr t9                       |                 t9 ();
    0x004eb514 nop                           |                 
    0x004eb518 move s2, v0                   |                 s2 = v0;
    0x004eb51c b 0x4eb538                    |                 goto label_11;
                                             | label_10:
    0x004eb520 lw t9, -0x59a8(gp)            |                 t9 = sym.sfRead;
    0x004eb524 addiu a1, zero, 1             |                 a1 = 1;
    0x004eb528 move a2, s5                   |                 a2 = s5;
                                             |             }
    0x004eb52c move a3, s3                   |             a3 = s3;
    0x004eb530 jalr t9                       |             t9 ();
    0x004eb534 move s2, v0                   |             s2 = v0;
                                             | label_11:
    0x004eb538 lw v0, 0xdc(s4)               |             v0 = *((s4 + 55));
    0x004eb53c lw gp, 0x10(sp)               |             gp = *(var_10h);
    0x004eb540 subu s5, s5, s2               |             __asm ("subu s5, s5, s2");
                                             |             if (v0 >= 0) {
    0x004eb544 bgez v0, 0x4eb570             |                 goto label_12;
                                             |             }
    0x004eb548 move s5, s7                   |             s5 = s7;
    0x004eb54c b 0x4eb570                    |             
                                             |         } else {
    0x004eb550 lw t9, -0x59a8(gp)            |             t9 = sym.sfRead;
    0x004eb554 move a0, s6                   |             a0 = s6;
    0x004eb558 addiu a1, zero, 1             |             a1 = 1;
    0x004eb55c move a2, s7                   |             a2 = s7;
    0x004eb560 move a3, s3                   |             a3 = s3;
    0x004eb564 jalr t9                       |             t9 ();
    0x004eb568 lw gp, 0x10(sp)               |             gp = *(var_10h);
    0x004eb56c move s2, v0                   |             s2 = v0;
                                             |         }
                                             |         if (s2 != 0) {
                                             | label_12:
    0x004eb570 bnez s2, 0x4eb594             |             goto label_13;
                                             |         }
    0x004eb574 nop                           |         
    0x004eb578 addiu v0, zero, -0x1f7        |         v0 = -0x1f7;
                                             |         if (s4 == 0) {
    0x004eb57c beqz s4, 0x4eb58c             |             goto label_14;
                                             |         }
    0x004eb580 lw v0, 4(s4)                  |         v0 = *((s4 + 1));
    0x004eb584 addiu v0, zero, -0x1f7        |         v0 = -0x1f7;
    0x004eb588 bnez v0, 0x4eb484             |         
                                             |     } while (v0 != 0);
                                             | label_14:
    0x004eb58c sw v0, 0x428(sp)              |     *(var_428h) = v0;
    0x004eb590 b 0x4eb69c                    |     goto label_9;
                                             |     if (s4 == 0) {
                                             | label_13:
    0x004eb594 beqz s4, 0x4eb678             |         goto label_15;
                                             |     }
    0x004eb598 nop                           |     
    0x004eb59c lw v0, 4(s4)                  |     v0 = *((s4 + 1));
    0x004eb5a0 addu v1, s6, s2               |     v1 = s6 + s2;
                                             |     if (v0 == 0) {
    0x004eb5a4 beqz v0, 0x4eb678             |         goto label_15;
                                             |     }
    0x004eb5a8 lw v0, -0x7fdc(gp)            |     v0 = *((gp - 8183));
    0x004eb5ac lw a1, -0x7fdc(gp)            |     a1 = *((gp - 8183));
    0x004eb5b0 addiu s0, sp, 0x418           |     s0 = sp + 0x418;
                                             |     /* esilref: '
' */
    0x004eb5b4 addiu s1, v0, -0x75c0         |     s1 = v0 + -0x75c0;
    0x004eb5b8 move a2, s2                   |     a2 = s2;
    0x004eb5bc lbu a3, -0x75c0(v0)           |     a3 = *((v0 - 30144));
                                             |     /* esilref: '&x' */
    0x004eb5c0 addiu a1, a1, -0x75bc         |     a1 += -0x75bc;
    0x004eb5c4 lbu v0, 1(s1)                 |     v0 = *((s1 + 1));
    0x004eb5c8 move a0, s0                   |     a0 = s0;
    0x004eb5cc lw t9, -0x70a4(gp)            |     t9 = sym.imp.sprintf;
    0x004eb5d0 sb a3, (v1)                   |     *(v1) = a3;
    0x004eb5d4 sb v0, 1(v1)                  |     *((v1 + 1)) = v0;
    0x004eb5d8 jalr t9                       |     t9 ();
    0x004eb5dc move a1, s1                   |     a1 = s1;
    0x004eb5e0 lw gp, 0x10(sp)               |     gp = *(var_10h);
[31m    0x004eb5e4 lw t9, -0x60b8(gp)            |     t9 = sym.imp.strcat;[0m
    0x004eb5e8 move a0, s0                   |     a0 = s0;
    0x004eb5ec jalr t9                       |     t9 ();
    0x004eb5f0 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x004eb5f4 lw t9, -0x7a60(gp)            |     t9 = sym.imp.strlen;
    0x004eb5f8 move a0, s0                   |     a0 = s0;
    0x004eb5fc jalr t9                       |     t9 ();
    0x004eb600 move a1, s0                   |     a1 = s0;
    0x004eb604 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x004eb608 move a2, v0                   |     a2 = v0;
    0x004eb60c lw t9, -0x5430(gp)            |     t9 = sym.imp.memcpy;
    0x004eb610 subu a0, s6, v0               |     __asm ("subu a0, s6, v0");
    0x004eb614 jalr t9                       |     t9 ();
    0x004eb618 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x004eb61c lw t9, -0x7a60(gp)            |     t9 = sym.imp.strlen;
    0x004eb620 move a0, s0                   |     a0 = s0;
    0x004eb624 jalr t9                       |     t9 ();
    0x004eb628 move a0, fp                   |     a0 = fp;
    0x004eb62c lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x004eb630 addu a2, s2, v0               |     a2 = s2 + v0;
    0x004eb634 lw a3, 0x45c(sp)              |     a3 = *(arg_45ch);
    0x004eb638 subu a1, s6, v0               |     __asm ("subu a1, s6, v0");
    0x004eb63c lw t9, -0x61f8(gp)            |     t9 = sym.sock_write;
    0x004eb640 addiu a2, a2, 2               |     a2 += 2;
    0x004eb644 jalr t9                       |     t9 ();
    0x004eb648 move a0, s0                   |     a0 = s0;
    0x004eb64c lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x004eb650 lw t9, -0x7a60(gp)            |     t9 = sym.imp.strlen;
    0x004eb654 move s1, v0                   |     s1 = v0;
    0x004eb658 jalr t9                       |     t9 ();
    0x004eb65c addu v0, s2, v0               |     v0 = s2 + v0;
    0x004eb660 addiu v0, v0, 2               |     v0 += 2;
    0x004eb664 lw gp, 0x10(sp)               |     gp = *(var_10h);
                                             |     if (s1 == v0) {
    0x004eb668 beq s1, v0, 0x4eb4ac          |         goto label_0;
                                             |     }
    0x004eb66c nop                           |     
    0x004eb670 b 0x4eb69c                    |     goto label_9;
    0x004eb674 nop                           |     
                                             | label_15:
    0x004eb678 lw t9, -0x61f8(gp)            |     t9 = sym.sock_write;
    0x004eb67c move a0, fp                   |     a0 = fp;
    0x004eb680 lw a3, 0x45c(sp)              |     a3 = *(arg_45ch);
    0x004eb684 move a1, s6                   |     a1 = s6;
    0x004eb688 move a2, s2                   |     a2 = s2;
    0x004eb68c jalr t9                       |     t9 ();
    0x004eb690 lw gp, 0x10(sp)               |     gp = *(var_10h);
                                             |     if (v0 == s2) {
    0x004eb694 beq v0, s2, 0x4eb4ac          |         goto label_0;
                                             |     }
    0x004eb698 nop                           |     
                                             |     if (s4 != 0) {
                                             | label_9:
    0x004eb69c beqz s4, 0x4eb6c8             |         
    0x004eb6a0 nop                           |         
    0x004eb6a4 lw v0, (s4)                   |         v0 = *(s4);
                                             |         if (v0 == 0) {
    0x004eb6a8 beqz v0, 0x4eb6c8             |             goto label_16;
                                             |         }
    0x004eb6ac nop                           |         
    0x004eb6b0 lw v0, -0x4f80(gp)            |         v0 = *(gp);
    0x004eb6b4 lw t9, 0x14(v0)               |         t9 = *((v0 + 5));
    0x004eb6b8 move a0, s3                   |         a0 = s3;
    0x004eb6bc jalr t9                       |         t9 ();
    0x004eb6c0 b 0x4eb6d4                    |         goto label_17;
    0x004eb6c4 nop                           |         
                                             |     }
                                             | label_16:
    0x004eb6c8 lw t9, -0x7f1c(gp)            |     t9 = sym.sfClose;
    0x004eb6cc move a0, s3                   |     a0 = s3;
    0x004eb6d0 jalr t9                       |     t9 ();
                                             | label_17:
    0x004eb6d4 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x004eb6d8 lw v1, 0x428(sp)              |     v1 = *(var_428h);
    0x004eb6dc b 0x4eb730                    |     goto label_6;
    0x004eb6e0 nop                           |     
                                             | label_3:
    0x004eb6e4 addiu v0, zero, 0x62          |     v0 = 0x62;
    0x004eb6e8 move a0, fp                   |     a0 = fp;
                                             |     if (s0 == v0) {
    0x004eb6ec bne s0, v0, 0x4eb720          |         
    0x004eb6f0 lw s0, (v1)                   |         s0 = *(v1);
    0x004eb6f4 lw a1, (s2)                   |         a1 = *(s2);
    0x004eb6f8 addiu s2, v1, 4               |         s2 = v1 + 4;
    0x004eb6fc lw t9, -0x61f8(gp)            |         t9 = sym.sock_write;
    0x004eb700 lw a3, 0x45c(sp)              |         a3 = *(arg_45ch);
    0x004eb704 move a2, s0                   |         a2 = s0;
                                             |         if (s0 <= 0) {
    0x004eb708 blez s0, 0x4eb720             |             goto label_18;
                                             |         }
    0x004eb70c jalr t9                       |         t9 ();
    0x004eb710 nop                           |         
    0x004eb714 lw gp, 0x10(sp)               |         gp = *(var_10h);
    0x004eb718 move v1, zero                 |         v1 = 0;
                                             |         if (v0 != s0) {
    0x004eb71c bne v0, s0, 0x4eb730          |             goto label_6;
                                             |         }
                                             |     }
                                             | label_18:
    0x004eb720 lb s0, (s1)                   |     s0 = *(s1);
    0x004eb724 addiu s1, s1, 1               |     s1++;
    0x004eb728 b 0x4eb358                    |     goto label_1;
                                             | label_2:
    0x004eb72c move v1, zero                 |     v1 = 0;
                                             | label_6:
    0x004eb730 lw ra, 0x454(sp)              |     ra = *(var_454h);
    0x004eb734 move v0, v1                   |     v0 = v1;
    0x004eb738 lw fp, 0x450(sp)              |     fp = *(var_450h);
    0x004eb73c lw s7, 0x44c(sp)              |     s7 = *(var_44ch);
    0x004eb740 lw s6, 0x448(sp)              |     s6 = *(var_448h);
    0x004eb744 lw s5, 0x444(sp)              |     s5 = *(var_444h);
    0x004eb748 lw s4, 0x440(sp)              |     s4 = *(var_440h);
    0x004eb74c lw s3, 0x43c(sp)              |     s3 = *(var_43ch);
    0x004eb750 lw s2, 0x438(sp)              |     s2 = *(var_438h);
    0x004eb754 lw s1, 0x434(sp)              |     s1 = *(var_434h);
    0x004eb758 lw s0, 0x430(sp)              |     s0 = *(var_430h);
    0x004eb75c addiu sp, sp, 0x458           |     
    0x004eb760 jr ra                         |     return v0;
                                             | }
    ; assembly                               | /* r2dec pseudo code output */
                                             | /* /logs/firmware/unblob_extracted/firmware_extract/1180160-3904000.squashfs_v4_le_extract/usr/bin/httpd @ 0x50ed44 */
                                             | #include <stdint.h>
                                             |  
    ; (fcn) sym.nasSetShareList ()           | void nasSetShareList () {
    0x0050ed44 lui gp, 9                     |     
    0x0050ed48 addiu gp, gp, 0x8dc           |     
    0x0050ed4c addu gp, gp, t9               |     gp += t9;
    0x0050ed50 addiu sp, sp, -0x238          |     
    0x0050ed54 sw ra, 0x234(sp)              |     *(var_234h) = ra;
    0x0050ed58 sw fp, 0x230(sp)              |     *(var_230h) = fp;
    0x0050ed5c sw s7, 0x22c(sp)              |     *(var_22ch) = s7;
    0x0050ed60 sw s6, 0x228(sp)              |     *(var_228h) = s6;
    0x0050ed64 sw s5, 0x224(sp)              |     *(var_224h) = s5;
    0x0050ed68 sw s4, 0x220(sp)              |     *(var_220h) = s4;
    0x0050ed6c sw s3, 0x21c(sp)              |     *(var_21ch) = s3;
    0x0050ed70 sw s2, 0x218(sp)              |     *(var_218h) = s2;
    0x0050ed74 sw s1, 0x214(sp)              |     *(var_214h) = s1;
    0x0050ed78 sw s0, 0x210(sp)              |     *(var_210h) = s0;
    0x0050ed7c sw gp, 0x28(sp)               |     *(var_28h) = gp;
    0x0050ed80 addiu a2, zero, 0x10          |     a2 = 0x10;
    0x0050ed84 lw t9, -0x6c0c(gp)            |     t9 = sym.imp.memset;
    0x0050ed88 addiu s3, sp, 0x1e0           |     s3 = sp + 0x1e0;
    0x0050ed8c sw a0, 0x238(sp)              |     *(arg_238h) = a0;
    0x0050ed90 move s7, a1                   |     s7 = a1;
    0x0050ed94 move a0, s3                   |     a0 = s3;
    0x0050ed98 move a1, zero                 |     a1 = 0;
    0x0050ed9c jalr t9                       |     t9 ();
    0x0050eda0 addiu s2, sp, 0x1f0           |     s2 = sp + 0x1f0;
    0x0050eda4 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x0050eda8 move a0, s2                   |     a0 = s2;
    0x0050edac move a1, zero                 |     a1 = 0;
    0x0050edb0 lw t9, -0x6c0c(gp)            |     t9 = sym.imp.memset;
    0x0050edb4 addiu a2, zero, 0x10          |     a2 = 0x10;
    0x0050edb8 jalr t9                       |     t9 ();
    0x0050edbc lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x0050edc0 lw t9, -0x5a6c(gp)            |     t9 = sym.swNasGetOptions;
    0x0050edc4 addiu a0, sp, 0x200           |     a0 = sp + 0x200;
    0x0050edc8 jalr t9                       |     t9 ();
    0x0050edcc lw v0, 0x238(sp)              |     v0 = *(arg_238h);
    0x0050edd0 lw gp, 0x28(sp)               |     gp = *(var_28h);
                                             |     if (v0 != 0) {
    0x0050edd4 beqz v0, 0x50ede4             |         
    0x0050edd8 nop                           |         
                                             |         if (s7 != 0) {
    0x0050eddc bnez s7, 0x50ee08             |             goto label_1;
                                             |         }
    0x0050ede0 nop                           |         
                                             |     }
    0x0050ede4 lw a0, -0x7fdc(gp)            |     a0 = *((gp - 8183));
    0x0050ede8 addiu v0, zero, 0x11c         |     v0 = 0x11c;
    0x0050edec lw a1, -0x7fdc(gp)            |     a1 = *((gp - 8183));
    0x0050edf0 lw a2, -0x7fdc(gp)            |     a2 = *((gp - 8183));
                                             |     /* esilref: '&s	&s	&s	&d
' */
    0x0050edf4 addiu a0, a0, -0x1b94         |     a0 += -0x1b94;
    0x0050edf8 lw t9, -0x4d1c(gp)            |     t9 = sym.imp.printf;
                                             |     /* esilref: 'pShareList is NULL or pUserList is NULL.' */
    0x0050edfc addiu a1, a1, -0x1af0         |     a1 += -0x1af0;
                                             |     /* esilref: 'nas.c' */
    0x0050ee00 addiu a2, a2, -0x1b9c         |     a2 += -0x1b9c;
    0x0050ee04 b 0x50f248                    |     goto label_2;
                                             | label_1:
    0x0050ee08 lw a0, -0x7fdc(gp)            |     a0 = *((gp - 8183));
    0x0050ee0c lw t9, -0x554c(gp)            |     t9 = sym.imp.puts;
                                             |     /* esilref: 'NAS set share list... ' */
    0x0050ee10 addiu a0, a0, -0x1ac4         |     a0 += -0x1ac4;
    0x0050ee14 jalr t9                       |     t9 ();
    0x0050ee18 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x0050ee1c lw a0, -0x7fdc(gp)            |     a0 = *((gp - 8183));
    0x0050ee20 lw t9, -0x554c(gp)            |     t9 = sym.imp.puts;
                                             |     /* esilref: 'get lan ip/mask parameters.' */
    0x0050ee24 addiu a0, a0, -0x1aac         |     a0 += -0x1aac;
    0x0050ee28 jalr t9                       |     t9 ();
    0x0050ee2c addiu a0, sp, 0x208           |     a0 = sp + 0x208;
    0x0050ee30 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x0050ee34 lw t9, -0x7cf0(gp)            |     t9 = sym.swGetLanIpMask;
    0x0050ee38 addiu a1, sp, 0x20c           |     a1 = sp + 0x20c;
    0x0050ee3c jalr t9                       |     t9 ();
    0x0050ee40 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x0050ee44 lw a0, 0x208(sp)              |     a0 = *(var_208h);
    0x0050ee48 lw t9, -0x64d8(gp)            |     t9 = sym.swIpAddr2Str;
    0x0050ee4c move a1, s3                   |     a1 = s3;
    0x0050ee50 jalr t9                       |     t9 ();
    0x0050ee54 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x0050ee58 lw a0, 0x20c(sp)              |     a0 = *(var_20ch);
    0x0050ee5c lw t9, -0x64d8(gp)            |     t9 = sym.swIpAddr2Str;
    0x0050ee60 move a1, s2                   |     a1 = s2;
    0x0050ee64 jalr t9                       |     t9 ();
    0x0050ee68 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x0050ee6c lw a0, -0x7fdc(gp)            |     a0 = *((gp - 8183));
    0x0050ee70 lw a1, -0x7fdc(gp)            |     a1 = *((gp - 8183));
    0x0050ee74 lw t9, -0x6bd4(gp)            |     t9 = sym.imp.fopen;
                                             |     /* esilref: '/tmp/samba/smb.conf' */
    0x0050ee78 addiu a0, a0, -0x1a90         |     a0 += -0x1a90;
    0x0050ee7c addiu a1, a1, -0x1a7c         |     a1 += -0x1a7c;
    0x0050ee80 jalr t9                       |     t9 ();
    0x0050ee84 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x0050ee88 move s4, v0                   |     s4 = v0;
                                             |     if (v0 == 0) {
    0x0050ee8c bnez v0, 0x50eea0             |         
    0x0050ee90 lw a0, -0x7fdc(gp)            |         a0 = *((gp - 8183));
    0x0050ee94 lw t9, -0x554c(gp)            |         t9 = sym.imp.puts;
                                             |         /* esilref: '/tmp/samba/smb.confopen error' */
    0x0050ee98 addiu a0, a0, -0x1a78         |         a0 += -0x1a78;
    0x0050ee9c b 0x50f280                    |         goto label_3;
                                             |     }
    0x0050eea0 lw v0, 0x204(sp)              |     v0 = *(var_204h);
                                             |     if (v0 != 0) {
    0x0050eea4 beqz v0, 0x50eebc             |         
    0x0050eea8 nop                           |         
    0x0050eeac lw v0, -0x7fcc(gp)            |         v0 = *((gp - 8179));
    0x0050eeb0 lw s1, 0x2db4(v0)             |         s1 = *((v0 + 2925));
    0x0050eeb4 b 0x50eec4                    |         goto label_4;
    0x0050eeb8 nop                           |         
                                             |     }
    0x0050eebc lw v0, -0x7fcc(gp)            |     v0 = *((gp - 8179));
    0x0050eec0 lw s1, 0x2db0(v0)             |     s1 = *((v0 + 2924));
                                             | label_4:
    0x0050eec4 lw t9, -0x7a60(gp)            |     t9 = sym.imp.strlen;
    0x0050eec8 move a0, s1                   |     a0 = s1;
    0x0050eecc jalr t9                       |     t9 ();
    0x0050eed0 move a0, s1                   |     a0 = s1;
    0x0050eed4 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x0050eed8 addiu a1, zero, 1             |     a1 = 1;
    0x0050eedc move a2, v0                   |     a2 = v0;
    0x0050eee0 move a3, s4                   |     a3 = s4;
    0x0050eee4 lw t9, -0x7588(gp)            |     t9 = sym.imp.fwrite;
    0x0050eee8 move s0, v0                   |     s0 = v0;
    0x0050eeec jalr t9                       |     t9 ();
    0x0050eef0 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x0050eef4 addiu v0, zero, 0x13b         |     v0 = 0x13b;
                                             |     if (s0 != v0) {
    0x0050eef8 beq s0, v0, 0x50ef1c          |         
    0x0050eefc lw a0, -0x7fdc(gp)            |         a0 = *((gp - 8183));
    0x0050ef00 lw a1, -0x7fdc(gp)            |         a1 = *((gp - 8183));
    0x0050ef04 lw a2, -0x7fdc(gp)            |         a2 = *((gp - 8183));
                                             |         /* esilref: '&s	&s	&s	&d
' */
    0x0050ef08 addiu a0, a0, -0x1b94         |         a0 += -0x1b94;
    0x0050ef0c lw t9, -0x4d1c(gp)            |         t9 = sym.imp.printf;
                                             |         /* esilref: 'create global section failed.' */
    0x0050ef10 addiu a1, a1, -0x1a58         |         a1 += -0x1a58;
                                             |         /* esilref: 'nas.c' */
    0x0050ef14 addiu a2, a2, -0x1b9c         |         a2 += -0x1b9c;
    0x0050ef18 b 0x50f260                    |         goto label_5;
                                             |     }
    0x0050ef1c lw v0, -0x7fcc(gp)            |     v0 = *((gp - 8179));
    0x0050ef20 move a2, s3                   |     a2 = s3;
    0x0050ef24 lw t9, -0x70a4(gp)            |     t9 = sym.imp.sprintf;
    0x0050ef28 move a3, s2                   |     a3 = s2;
    0x0050ef2c lw a1, 0x2dac(v0)             |     a1 = *((v0 + 2923));
    0x0050ef30 addiu a0, sp, 0x30            |     a0 = sp + 0x30;
    0x0050ef34 jalr t9                       |     t9 ();
    0x0050ef38 addiu a1, sp, 0x30            |     a1 = sp + 0x30;
    0x0050ef3c lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x0050ef40 lw a0, -0x7fdc(gp)            |     a0 = *((gp - 8183));
    0x0050ef44 lw t9, -0x4d1c(gp)            |     t9 = sym.imp.printf;
                                             |     /* esilref: 'create global section. global section interface is :&s
' */
    0x0050ef48 addiu a0, a0, -0x1a38         |     a0 += -0x1a38;
    0x0050ef4c jalr t9                       |     t9 ();
    0x0050ef50 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x0050ef54 lw t9, -0x7a60(gp)            |     t9 = sym.imp.strlen;
    0x0050ef58 addiu a0, sp, 0x30            |     a0 = sp + 0x30;
    0x0050ef5c jalr t9                       |     t9 ();
    0x0050ef60 addiu a0, sp, 0x30            |     a0 = sp + 0x30;
    0x0050ef64 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x0050ef68 addiu a1, zero, 1             |     a1 = 1;
    0x0050ef6c move a2, v0                   |     a2 = v0;
    0x0050ef70 move a3, s4                   |     a3 = s4;
    0x0050ef74 lw t9, -0x7588(gp)            |     t9 = sym.imp.fwrite;
    0x0050ef78 move s0, v0                   |     s0 = v0;
    0x0050ef7c jalr t9                       |     t9 ();
    0x0050ef80 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x0050ef84 addiu v0, zero, 0x143         |     v0 = 0x143;
                                             |     if (s0 != v0) {
    0x0050ef88 beq s0, v0, 0x50efac          |         
    0x0050ef8c lw a0, -0x7fdc(gp)            |         a0 = *((gp - 8183));
    0x0050ef90 lw a1, -0x7fdc(gp)            |         a1 = *((gp - 8183));
    0x0050ef94 lw a2, -0x7fdc(gp)            |         a2 = *((gp - 8183));
                                             |         /* esilref: '&s	&s	&s	&d
' */
    0x0050ef98 addiu a0, a0, -0x1b94         |         a0 += -0x1b94;
    0x0050ef9c lw t9, -0x4d1c(gp)            |         t9 = sym.imp.printf;
                                             |         /* esilref: 'create global section failed.' */
    0x0050efa0 addiu a1, a1, -0x1a58         |         a1 += -0x1a58;
                                             |         /* esilref: 'nas.c' */
    0x0050efa4 addiu a2, a2, -0x1b9c         |         a2 += -0x1b9c;
    0x0050efa8 b 0x50f260                    |         goto label_5;
                                             |     }
    0x0050efac lw a0, -0x7fdc(gp)            |     a0 = *((gp - 8183));
    0x0050efb0 move fp, zero                 |     fp = 0;
    0x0050efb4 lw t9, -0x554c(gp)            |     t9 = sym.imp.puts;
                                             |     /* esilref: 'create share section one by one ' */
    0x0050efb8 addiu a0, a0, -0x1a00         |     a0 += -0x1a00;
    0x0050efbc jalr t9                       |     t9 ();
    0x0050efc0 lw v1, 0x238(sp)              |     v1 = *(arg_238h);
    0x0050efc4 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x0050efc8 lw v0, 4(v1)                  |     v0 = *((v1 + 1));
    0x0050efcc move s1, v1                   |     s1 = v1;
                                             |     if (v0 == 0) {
    0x0050efd0 beqz v0, 0x50f200             |         goto label_6;
                                             |     }
                                             | label_0:
    0x0050efd4 lw t9, -0x6c0c(gp)            |     t9 = sym.imp.memset;
    0x0050efd8 addiu s5, sp, 0x160           |     s5 = sp + 0x160;
    0x0050efdc move a0, s5                   |     a0 = s5;
    0x0050efe0 move a1, zero                 |     a1 = 0;
    0x0050efe4 addiu a2, zero, 0x40          |     a2 = 0x40;
    0x0050efe8 addiu s6, sp, 0x1a0           |     s6 = sp + 0x1a0;
    0x0050efec jalr t9                       |     t9 ();
    0x0050eff0 move a0, s6                   |     a0 = s6;
    0x0050eff4 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x0050eff8 move a1, zero                 |     a1 = 0;
    0x0050effc lw t9, -0x6c0c(gp)            |     t9 = sym.imp.memset;
    0x0050f000 addiu a2, zero, 0x40          |     a2 = 0x40;
    0x0050f004 jalr t9                       |     t9 ();
    0x0050f008 addiu a1, s1, 8               |     a1 = s1 + 8;
    0x0050f00c lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x0050f010 addiu a2, s1, 0x18            |     a2 = s1 + 0x18;
    0x0050f014 lw v0, 0x28(s1)               |     v0 = *((s1 + 10));
    0x0050f018 lw a0, -0x7fdc(gp)            |     a0 = *((gp - 8183));
    0x0050f01c lw a3, 0x2c(s1)               |     a3 = *((s1 + 11));
    0x0050f020 lw t9, -0x4d1c(gp)            |     t9 = sym.imp.printf;
                                             |     /* esilref: 'share list info is :&s &s &d &d
' */
    0x0050f024 addiu a0, a0, -0x19dc         |     a0 += -0x19dc;
    0x0050f028 sw v0, 0x10(sp)               |     *(var_10h) = v0;
    0x0050f02c jalr t9                       |     t9 ();
    0x0050f030 lw v0, 0x28(s1)               |     v0 = *((s1 + 10));
    0x0050f034 lw gp, 0x28(sp)               |     gp = *(var_28h);
                                             |     if (v0 == 0) {
    0x0050f038 beqz v0, 0x50f1e8             |         goto label_7;
                                             |     }
    0x0050f03c nop                           |     
    0x0050f040 lw v0, 0x2c(s1)               |     v0 = *((s1 + 11));
    0x0050f044 lw v1, (s7)                   |     v1 = *(s7);
                                             |     if (v0 == 0) {
    0x0050f048 beqz v0, 0x50f0d4             |         goto label_8;
                                             |     }
    0x0050f04c nop                           |     
    0x0050f050 move s2, zero                 |     s2 = 0;
                                             |     if (v1 <= 0) {
    0x0050f054 blez v1, 0x50f124             |         goto label_9;
                                             |     }
    0x0050f058 move s0, s7                   |     s0 = s7;
                                             |     do {
    0x0050f05c lw v1, 0x24(s0)               |         v1 = *((s0 + 9));
    0x0050f060 addiu a2, s0, 4               |         a2 = s0 + 4;
    0x0050f064 addiu v0, zero, 1             |         v0 = 1;
    0x0050f068 move a0, s6                   |         a0 = s6;
[31m    0x0050f06c lw t9, -0x60b8(gp)            |         t9 = sym.imp.strcat;[0m
    0x0050f070 lw s3, -0x7fdc(gp)            |         s3 = *((gp - 8183));
    0x0050f074 move a1, a2                   |         a1 = a2;
                                             |         if (v1 == v0) {
    0x0050f078 bne v1, v0, 0x50f090          |             
    0x0050f07c jalr t9                       |             t9 ();
    0x0050f080 nop                           |             
    0x0050f084 lw gp, 0x28(sp)               |             gp = *(var_28h);
    0x0050f088 move a0, s6                   |             a0 = s6;
    0x0050f08c b 0x50f0a4                    |             
                                             |         } else {
    0x0050f090 move a0, s5                   |             a0 = s5;
    0x0050f094 move a1, a2                   |             a1 = a2;
    0x0050f098 jalr t9                       |             t9 ();
    0x0050f09c move a0, s5                   |             a0 = s5;
    0x0050f0a0 lw gp, 0x28(sp)               |             gp = *(var_28h);
                                             |         }
[31m    0x0050f0a4 lw t9, -0x60b8(gp)            |         t9 = sym.imp.strcat;[0m
    0x0050f0a8 addiu a1, s3, -0x19b8         |         a1 = s3 + -0x19b8;
    0x0050f0ac addiu s2, s2, 1               |         s2++;
    0x0050f0b0 addiu s0, s0, 0x28            |         s0 += 0x28;
    0x0050f0b4 jalr t9                       |         t9 ();
    0x0050f0b8 lw v0, (s7)                   |         v0 = *(s7);
    0x0050f0bc lw gp, 0x28(sp)               |         gp = *(var_28h);
    0x0050f0c0 slt v0, s2, v0                |         v0 = (s2 < v0) ? 1 : 0;
    0x0050f0c4 bnez v0, 0x50f05c             |         
                                             |     } while (v0 != 0);
    0x0050f0c8 nop                           |     
    0x0050f0cc b 0x50f124                    |     goto label_9;
    0x0050f0d0 nop                           |     
                                             | label_8:
    0x0050f0d4 move s2, zero                 |     s2 = 0;
                                             |     if (v1 <= 0) {
    0x0050f0d8 blez v1, 0x50f124             |         goto label_9;
                                             |     }
    0x0050f0dc addiu s0, s7, 4               |     s0 = s7 + 4;
                                             |     do {
[31m    0x0050f0e0 lw t9, -0x60b8(gp)            |         t9 = sym.imp.strcat;[0m
    0x0050f0e4 move a1, s0                   |         a1 = s0;
    0x0050f0e8 move a0, s5                   |         a0 = s5;
    0x0050f0ec addiu s2, s2, 1               |         s2++;
    0x0050f0f0 jalr t9                       |         t9 ();
    0x0050f0f4 move a0, s5                   |         a0 = s5;
    0x0050f0f8 lw gp, 0x28(sp)               |         gp = *(var_28h);
    0x0050f0fc addiu s0, s0, 0x28            |         s0 += 0x28;
    0x0050f100 lw a1, -0x7fdc(gp)            |         a1 = *((gp - 8183));
[31m    0x0050f104 lw t9, -0x60b8(gp)            |         t9 = sym.imp.strcat;[0m
    0x0050f108 addiu a1, a1, -0x19b8         |         a1 += -0x19b8;
    0x0050f10c jalr t9                       |         t9 ();
    0x0050f110 lw v0, (s7)                   |         v0 = *(s7);
    0x0050f114 lw gp, 0x28(sp)               |         gp = *(var_28h);
    0x0050f118 slt v0, s2, v0                |         v0 = (s2 < v0) ? 1 : 0;
    0x0050f11c bnez v0, 0x50f0e0             |         
                                             |     } while (v0 != 0);
    0x0050f120 nop                           |     
                                             | label_9:
    0x0050f124 lw v0, 0x204(sp)              |     v0 = *(var_204h);
    0x0050f128 lw t9, -0x70a4(gp)            |     t9 = sym.imp.sprintf;
    0x0050f12c lw a3, -0x7fdc(gp)            |     a3 = *((gp - 8183));
    0x0050f130 addiu v0, s1, 8               |     v0 = s1 + 8;
                                             |     if (v0 != 0) {
    0x0050f134 beqz v0, 0x50f178             |         
    0x0050f138 lw v0, -0x7fcc(gp)            |         v0 = *((gp - 8179));
    0x0050f13c addiu t0, sp, 0x1a0           |         t0 = sp + 0x1a0;
    0x0050f140 addiu t1, sp, 0x160           |         t1 = sp + 0x160;
    0x0050f144 addiu v1, s1, 8               |         v1 = s1 + 8;
    0x0050f148 lw a1, 0x2da8(v0)             |         a1 = *((v0 + 2922));
                                             |         /* esilref: '/tmp/usbdisk/' */
    0x0050f14c addiu a3, a3, -0x19b4         |         a3 += -0x19b4;
    0x0050f150 sw v1, 0x10(sp)               |         *(var_10h) = v1;
    0x0050f154 addiu a0, sp, 0x30            |         a0 = sp + 0x30;
    0x0050f158 sw t0, 0x1c(sp)               |         *(var_1ch) = t0;
    0x0050f15c addiu a2, s1, 0x18            |         a2 = s1 + 0x18;
    0x0050f160 sw t1, 0x20(sp)               |         *(var_20h) = t1;
    0x0050f164 sw t0, 0x14(sp)               |         *(var_14h) = t0;
    0x0050f168 sw t1, 0x18(sp)               |         *(var_18h) = t1;
    0x0050f16c jalr t9                       |         t9 ();
    0x0050f170 b 0x50f194                    |         goto label_10;
    0x0050f174 nop                           |         
                                             |     }
                                             |     /* esilref: '/tmp/usbdisk/' */
    0x0050f178 addiu a3, a3, -0x19b4         |     a3 += -0x19b4;
    0x0050f17c sw v0, 0x10(sp)               |     *(var_10h) = v0;
    0x0050f180 addiu a0, sp, 0x30            |     a0 = sp + 0x30;
    0x0050f184 lw v0, -0x7fcc(gp)            |     v0 = *((gp - 8179));
    0x0050f188 lw a1, 0x2da4(v0)             |     a1 = *((v0 + 2921));
    0x0050f18c addiu a2, s1, 0x18            |     a2 = s1 + 0x18;
    0x0050f190 jalr t9                       |     t9 ();
                                             | label_10:
    0x0050f194 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x0050f198 addiu a1, sp, 0x30            |     a1 = sp + 0x30;
    0x0050f19c lw a0, -0x7fdc(gp)            |     a0 = *((gp - 8183));
    0x0050f1a0 lw t9, -0x4d1c(gp)            |     t9 = sym.imp.printf;
                                             |     /* esilref: 'add share dir info is : &s 
' */
    0x0050f1a4 addiu a0, a0, -0x19a4         |     a0 += -0x19a4;
    0x0050f1a8 jalr t9                       |     t9 ();
    0x0050f1ac lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x0050f1b0 lw t9, -0x7a60(gp)            |     t9 = sym.imp.strlen;
    0x0050f1b4 addiu a0, sp, 0x30            |     a0 = sp + 0x30;
    0x0050f1b8 jalr t9                       |     t9 ();
    0x0050f1bc addiu a0, sp, 0x30            |     a0 = sp + 0x30;
    0x0050f1c0 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x0050f1c4 addiu a1, zero, 1             |     a1 = 1;
    0x0050f1c8 move a2, v0                   |     a2 = v0;
    0x0050f1cc move a3, s4                   |     a3 = s4;
    0x0050f1d0 lw t9, -0x7588(gp)            |     t9 = sym.imp.fwrite;
    0x0050f1d4 move s0, v0                   |     s0 = v0;
    0x0050f1d8 jalr t9                       |     t9 ();
    0x0050f1dc lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x0050f1e0 addiu v0, zero, 0x183         |     v0 = 0x183;
                                             |     if (s0 != v0) {
    0x0050f1e4 bne s0, v0, 0x50f22c          |         goto label_11;
                                             |     }
                                             | label_7:
    0x0050f1e8 lw v1, 0x238(sp)              |     v1 = *(arg_238h);
    0x0050f1ec addiu fp, fp, 1               |     fp++;
    0x0050f1f0 lw v0, 4(v1)                  |     v0 = *((v1 + 1));
    0x0050f1f4 sltu v0, fp, v0               |     v0 = (fp < v0) ? 1 : 0;
    0x0050f1f8 addiu s1, s1, 0x28            |     s1 += 0x28;
                                             |     if (v0 != 0) {
    0x0050f1fc bnez v0, 0x50efd4             |         goto label_0;
                                             |     }
                                             | label_6:
    0x0050f200 lw a0, -0x7fdc(gp)            |     a0 = *((gp - 8183));
    0x0050f204 lw t9, -0x554c(gp)            |     t9 = sym.imp.puts;
                                             |     /* esilref: 'NAS share list take effect. ' */
    0x0050f208 addiu a0, a0, -0x1984         |     a0 += -0x1984;
    0x0050f20c jalr t9                       |     t9 ();
    0x0050f210 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x0050f214 lw t9, -0x6d68(gp)            |     t9 = sym.imp.fclose;
    0x0050f218 move a0, s4                   |     a0 = s4;
    0x0050f21c jalr t9                       |     t9 ();
    0x0050f220 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x0050f224 addiu v0, zero, 1             |     v0 = 1;
    0x0050f228 b 0x50f290                    |     goto label_12;
                                             | label_11:
    0x0050f22c lw a0, -0x7fdc(gp)            |     a0 = *((gp - 8183));
    0x0050f230 lw a1, -0x7fdc(gp)            |     a1 = *((gp - 8183));
    0x0050f234 lw a2, -0x7fdc(gp)            |     a2 = *((gp - 8183));
                                             |     /* esilref: '&s	&s	&s	&d
' */
    0x0050f238 addiu a0, a0, -0x1b94         |     a0 += -0x1b94;
    0x0050f23c lw t9, -0x4d1c(gp)            |     t9 = sym.imp.printf;
                                             |     /* esilref: 'samba adddir faild.' */
    0x0050f240 addiu a1, a1, -0x1964         |     a1 += -0x1964;
                                             |     /* esilref: 'nas.c' */
    0x0050f244 addiu a2, a2, -0x1b9c         |     a2 += -0x1b9c;
                                             | label_2:
    0x0050f248 lw a3, -0x7fdc(gp)            |     a3 = *((gp - 8183));
    0x0050f24c sw v0, 0x10(sp)               |     *(var_10h) = v0;
                                             |     /* esilref: 'nasSetShareList' */
    0x0050f250 addiu a3, a3, -0x1b00         |     a3 += -0x1b00;
    0x0050f254 jalr t9                       |     t9 ();
    0x0050f258 b 0x50f288                    |     goto label_13;
    0x0050f25c nop                           |     
                                             | label_5:
    0x0050f260 lw a3, -0x7fdc(gp)            |     a3 = *((gp - 8183));
    0x0050f264 sw v0, 0x10(sp)               |     *(var_10h) = v0;
                                             |     /* esilref: 'nasSetShareList' */
    0x0050f268 addiu a3, a3, -0x1b00         |     a3 += -0x1b00;
    0x0050f26c jalr t9                       |     t9 ();
    0x0050f270 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x0050f274 move a0, s4                   |     a0 = s4;
                                             |     if (s4 != 0) {
    0x0050f278 beqz s4, 0x50f28c             |         
    0x0050f27c lw t9, -0x6d68(gp)            |         t9 = sym.imp.fclose;
                                             | label_3:
    0x0050f280 jalr t9                       |         t9 ();
    0x0050f284 nop                           |         
                                             | label_13:
    0x0050f288 lw gp, 0x28(sp)               |         gp = *(var_28h);
                                             |     }
    0x0050f28c move v0, zero                 |     v0 = 0;
                                             | label_12:
    0x0050f290 lw ra, 0x234(sp)              |     ra = *(var_234h);
    0x0050f294 lw fp, 0x230(sp)              |     fp = *(var_230h);
    0x0050f298 lw s7, 0x22c(sp)              |     s7 = *(var_22ch);
    0x0050f29c lw s6, 0x228(sp)              |     s6 = *(var_228h);
    0x0050f2a0 lw s5, 0x224(sp)              |     s5 = *(var_224h);
    0x0050f2a4 lw s4, 0x220(sp)              |     s4 = *(var_220h);
    0x0050f2a8 lw s3, 0x21c(sp)              |     s3 = *(var_21ch);
    0x0050f2ac lw s2, 0x218(sp)              |     s2 = *(var_218h);
    0x0050f2b0 lw s1, 0x214(sp)              |     s1 = *(var_214h);
    0x0050f2b4 lw s0, 0x210(sp)              |     s0 = *(var_210h);
    0x0050f2b8 addiu sp, sp, 0x238           |     
    0x0050f2bc jr ra                         |     return v0;
                                             | }
    ; assembly                                   | /* r2dec pseudo code output */
                                                 | /* /logs/firmware/unblob_extracted/firmware_extract/1180160-3904000.squashfs_v4_le_extract/usr/bin/httpd @ 0x4d44f8 */
                                                 | #include <stdint.h>
                                                 |  
    ; (fcn) sym.ntp_getHostnameFromCfg ()        | void ntp_getHostnameFromCfg () {
    0x004d44f8 lui gp, 0xd                       |     
    0x004d44fc addiu gp, gp, -0x4ed8             |     
    0x004d4500 addu gp, gp, t9                   |     gp += t9;
    0x004d4504 addiu sp, sp, -0xa0               |     
    0x004d4508 sw ra, 0x9c(sp)                   |     *(var_9ch) = ra;
    0x004d450c sw s2, 0x98(sp)                   |     *(var_98h) = s2;
    0x004d4510 sw s1, 0x94(sp)                   |     *(var_94h) = s1;
    0x004d4514 sw s0, 0x90(sp)                   |     *(var_90h) = s0;
    0x004d4518 sw gp, 0x10(sp)                   |     *(var_10h) = gp;
    0x004d451c lw t9, -0x7e88(gp)                |     t9 = sym.ucGetSntpCfg;
    0x004d4520 addiu a0, sp, 0x48                |     a0 = sp + 0x48;
    0x004d4524 addiu s1, sp, 0x28                |     s1 = sp + 0x28;
    0x004d4528 addiu s2, sp, 0x38                |     s2 = sp + 0x38;
    0x004d452c jalr t9                           |     t9 ();
    0x004d4530 move a1, zero                     |     a1 = 0;
    0x004d4534 lw gp, 0x10(sp)                   |     gp = *(var_10h);
    0x004d4538 lw t9, -0x6c0c(gp)                |     t9 = sym.imp.memset;
    0x004d453c lw a0, -0x599c(gp)                |     a0 = *(gp);
    0x004d4540 addiu a2, zero, 0x14f             |     a2 = 0x14f;
    0x004d4544 jalr t9                           |     t9 ();
    0x004d4548 addiu a1, sp, 0x18                |     a1 = sp + 0x18;
    0x004d454c lw gp, 0x10(sp)                   |     gp = *(var_10h);
    0x004d4550 lw v0, -0x6050(gp)                |     v0 = *(gp);
    0x004d4554 lw t9, -0x64d8(gp)                |     t9 = sym.swIpAddr2Str;
    0x004d4558 lw v0, (v0)                       |     v0 = *(v0);
    0x004d455c move a0, v0                       |     a0 = v0;
                                                 |     if (v0 != 0) {
    0x004d4560 beqz v0, 0x4d459c                 |         
    0x004d4564 jalr t9                           |         t9 ();
    0x004d4568 nop                               |         
    0x004d456c lw gp, 0x10(sp)                   |         gp = *(var_10h);
[31m    0x004d4570 lw t9, -0x60b8(gp)                |         t9 = sym.imp.strcat;[0m
    0x004d4574 lw a0, -0x599c(gp)                |         a0 = *(gp);
    0x004d4578 addiu a1, sp, 0x18                |         a1 = sp + 0x18;
    0x004d457c jalr t9                           |         t9 ();
    0x004d4580 lw gp, 0x10(sp)                   |         gp = *(var_10h);
    0x004d4584 lw a1, -0x7fb8(gp)                |         a1 = *((gp - 8174));
[31m    0x004d4588 lw t9, -0x60b8(gp)                |         t9 = sym.imp.strcat;[0m
    0x004d458c lw a0, -0x599c(gp)                |         a0 = *(gp);
    0x004d4590 addiu a1, a1, 0x3264              |         a1 += 0x3264;
    0x004d4594 jalr t9                           |         t9 ();
    0x004d4598 lw gp, 0x10(sp)                   |         gp = *(var_10h);
                                                 |     }
    0x004d459c lw v0, -0x7fa0(gp)                |     v0 = *((gp - 8168));
    0x004d45a0 addiu s0, v0, 0x42b8              |     s0 = v0 + 0x42b8;
    0x004d45a4 move t9, s0                       |     t9 = s0;
    0x004d45a8 addiu a0, sp, 0x4c                |     a0 = sp + 0x4c;
    0x004d45ac jalr t9                           |     t9 ();
    0x004d45b0 move a1, s1                       |     a1 = s1;
    0x004d45b4 lw gp, 0x10(sp)                   |     gp = *(var_10h);
    0x004d45b8 lw t9, -0x64d8(gp)                |     t9 = sym.swIpAddr2Str;
    0x004d45bc move a0, v0                       |     a0 = v0;
                                                 |     if (v0 != 0) {
    0x004d45c0 beqz v0, 0x4d45f8                 |         
    0x004d45c4 jalr t9                           |         t9 ();
    0x004d45c8 nop                               |         
    0x004d45cc lw gp, 0x10(sp)                   |         gp = *(var_10h);
[31m    0x004d45d0 lw t9, -0x60b8(gp)                |         t9 = sym.imp.strcat;[0m
    0x004d45d4 lw a0, -0x599c(gp)                |         a0 = *(gp);
    0x004d45d8 move a1, s1                       |         a1 = s1;
    0x004d45dc jalr t9                           |         t9 ();
    0x004d45e0 lw gp, 0x10(sp)                   |         gp = *(var_10h);
    0x004d45e4 lw a1, -0x7fb8(gp)                |         a1 = *((gp - 8174));
[31m    0x004d45e8 lw t9, -0x60b8(gp)                |         t9 = sym.imp.strcat;[0m
    0x004d45ec lw a0, -0x599c(gp)                |         a0 = *(gp);
    0x004d45f0 addiu a1, a1, 0x3264              |         a1 += 0x3264;
    0x004d45f4 jalr t9                           |         t9 ();
                                                 |     }
    0x004d45f8 move t9, s0                       |     t9 = s0;
    0x004d45fc addiu a0, sp, 0x6c                |     a0 = sp + 0x6c;
    0x004d4600 jalr t9                           |     t9 ();
    0x004d4604 move a1, s2                       |     a1 = s2;
    0x004d4608 lw gp, 0x10(sp)                   |     gp = *(var_10h);
    0x004d460c lw t9, -0x64d8(gp)                |     t9 = sym.swIpAddr2Str;
    0x004d4610 move a0, v0                       |     a0 = v0;
                                                 |     if (v0 != 0) {
    0x004d4614 beqz v0, 0x4d4650                 |         
    0x004d4618 jalr t9                           |         t9 ();
    0x004d461c nop                               |         
    0x004d4620 lw gp, 0x10(sp)                   |         gp = *(var_10h);
[31m    0x004d4624 lw t9, -0x60b8(gp)                |         t9 = sym.imp.strcat;[0m
    0x004d4628 lw a0, -0x599c(gp)                |         a0 = *(gp);
    0x004d462c move a1, s2                       |         a1 = s2;
    0x004d4630 jalr t9                           |         t9 ();
    0x004d4634 lw gp, 0x10(sp)                   |         gp = *(var_10h);
    0x004d4638 lw a1, -0x7fb8(gp)                |         a1 = *((gp - 8174));
[31m    0x004d463c lw t9, -0x60b8(gp)                |         t9 = sym.imp.strcat;[0m
    0x004d4640 lw a0, -0x599c(gp)                |         a0 = *(gp);
    0x004d4644 addiu a1, a1, 0x3264              |         a1 += 0x3264;
    0x004d4648 jalr t9                           |         t9 ();
    0x004d464c lw gp, 0x10(sp)                   |         gp = *(var_10h);
                                                 |     }
    0x004d4650 lw a1, -0x7fe0(gp)                |     a1 = *((gp - 8184));
[31m    0x004d4654 lw t9, -0x60b8(gp)                |     t9 = sym.imp.strcat;[0m
    0x004d4658 lw a0, -0x599c(gp)                |     a0 = *(gp);
                                                 |     /* esilref: '133.100.9.2 139.78.100.163 131.107.1.10 199.165.76.11 140.142.16.34 128.138.140.44 137.146.210.250 192.36.144.22 129.7.1.66 192.43.244.18 158.121.104.4 192.6.38.127 216.133.140.77 140.221.8.88 66.243.43.2' */
    0x004d465c addiu a1, a1, 0x40bc              |     a1 += 0x40bc;
    0x004d4660 jalr t9                           |     t9 ();
    0x004d4664 lw gp, 0x10(sp)                   |     gp = *(var_10h);
    0x004d4668 lw ra, 0x9c(sp)                   |     ra = *(var_9ch);
    0x004d466c lw v0, -0x599c(gp)                |     v0 = *(gp);
    0x004d4670 lw s2, 0x98(sp)                   |     s2 = *(var_98h);
    0x004d4674 lw s1, 0x94(sp)                   |     s1 = *(var_94h);
    0x004d4678 lw s0, 0x90(sp)                   |     s0 = *(var_90h);
    0x004d467c addiu sp, sp, 0xa0                |     
    0x004d4680 jr ra                             |     return v0;
                                                 | }
    ; assembly                               | /* r2dec pseudo code output */
                                             | /* /logs/firmware/unblob_extracted/firmware_extract/1180160-3904000.squashfs_v4_le_extract/usr/bin/httpd @ 0x4d54ac */
                                             | #include <stdint.h>
                                             |  
    ; (fcn) sym.parseGetUsrCfgFunc ()        | void parseGetUsrCfgFunc () {
    0x004d54ac lui gp, 0xd                   |     
    0x004d54b0 addiu gp, gp, -0x5e8c         |     
    0x004d54b4 addu gp, gp, t9               |     gp += t9;
    0x004d54b8 addiu sp, sp, -0x498          |     
    0x004d54bc sw ra, 0x494(sp)              |     *(var_494h) = ra;
    0x004d54c0 sw fp, 0x490(sp)              |     *(var_490h) = fp;
    0x004d54c4 sw s7, 0x48c(sp)              |     *(var_48ch) = s7;
    0x004d54c8 sw s6, 0x488(sp)              |     *(var_488h) = s6;
    0x004d54cc sw s5, 0x484(sp)              |     *(var_484h) = s5;
    0x004d54d0 sw s4, 0x480(sp)              |     *(var_480h) = s4;
    0x004d54d4 sw s3, 0x47c(sp)              |     *(var_47ch) = s3;
    0x004d54d8 sw s2, 0x478(sp)              |     *(var_478h) = s2;
    0x004d54dc sw s1, 0x474(sp)              |     *(var_474h) = s1;
    0x004d54e0 sw s0, 0x470(sp)              |     *(var_470h) = s0;
    0x004d54e4 sw gp, 0x18(sp)               |     *(var_18h) = gp;
    0x004d54e8 addiu a2, zero, 0x18          |     a2 = 0x18;
    0x004d54ec lw t9, -0x6c0c(gp)            |     t9 = sym.imp.memset;
    0x004d54f0 move s6, a1                   |     s6 = a1;
    0x004d54f4 sw a0, 0x498(sp)              |     *(arg_498h) = a0;
    0x004d54f8 move a1, zero                 |     a1 = 0;
    0x004d54fc addiu a0, sp, 0x20            |     a0 = sp + 0x20;
    0x004d5500 jalr t9                       |     t9 ();
    0x004d5504 addiu v0, zero, -1            |     v0 = -1;
    0x004d5508 lw gp, 0x18(sp)               |     gp = *(var_18h);
    0x004d550c move a1, zero                 |     a1 = 0;
    0x004d5510 addiu a2, zero, 0x20          |     a2 = 0x20;
    0x004d5514 addiu a0, sp, 0x438           |     a0 = sp + 0x438;
    0x004d5518 lw t9, -0x6c0c(gp)            |     t9 = sym.imp.memset;
    0x004d551c sw v0, 0x45c(sp)              |     *(var_45ch) = v0;
    0x004d5520 jalr t9                       |     t9 ();
    0x004d5524 lw gp, 0x18(sp)               |     gp = *(var_18h);
    0x004d5528 lw t9, -0x6940(gp)            |     t9 = sym.swWlanWpsIsPinChanged;
    0x004d552c jalr t9                       |     t9 ();
    0x004d5530 nop                           |     
    0x004d5534 lw gp, 0x18(sp)               |     gp = *(var_18h);
    0x004d5538 lw t9, -0x7240(gp)            |     t9 = sym.swMacIsWanMacCloned;
    0x004d553c move a0, zero                 |     a0 = 0;
    0x004d5540 jalr t9                       |     t9 ();
    0x004d5544 lw gp, 0x18(sp)               |     gp = *(var_18h);
    0x004d5548 lw t9, -0x5650(gp)            |     t9 = sym.imp.malloc;
    0x004d554c addiu a0, zero, 0x400         |     a0 = 0x400;
    0x004d5550 jalr t9                       |     t9 ();
    0x004d5554 lw gp, 0x18(sp)               |     gp = *(var_18h);
    0x004d5558 move s3, v0                   |     s3 = v0;
                                             |     if (v0 == 0) {
    0x004d555c bnez v0, 0x4d557c             |         
    0x004d5560 lw a0, -0x7fb8(gp)            |         a0 = *((gp - 8174));
    0x004d5564 lw t9, -0x54c0(gp)            |         t9 = sym.imp.perror;
                                             |         /* esilref: 'no enough memory.' */
    0x004d5568 addiu a0, a0, 0x4c38          |         a0 += 0x4c38;
    0x004d556c jalr t9                       |         t9 ();
    0x004d5570 lw gp, 0x18(sp)               |         gp = *(var_18h);
    0x004d5574 addiu v0, zero, -1            |         v0 = -1;
    0x004d5578 b 0x4d59ac                    |         goto label_1;
                                             |     }
    0x004d557c lw t9, -0x6c0c(gp)            |     t9 = sym.imp.memset;
    0x004d5580 move a0, v0                   |     a0 = v0;
    0x004d5584 move a1, zero                 |     a1 = 0;
    0x004d5588 addiu a2, zero, 0x400         |     a2 = 0x400;
    0x004d558c jalr t9                       |     t9 ();
    0x004d5590 addiu a0, sp, 0x38            |     a0 = sp + 0x38;
    0x004d5594 lw gp, 0x18(sp)               |     gp = *(var_18h);
    0x004d5598 addiu a1, zero, 1             |     a1 = 1;
    0x004d559c lw t9, -0x6c0c(gp)            |     t9 = sym.imp.memset;
    0x004d55a0 addiu a2, zero, 0x400         |     a2 = 0x400;
    0x004d55a4 jalr t9                       |     t9 ();
    0x004d55a8 lw gp, 0x18(sp)               |     gp = *(var_18h);
    0x004d55ac lw a1, 0x498(sp)              |     a1 = *(arg_498h);
    0x004d55b0 lw a0, -0x7fb8(gp)            |     a0 = *((gp - 8174));
    0x004d55b4 lw t9, -0x6f24(gp)            |     t9 = sym.imp.strcmp;
                                             |     /* esilref: 'all' */
    0x004d55b8 addiu a0, a0, 0x4c4c          |     a0 += 0x4c4c;
    0x004d55bc jalr t9                       |     t9 ();
    0x004d55c0 lw gp, 0x18(sp)               |     gp = *(var_18h);
    0x004d55c4 sltiu v0, v0, 1               |     v0 = (v0 < 1) ? 1 : 0;
    0x004d55c8 sw v0, 0x458(sp)              |     *(var_458h) = v0;
    0x004d55cc lw s0, -0x7fcc(gp)            |     s0 = *((gp - 8179));
    0x004d55d0 sb zero, (s6)                 |     *(s6) = 0;
    0x004d55d4 addiu s0, s0, 0x47e4          |     s0 += 0x47e4;
    0x004d55d8 lw v0, 8(s0)                  |     v0 = *((s0 + 2));
    0x004d55dc move fp, zero                 |     fp = 0;
                                             |     if (v0 == 0) {
    0x004d55e0 beqz v0, 0x4d5998             |         goto label_2;
                                             |     }
    0x004d55e4 sw zero, 0x460(sp)            |     *(var_460h) = 0;
    0x004d55e8 sw zero, 0x464(sp)            |     *(var_464h) = 0;
    0x004d55ec move s7, zero                 |     s7 = 0;
    0x004d55f0 sw zero, 0x468(sp)            |     *(var_468h) = 0;
    0x004d55f4 sw zero, 0x46c(sp)            |     *(var_46ch) = 0;
                                             | label_0:
    0x004d55f8 addu s1, s7, s0               |     s1 = s7 + s0;
    0x004d55fc lw s0, (s1)                   |     s0 = *(s1);
    0x004d5600 lw t9, -0x7a60(gp)            |     t9 = sym.imp.strlen;
    0x004d5604 move a0, s0                   |     a0 = s0;
    0x004d5608 jalr t9                       |     t9 ();
    0x004d560c move a0, s0                   |     a0 = s0;
    0x004d5610 lw gp, 0x18(sp)               |     gp = *(var_18h);
    0x004d5614 lw a1, 0x498(sp)              |     a1 = *(arg_498h);
    0x004d5618 lw t9, -0x660c(gp)            |     t9 = sym.imp.strncmp;
    0x004d561c move a2, v0                   |     a2 = v0;
    0x004d5620 jalr t9                       |     t9 ();
    0x004d5624 lw gp, 0x18(sp)               |     gp = *(var_18h);
                                             |     if (v0 != 0) {
    0x004d5628 beqz v0, 0x4d563c             |         
    0x004d562c nop                           |         
    0x004d5630 lw v1, 0x458(sp)              |         v1 = *(var_458h);
                                             |         if (v1 == 0) {
    0x004d5634 beqz v1, 0x4d594c             |             goto label_3;
                                             |         }
    0x004d5638 nop                           |         
                                             |     }
    0x004d563c lw v0, 0x18(s1)               |     v0 = *((s1 + 6));
    0x004d5640 move s5, zero                 |     s5 = 0;
    0x004d5644 sw zero, 0x45c(sp)            |     *(var_45ch) = 0;
                                             |     if (v0 <= 0) {
    0x004d5648 blez v0, 0x4d594c             |         goto label_3;
                                             |     }
    0x004d564c move s4, zero                 |     s4 = 0;
                                             |     do {
    0x004d5650 lw v0, 0x458(sp)              |         v0 = *(var_458h);
                                             |         if (v0 != 0) {
    0x004d5654 beqz v0, 0x4d5784             |             
    0x004d5658 nop                           |             
    0x004d565c lw v0, -0x7fcc(gp)            |             v0 = *((gp - 8179));
    0x004d5660 lw t9, -0x7a60(gp)            |             t9 = sym.imp.strlen;
    0x004d5664 addiu v0, v0, 0x47e4          |             v0 += 0x47e4;
    0x004d5668 addu s2, fp, v0               |             s2 = fp + v0;
    0x004d566c lw s0, (s2)                   |             s0 = *(s2);
    0x004d5670 move a0, s0                   |             a0 = s0;
    0x004d5674 jalr t9                       |             t9 ();
    0x004d5678 move a0, s0                   |             a0 = s0;
    0x004d567c lw gp, 0x18(sp)               |             gp = *(var_18h);
    0x004d5680 move a2, v0                   |             a2 = v0;
    0x004d5684 move s1, v0                   |             s1 = v0;
    0x004d5688 lw a1, -0x7fb8(gp)            |             a1 = *((gp - 8174));
    0x004d568c lw t9, -0x660c(gp)            |             t9 = sym.imp.strncmp;
                                             |             /* esilref: 'factory_wan_mac' */
    0x004d5690 addiu a1, a1, 0x32c0          |             a1 += 0x32c0;
    0x004d5694 jalr t9                       |             t9 ();
    0x004d5698 lw gp, 0x18(sp)               |             gp = *(var_18h);
    0x004d569c move a0, s0                   |             a0 = s0;
                                             |             if (v0 == 0) {
    0x004d56a0 beqz v0, 0x4d5928             |                 goto label_4;
                                             |             }
    0x004d56a4 lw a1, -0x7fb8(gp)            |             a1 = *((gp - 8174));
    0x004d56a8 lw t9, -0x660c(gp)            |             t9 = sym.imp.strncmp;
    0x004d56ac move a2, s1                   |             a2 = s1;
                                             |             /* esilref: 'wlan_def_pin' */
    0x004d56b0 addiu a1, a1, 0x41cc          |             a1 += 0x41cc;
    0x004d56b4 jalr t9                       |             t9 ();
    0x004d56b8 lw gp, 0x18(sp)               |             gp = *(var_18h);
    0x004d56bc move a0, s0                   |             a0 = s0;
                                             |             if (v0 == 0) {
    0x004d56c0 beqz v0, 0x4d5928             |                 goto label_4;
                                             |             }
    0x004d56c4 lw a1, -0x7fb8(gp)            |             a1 = *((gp - 8174));
    0x004d56c8 lw t9, -0x660c(gp)            |             t9 = sym.imp.strncmp;
    0x004d56cc move a2, s1                   |             a2 = s1;
                                             |             /* esilref: 'factory_lan_mac' */
    0x004d56d0 addiu a1, a1, 0x32b0          |             a1 += 0x32b0;
    0x004d56d4 jalr t9                       |             t9 ();
    0x004d56d8 lw gp, 0x18(sp)               |             gp = *(var_18h);
                                             |             if (v0 == 0) {
    0x004d56dc beqz v0, 0x4d5928             |                 goto label_4;
                                             |             }
    0x004d56e0 nop                           |             
    0x004d56e4 lw t9, -0x7240(gp)            |             t9 = sym.swMacIsWanMacCloned;
    0x004d56e8 move a0, zero                 |             a0 = 0;
    0x004d56ec jalr t9                       |             t9 ();
    0x004d56f0 lw gp, 0x18(sp)               |             gp = *(var_18h);
                                             |             if (v0 == 0) {
    0x004d56f4 bnez v0, 0x4d5734             |                 
    0x004d56f8 nop                           |                 
    0x004d56fc lw s0, (s2)                   |                 s0 = *(s2);
    0x004d5700 lw t9, -0x7a60(gp)            |                 t9 = sym.imp.strlen;
    0x004d5704 move a0, s0                   |                 a0 = s0;
    0x004d5708 jalr t9                       |                 t9 ();
    0x004d570c move a0, s0                   |                 a0 = s0;
    0x004d5710 lw gp, 0x18(sp)               |                 gp = *(var_18h);
    0x004d5714 move a2, v0                   |                 a2 = v0;
    0x004d5718 lw a1, -0x7fb8(gp)            |                 a1 = *((gp - 8174));
    0x004d571c lw t9, -0x660c(gp)            |                 t9 = sym.imp.strncmp;
                                             |                 /* esilref: 'wan_mac' */
    0x004d5720 addiu a1, a1, 0x32d0          |                 a1 += 0x32d0;
    0x004d5724 jalr t9                       |                 t9 ();
    0x004d5728 lw gp, 0x18(sp)               |                 gp = *(var_18h);
                                             |                 if (v0 == 0) {
    0x004d572c beqz v0, 0x4d5928             |                     goto label_4;
                                             |                 }
    0x004d5730 nop                           |                 
                                             |             }
    0x004d5734 lw t9, -0x6940(gp)            |             t9 = sym.swWlanWpsIsPinChanged;
    0x004d5738 jalr t9                       |             t9 ();
    0x004d573c nop                           |             
    0x004d5740 lw gp, 0x18(sp)               |             gp = *(var_18h);
                                             |             if (v0 != 0) {
    0x004d5744 bnez v0, 0x4d5784             |                 goto label_5;
                                             |             }
    0x004d5748 nop                           |             
    0x004d574c lw s0, (s2)                   |             s0 = *(s2);
    0x004d5750 lw t9, -0x7a60(gp)            |             t9 = sym.imp.strlen;
    0x004d5754 move a0, s0                   |             a0 = s0;
    0x004d5758 jalr t9                       |             t9 ();
    0x004d575c move a0, s0                   |             a0 = s0;
    0x004d5760 lw gp, 0x18(sp)               |             gp = *(var_18h);
    0x004d5764 move a2, v0                   |             a2 = v0;
    0x004d5768 lw a1, -0x7fb8(gp)            |             a1 = *((gp - 8174));
    0x004d576c lw t9, -0x660c(gp)            |             t9 = sym.imp.strncmp;
                                             |             /* esilref: 'wlan_usr_pin' */
    0x004d5770 addiu a1, a1, 0x41dc          |             a1 += 0x41dc;
    0x004d5774 jalr t9                       |             t9 ();
    0x004d5778 lw gp, 0x18(sp)               |             gp = *(var_18h);
                                             |             if (v0 == 0) {
    0x004d577c beqz v0, 0x4d5928             |                 goto label_4;
                                             |             }
    0x004d5780 nop                           |             
                                             |         }
                                             | label_5:
    0x004d5784 lw s2, -0x7fcc(gp)            |         s2 = *((gp - 8179));
    0x004d5788 move a2, s5                   |         a2 = s5;
    0x004d578c lw v1, 0x46c(sp)              |         v1 = *(var_46ch);
    0x004d5790 addiu v0, s2, 0x47e4          |         v0 = s2 + 0x47e4;
    0x004d5794 addu s0, v1, v0               |         s0 = v1 + v0;
    0x004d5798 sb zero, (s3)                 |         *(s3) = 0;
    0x004d579c lw a0, 0xc(s0)                |         a0 = *((s0 + 3));
    0x004d57a0 lw a1, 0x10(s0)               |         a1 = *((s0 + 4));
    0x004d57a4 lw a3, 0x14(s0)               |         a3 = *((s0 + 5));
    0x004d57a8 lw t9, 8(s0)                  |         t9 = *((s0 + 2));
    0x004d57ac sw s3, 0x10(sp)               |         *(var_10h) = s3;
    0x004d57b0 jalr t9                       |         t9 ();
    0x004d57b4 lb v0, (s3)                   |         v0 = *(s3);
    0x004d57b8 lw gp, 0x18(sp)               |         gp = *(var_18h);
                                             |         if (v0 != 0) {
    0x004d57bc beqz v0, 0x4d5928             |             
    0x004d57c0 nop                           |             
    0x004d57c4 lw a1, -0x7fb8(gp)            |             a1 = *((gp - 8174));
    0x004d57c8 lw s1, (s0)                   |             s1 = *(s0);
    0x004d57cc lw t9, -0x64ac(gp)            |             t9 = sym.imp.strstr;
                                             |             /* esilref: '_rcd' */
    0x004d57d0 addiu a1, a1, 0x4c50          |             a1 += 0x4c50;
    0x004d57d4 move a0, s1                   |             a0 = s1;
    0x004d57d8 jalr t9                       |             t9 ();
    0x004d57dc lw gp, 0x18(sp)               |             gp = *(var_18h);
    0x004d57e0 addiu s0, sp, 0x438           |             s0 = sp + 0x438;
                                             |             if (v0 != 0) {
    0x004d57e4 beqz v0, 0x4d5850             |                 
    0x004d57e8 lw t9, -0x4b5c(gp)            |                 t9 = sym.imp.strcpy;
    0x004d57ec move a1, s1                   |                 a1 = s1;
    0x004d57f0 move a0, s0                   |                 a0 = s0;
    0x004d57f4 jalr t9                       |                 t9 ();
    0x004d57f8 move a0, s0                   |                 a0 = s0;
    0x004d57fc lw gp, 0x18(sp)               |                 gp = *(var_18h);
    0x004d5800 addiu a1, sp, 0x20            |                 a1 = sp + 0x20;
    0x004d5804 lw t9, -0x5500(gp)            |                 t9 = sym.splitString;
    0x004d5808 addiu a2, zero, 0x5f          |                 a2 = 0x5f;
    0x004d580c jalr t9                       |                 t9 ();
    0x004d5810 move a0, s3                   |                 a0 = s3;
    0x004d5814 lw gp, 0x18(sp)               |                 gp = *(var_18h);
    0x004d5818 lw a1, -0x7fb8(gp)            |                 a1 = *((gp - 8174));
    0x004d581c lw t9, -0x6f24(gp)            |                 t9 = sym.imp.strcmp;
    0x004d5820 addiu a1, a1, 0x4c58          |                 a1 += 0x4c58;
    0x004d5824 jalr t9                       |                 t9 ();
    0x004d5828 lw gp, 0x18(sp)               |                 gp = *(var_18h);
    0x004d582c addiu v1, sp, 0x20            |                 v1 = sp + 0x20;
                                             |                 if (v0 == 0) {
    0x004d5830 bnez v0, 0x4d5844             |                     
    0x004d5834 addu v1, s4, v1               |                     v1 = s4 + v1;
    0x004d5838 addiu v0, zero, 1             |                     v0 = 1;
    0x004d583c sw v0, 0x18(v1)               |                     *(var_38h) = v0;
    0x004d5840 b 0x4d5850                    |                     
                                             |                 } else {
    0x004d5844 addu v0, s4, v1               |                     v0 = s4 + v1;
    0x004d5848 sw zero, 0x18(v0)             |                     *(var_38h) = 0;
    0x004d584c b 0x4d5928                    |                     
                                             |                 }
                                             |             } else {
    0x004d5850 lw v1, 0x468(sp)              |                 v1 = *(var_468h);
    0x004d5854 addiu v0, s2, 0x47e4          |                 v0 = s2 + 0x47e4;
    0x004d5858 addu v0, v1, v0               |                 v0 = v1 + v0;
    0x004d585c lw v1, 0x18(v0)               |                 v1 = *((v0 + 6));
    0x004d5860 lw s0, (v0)                   |                 s0 = *(v0);
    0x004d5864 addiu v0, zero, 1             |                 v0 = 1;
    0x004d5868 move a2, s0                   |                 a2 = s0;
                                             |                 if (v1 == v0) {
    0x004d586c bne v1, v0, 0x4d588c          |                     
    0x004d5870 lw a1, -0x7fb8(gp)            |                     a1 = *((gp - 8174));
    0x004d5874 lw t9, -0x70a4(gp)            |                     t9 = sym.imp.sprintf;
    0x004d5878 addiu a0, sp, 0x438           |                     a0 = sp + 0x438;
                                             |                     /* esilref: '&s ' */
    0x004d587c addiu a1, a1, 0x4c5c          |                     a1 += 0x4c5c;
    0x004d5880 jalr t9                       |                     t9 ();
    0x004d5884 b 0x4d58e4                    |                     goto label_6;
    0x004d5888 nop                           |                     
                                             |                 }
    0x004d588c lw t9, -0x7a60(gp)            |                 t9 = sym.imp.strlen;
    0x004d5890 addiu a0, sp, 0x20            |                 a0 = sp + 0x20;
    0x004d5894 jalr t9                       |                 t9 ();
    0x004d5898 move a0, s0                   |                 a0 = s0;
    0x004d589c lw gp, 0x18(sp)               |                 gp = *(var_18h);
    0x004d58a0 move a2, v0                   |                 a2 = v0;
    0x004d58a4 lw t9, -0x660c(gp)            |                 t9 = sym.imp.strncmp;
    0x004d58a8 addiu a1, sp, 0x20            |                 a1 = sp + 0x20;
    0x004d58ac jalr t9                       |                 t9 ();
    0x004d58b0 lw gp, 0x18(sp)               |                 gp = *(var_18h);
    0x004d58b4 addu v0, sp, s4               |                 v0 = sp + s4;
                                             |                 if (v0 == 0) {
    0x004d58b8 bnez v0, 0x4d58c8             |                     
    0x004d58bc lw v0, 0x38(v0)               |                     v0 = *(var_38h);
                                             |                     if (v0 == 0) {
    0x004d58c0 beqz v0, 0x4d5928             |                         goto label_4;
                                             |                     }
    0x004d58c4 nop                           |                     
                                             |                 }
    0x004d58c8 lw a1, -0x7fb8(gp)            |                 a1 = *((gp - 8174));
    0x004d58cc move a2, s0                   |                 a2 = s0;
    0x004d58d0 lw t9, -0x70a4(gp)            |                 t9 = sym.imp.sprintf;
    0x004d58d4 addiu a0, sp, 0x438           |                 a0 = sp + 0x438;
                                             |                 /* esilref: '&s &d ' */
    0x004d58d8 addiu a1, a1, 0x4c60          |                 a1 += 0x4c60;
    0x004d58dc addiu a3, s5, 1               |                 a3 = s5 + 1;
    0x004d58e0 jalr t9                       |                 t9 ();
                                             | label_6:
    0x004d58e4 lw gp, 0x18(sp)               |                 gp = *(var_18h);
    0x004d58e8 move a0, s6                   |                 a0 = s6;
[31m    0x004d58ec lw t9, -0x60b8(gp)            |                 t9 = sym.imp.strcat;[0m
    0x004d58f0 addiu a1, sp, 0x438           |                 a1 = sp + 0x438;
    0x004d58f4 jalr t9                       |                 t9 ();
    0x004d58f8 move a0, s6                   |                 a0 = s6;
    0x004d58fc lw gp, 0x18(sp)               |                 gp = *(var_18h);
[31m    0x004d5900 lw t9, -0x60b8(gp)            |                 t9 = sym.imp.strcat;[0m
    0x004d5904 move a1, s3                   |                 a1 = s3;
    0x004d5908 jalr t9                       |                 t9 ();
    0x004d590c move a0, s6                   |                 a0 = s6;
    0x004d5910 lw gp, 0x18(sp)               |                 gp = *(var_18h);
    0x004d5914 lw a1, -0x7fb8(gp)            |                 a1 = *((gp - 8174));
[31m    0x004d5918 lw t9, -0x60b8(gp)            |                 t9 = sym.imp.strcat;[0m
                                             |                 /* esilref: '
' */
    0x004d591c addiu a1, a1, 0x4c34          |                 a1 += 0x4c34;
    0x004d5920 jalr t9                       |                 t9 ();
    0x004d5924 lw gp, 0x18(sp)               |                 gp = *(var_18h);
                                             |             }
                                             |         }
                                             | label_4:
    0x004d5928 lw v0, -0x7fcc(gp)            |         v0 = *((gp - 8179));
    0x004d592c addiu s5, s5, 1               |         s5++;
    0x004d5930 lw v1, 0x464(sp)              |         v1 = *(var_464h);
    0x004d5934 addiu v0, v0, 0x47e4          |         v0 += 0x47e4;
    0x004d5938 addu v0, v1, v0               |         v0 = v1 + v0;
    0x004d593c lw v0, 0x18(v0)               |         v0 = *((v0 + 6));
    0x004d5940 slt v0, s5, v0                |         v0 = (s5 < v0) ? 1 : 0;
    0x004d5944 addiu s4, s4, 4               |         s4 += 4;
    0x004d5948 bnez v0, 0x4d5650             |         
                                             |     } while (v0 != 0);
                                             | label_3:
    0x004d594c lw v1, 0x46c(sp)              |     v1 = *(var_46ch);
    0x004d5950 addiu s7, s7, 0x1c            |     s7 += 0x1c;
    0x004d5954 lw v0, 0x460(sp)              |     v0 = *(var_460h);
    0x004d5958 addiu fp, fp, 0x1c            |     fp += 0x1c;
    0x004d595c addiu v1, v1, 0x1c            |     v1 += 0x1c;
    0x004d5960 lw s0, -0x7fcc(gp)            |     s0 = *((gp - 8179));
    0x004d5964 addiu v0, v0, 0x1c            |     v0 += 0x1c;
    0x004d5968 sw v1, 0x46c(sp)              |     *(var_46ch) = v1;
    0x004d596c lw v1, 0x468(sp)              |     v1 = *(var_468h);
    0x004d5970 addiu s0, s0, 0x47e4          |     s0 += 0x47e4;
    0x004d5974 sw v0, 0x460(sp)              |     *(var_460h) = v0;
    0x004d5978 addu v0, v0, s0               |     v0 += s0;
    0x004d597c addiu v1, v1, 0x1c            |     v1 += 0x1c;
    0x004d5980 sw v1, 0x468(sp)              |     *(var_468h) = v1;
    0x004d5984 lw v1, 0x464(sp)              |     v1 = *(var_464h);
    0x004d5988 lw v0, 8(v0)                  |     v0 = *((v0 + 2));
    0x004d598c addiu v1, v1, 0x1c            |     v1 += 0x1c;
    0x004d5990 sw v1, 0x464(sp)              |     *(var_464h) = v1;
                                             |     if (v0 != 0) {
    0x004d5994 bnez v0, 0x4d55f8             |         goto label_0;
                                             |     }
                                             | label_2:
    0x004d5998 lw t9, -0x7f08(gp)            |     t9 = *((gp - 8130));
    0x004d599c move a0, s3                   |     a0 = s3;
    0x004d59a0 jalr t9                       |     t9 ();
    0x004d59a4 lw gp, 0x18(sp)               |     gp = *(var_18h);
    0x004d59a8 lw v0, 0x45c(sp)              |     v0 = *(var_45ch);
                                             | label_1:
    0x004d59ac lw ra, 0x494(sp)              |     ra = *(var_494h);
    0x004d59b0 lw fp, 0x490(sp)              |     fp = *(var_490h);
    0x004d59b4 lw s7, 0x48c(sp)              |     s7 = *(var_48ch);
    0x004d59b8 lw s6, 0x488(sp)              |     s6 = *(var_488h);
    0x004d59bc lw s5, 0x484(sp)              |     s5 = *(var_484h);
    0x004d59c0 lw s4, 0x480(sp)              |     s4 = *(var_480h);
    0x004d59c4 lw s3, 0x47c(sp)              |     s3 = *(var_47ch);
    0x004d59c8 lw s2, 0x478(sp)              |     s2 = *(var_478h);
    0x004d59cc lw s1, 0x474(sp)              |     s1 = *(var_474h);
    0x004d59d0 lw s0, 0x470(sp)              |     s0 = *(var_470h);
    0x004d59d4 addiu sp, sp, 0x498           |     
    0x004d59d8 jr ra                         |     return v0;
                                             | }
    ; assembly                               | /* r2dec pseudo code output */
                                             | /* /logs/firmware/unblob_extracted/firmware_extract/1180160-3904000.squashfs_v4_le_extract/usr/bin/httpd @ 0x506938 */
                                             | #include <stdint.h>
                                             |  
    ; (fcn) sym.phEncodeAuthInfor ()         | void phEncodeAuthInfor () {
    0x00506938 lui gp, 0xa                   |     
    0x0050693c addiu gp, gp, -0x7318         |     
    0x00506940 addu gp, gp, t9               |     gp += t9;
    0x00506944 addiu sp, sp, -0x350          |     
    0x00506948 sw ra, 0x348(sp)              |     *(var_348h) = ra;
    0x0050694c sw s7, 0x344(sp)              |     *(var_344h) = s7;
    0x00506950 sw s6, 0x340(sp)              |     *(var_340h) = s6;
    0x00506954 sw s5, 0x33c(sp)              |     *(var_33ch) = s5;
    0x00506958 sw s4, 0x338(sp)              |     *(var_338h) = s4;
    0x0050695c sw s3, 0x334(sp)              |     *(var_334h) = s3;
    0x00506960 sw s2, 0x330(sp)              |     *(var_330h) = s2;
    0x00506964 sw s1, 0x32c(sp)              |     *(var_32ch) = s1;
    0x00506968 sw s0, 0x328(sp)              |     *(var_328h) = s0;
    0x0050696c sw gp, 0x18(sp)               |     *(var_18h) = gp;
    0x00506970 lw s3, 0x360(sp)              |     s3 = *(arg_360h);
    0x00506974 move s0, a1                   |     s0 = a1;
    0x00506978 lw t9, -0x63d0(gp)            |     t9 = sym.phReadLongFromLittleEndian;
    0x0050697c move s5, a0                   |     s5 = a0;
    0x00506980 addiu a0, s3, 6               |     a0 = s3 + 6;
    0x00506984 move s2, a3                   |     s2 = a3;
    0x00506988 move s4, a2                   |     s4 = a2;
    0x0050698c nor s0, zero, s0              |     __asm ("nor s0, zero, s0");
    0x00506990 jalr t9                       |     t9 ();
    0x00506994 move a0, s2                   |     a0 = s2;
    0x00506998 or s1, v0, s0                 |     s1 = v0 | s0;
    0x0050699c lui v0, 0x8888                |     v0 = 0x88888889;
    0x005069a0 ori v0, v0, 0x8889            |     
    0x005069a4 sra v1, s1, 0x1f              |     v1 = s1 >> 0x1f;
    0x005069a8 mult s1, v0                   |     __asm ("mult s1, v0");
    0x005069ac lw gp, 0x18(sp)               |     gp = *(var_18h);
    0x005069b0 addiu s7, sp, 0x20            |     s7 = sp + 0x20;
    0x005069b4 lw t9, -0x7a60(gp)            |     t9 = sym.imp.strlen;
    0x005069b8 addiu s6, sp, 0x220           |     s6 = sp + 0x220;
    0x005069bc mfhi v0                       |     __asm ("mfhi v0");
    0x005069c0 addu v0, v0, s1               |     v0 += s1;
    0x005069c4 sra v0, v0, 4                 |     v0 >>= 4;
    0x005069c8 subu a1, v0, v1               |     __asm ("subu a1, v0, v1");
    0x005069cc sll v0, a1, 4                 |     v0 = a1 << 4;
    0x005069d0 subu v0, v0, a1               |     __asm ("subu v0, v0, a1");
    0x005069d4 sll v0, v0, 1                 |     v0 <<= 1;
    0x005069d8 subu a1, s1, v0               |     __asm ("subu a1, s1, v0");
    0x005069dc addiu v0, zero, -1            |     v0 = -1;
    0x005069e0 negu v1, a1                   |     __asm ("negu v1, a1");
    0x005069e4 andi a1, a1, 0x1f             |     a1 &= 0x1f;
    0x005069e8 andi v1, v1, 0x1f             |     v1 &= 0x1f;
    0x005069ec srav a1, s1, a1               |     __asm ("srav a1, s1, a1");
    0x005069f0 sllv v0, v0, v1               |     v0 <<= v1;
    0x005069f4 sllv s1, s1, v1               |     s1 <<= v1;
    0x005069f8 nor v0, zero, v0              |     __asm ("nor v0, zero, v0");
    0x005069fc and a1, a1, v0                |     a1 &= v0;
    0x00506a00 or s1, s1, a1                 |     s1 |= a1;
    0x00506a04 jalr t9                       |     t9 ();
    0x00506a08 move a0, s2                   |     a0 = s2;
    0x00506a0c lw gp, 0x18(sp)               |     gp = *(var_18h);
    0x00506a10 move a1, v0                   |     a1 = v0;
    0x00506a14 lw a3, 0x364(sp)              |     a3 = *(arg_364h);
    0x00506a18 move a2, s3                   |     a2 = s3;
    0x00506a1c lw t9, -0x4c94(gp)            |     t9 = sym.hmac_md5;
    0x00506a20 sw s7, 0x10(sp)               |     *(var_10h) = s7;
    0x00506a24 jalr t9                       |     t9 ();
    0x00506a28 addiu a2, zero, 0x100         |     a2 = 0x100;
    0x00506a2c lw gp, 0x18(sp)               |     gp = *(var_18h);
    0x00506a30 move a0, s6                   |     a0 = s6;
    0x00506a34 lw t9, -0x6c0c(gp)            |     t9 = sym.imp.memset;
    0x00506a38 move a1, zero                 |     a1 = 0;
    0x00506a3c jalr t9                       |     t9 ();
    0x00506a40 move a0, s6                   |     a0 = s6;
    0x00506a44 lw gp, 0x18(sp)               |     gp = *(var_18h);
    0x00506a48 lw t9, -0x4b5c(gp)            |     t9 = sym.imp.strcpy;
    0x00506a4c move a1, s4                   |     a1 = s4;
    0x00506a50 jalr t9                       |     t9 ();
    0x00506a54 move a0, s6                   |     a0 = s6;
    0x00506a58 lw gp, 0x18(sp)               |     gp = *(var_18h);
    0x00506a5c lw a1, -0x7fdc(gp)            |     a1 = *((gp - 8183));
[31m    0x00506a60 lw t9, -0x60b8(gp)            |     t9 = sym.imp.strcat;[0m
    0x00506a64 addiu a1, a1, -0x36cc         |     a1 += -0x36cc;
    0x00506a68 jalr t9                       |     t9 ();
    0x00506a6c lw gp, 0x18(sp)               |     gp = *(var_18h);
    0x00506a70 lw t9, -0x7a60(gp)            |     t9 = sym.imp.strlen;
    0x00506a74 move a0, s6                   |     a0 = s6;
    0x00506a78 jalr t9                       |     t9 ();
    0x00506a7c move a0, s1                   |     a0 = s1;
    0x00506a80 lw gp, 0x18(sp)               |     gp = *(var_18h);
    0x00506a84 addu s1, s6, v0               |     s1 = s6 + v0;
    0x00506a88 move a1, s1                   |     a1 = s1;
    0x00506a8c move s0, v0                   |     s0 = v0;
    0x00506a90 lw t9, -0x529c(gp)            |     t9 = sym.phWriteLongToLittleEndian;
    0x00506a94 addiu s2, v0, 0x18            |     s2 = v0 + 0x18;
    0x00506a98 addiu s0, s0, 8               |     s0 += 8;
    0x00506a9c jalr t9                       |     t9 ();
    0x00506aa0 addiu a1, s1, 4               |     a1 = s1 + 4;
    0x00506aa4 lw gp, 0x18(sp)               |     gp = *(var_18h);
    0x00506aa8 lw t9, -0x529c(gp)            |     t9 = sym.phWriteLongToLittleEndian;
    0x00506aac move a0, s5                   |     a0 = s5;
    0x00506ab0 jalr t9                       |     t9 ();
    0x00506ab4 slt v0, s0, s2                |     v0 = (s0 < s2) ? 1 : 0;
    0x00506ab8 lw gp, 0x18(sp)               |     gp = *(var_18h);
    0x00506abc move a1, zero                 |     a1 = 0;
                                             |     if (v0 == 0) {
    0x00506ac0 beqz v0, 0x506ae8             |         goto label_0;
                                             |     }
    0x00506ac4 move a2, s2                   |     a2 = s2;
                                             |     do {
    0x00506ac8 addu v0, s7, a1               |         v0 = s7 + a1;
    0x00506acc addu a0, s7, s0               |         a0 = s7 + s0;
    0x00506ad0 lbu v1, (v0)                  |         v1 = *(v0);
    0x00506ad4 addiu s0, s0, 1               |         s0++;
    0x00506ad8 slt v0, s0, a2                |         v0 = (s0 < a2) ? 1 : 0;
    0x00506adc addiu a1, a1, 1               |         a1++;
    0x00506ae0 sb v1, 0x200(a0)              |         *((a0 + 512)) = v1;
    0x00506ae4 bnez v0, 0x506ac8             |         
                                             |     } while (v0 != 0);
                                             | label_0:
    0x00506ae8 lw t9, -0x6c0c(gp)            |     t9 = sym.imp.memset;
    0x00506aec addiu s0, sp, 0x120           |     s0 = sp + 0x120;
    0x00506af0 move a0, s0                   |     a0 = s0;
    0x00506af4 move a1, zero                 |     a1 = 0;
    0x00506af8 addiu a2, zero, 0x100         |     a2 = 0x100;
    0x00506afc jalr t9                       |     t9 ();
    0x00506b00 addiu v0, sp, 0x320           |     v0 = sp + 0x320;
    0x00506b04 lw gp, 0x18(sp)               |     gp = *(var_18h);
    0x00506b08 move a2, s0                   |     a2 = s0;
    0x00506b0c move a0, s6                   |     a0 = s6;
    0x00506b10 move a1, s2                   |     a1 = s2;
    0x00506b14 lw t9, -0x4d9c(gp)            |     t9 = sym.encode64;
    0x00506b18 addiu a3, zero, 0x100         |     a3 = 0x100;
    0x00506b1c sw v0, 0x10(sp)               |     *(var_10h) = v0;
    0x00506b20 jalr t9                       |     t9 ();
    0x00506b24 move a0, s0                   |     a0 = s0;
    0x00506b28 lw gp, 0x18(sp)               |     gp = *(var_18h);
    0x00506b2c lw a1, -0x7fdc(gp)            |     a1 = *((gp - 8183));
[31m    0x00506b30 lw t9, -0x60b8(gp)            |     t9 = sym.imp.strcat;[0m
                                             |     /* esilref: '
' */
    0x00506b34 addiu a1, a1, -0x38ec         |     a1 += -0x38ec;
    0x00506b38 jalr t9                       |     t9 ();
    0x00506b3c lw gp, 0x18(sp)               |     gp = *(var_18h);
    0x00506b40 lw a0, 0x368(sp)              |     a0 = *(arg_368h);
    0x00506b44 lw t9, -0x4b5c(gp)            |     t9 = sym.imp.strcpy;
    0x00506b48 move a1, s0                   |     a1 = s0;
    0x00506b4c jalr t9                       |     t9 ();
    0x00506b50 lw v0, 0x320(sp)              |     v0 = *(var_320h);
    0x00506b54 lw gp, 0x18(sp)               |     gp = *(var_18h);
    0x00506b58 lw ra, 0x348(sp)              |     ra = *(var_348h);
    0x00506b5c addiu v0, v0, 2               |     v0 += 2;
    0x00506b60 lw s7, 0x344(sp)              |     s7 = *(var_344h);
    0x00506b64 lw s6, 0x340(sp)              |     s6 = *(var_340h);
    0x00506b68 lw s5, 0x33c(sp)              |     s5 = *(var_33ch);
    0x00506b6c lw s4, 0x338(sp)              |     s4 = *(var_338h);
    0x00506b70 lw s3, 0x334(sp)              |     s3 = *(var_334h);
    0x00506b74 lw s2, 0x330(sp)              |     s2 = *(var_330h);
    0x00506b78 lw s1, 0x32c(sp)              |     s1 = *(var_32ch);
    0x00506b7c lw s0, 0x328(sp)              |     s0 = *(var_328h);
    0x00506b80 addiu sp, sp, 0x350           |     
    0x00506b84 jr ra                         |     return v0;
                                             | }
    ; assembly                               | /* r2dec pseudo code output */
                                             | /* /logs/firmware/unblob_extracted/firmware_extract/1180160-3904000.squashfs_v4_le_extract/usr/bin/httpd @ 0x4d7ee0 */
                                             | #include <stdint.h>
                                             |  
    ; (fcn) sym.updateDigest ()              | void updateDigest () {
    0x004d7ee0 lui gp, 0xc                   |     
    0x004d7ee4 addiu gp, gp, 0x7740          |     
    0x004d7ee8 addu gp, gp, t9               |     gp += t9;
    0x004d7eec addiu sp, sp, -0xa8           |     
    0x004d7ef0 sw ra, 0xa0(sp)               |     *(var_a0h) = ra;
    0x004d7ef4 sw s3, 0x9c(sp)               |     *(var_9ch) = s3;
    0x004d7ef8 sw s2, 0x98(sp)               |     *(var_98h) = s2;
    0x004d7efc sw s1, 0x94(sp)               |     *(var_94h) = s1;
    0x004d7f00 sw s0, 0x90(sp)               |     *(var_90h) = s0;
    0x004d7f04 sw gp, 0x10(sp)               |     *(var_10h) = gp;
    0x004d7f08 lw t9, -0x57f8(gp)            |     t9 = sym.swGetPasswordCfg;
    0x004d7f0c addiu a0, sp, 0x50            |     a0 = sp + 0x50;
    0x004d7f10 lw s2, -0x7fe8(gp)            |     s2 = *((gp - 8186));
    0x004d7f14 addiu s0, sp, 0x80            |     s0 = sp + 0x80;
    0x004d7f18 jalr t9                       |     t9 ();
    0x004d7f1c move a1, s0                   |     a1 = s0;
    0x004d7f20 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x004d7f24 addiu a0, s2, -0x309c         |     a0 = s2 + -0x309c;
    0x004d7f28 addiu s3, sp, 0x70            |     s3 = sp + 0x70;
    0x004d7f2c lw t9, -0x6f24(gp)            |     t9 = sym.imp.strcmp;
    0x004d7f30 addiu s1, sp, 0x30            |     s1 = sp + 0x30;
    0x004d7f34 jalr t9                       |     t9 ();
    0x004d7f38 addiu a1, sp, 0x70            |     a1 = sp + 0x70;
    0x004d7f3c lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x004d7f40 lw a0, -0x7fe8(gp)            |     a0 = *((gp - 8186));
    0x004d7f44 lw t9, -0x6f24(gp)            |     t9 = sym.imp.strcmp;
    0x004d7f48 addiu a0, a0, -0x308c         |     a0 += -0x308c;
                                             |     if (v0 == 0) {
    0x004d7f4c bnez v0, 0x4d7f64             |         
    0x004d7f50 jalr t9                       |         t9 ();
    0x004d7f54 nop                           |         
    0x004d7f58 lw gp, 0x10(sp)               |         gp = *(var_10h);
                                             |         if (v0 == 0) {
    0x004d7f5c beqz v0, 0x4d8028             |             goto label_0;
                                             |         }
    0x004d7f60 nop                           |         
                                             |     }
    0x004d7f64 lw t9, -0x4b5c(gp)            |     t9 = sym.imp.strcpy;
    0x004d7f68 addiu a0, s2, -0x309c         |     a0 = s2 + -0x309c;
    0x004d7f6c move a1, s0                   |     a1 = s0;
    0x004d7f70 jalr t9                       |     t9 ();
    0x004d7f74 move a1, s3                   |     a1 = s3;
    0x004d7f78 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x004d7f7c lw a0, -0x7fe8(gp)            |     a0 = *((gp - 8186));
    0x004d7f80 lw t9, -0x4b5c(gp)            |     t9 = sym.imp.strcpy;
    0x004d7f84 addiu a0, a0, -0x308c         |     a0 += -0x308c;
    0x004d7f88 jalr t9                       |     t9 ();
    0x004d7f8c move a1, s3                   |     a1 = s3;
    0x004d7f90 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x004d7f94 lw t9, -0x4b5c(gp)            |     t9 = sym.imp.strcpy;
    0x004d7f98 move a0, s1                   |     a0 = s1;
    0x004d7f9c jalr t9                       |     t9 ();
    0x004d7fa0 move a1, s0                   |     a1 = s0;
    0x004d7fa4 lw gp, 0x10(sp)               |     gp = *(var_10h);
[31m    0x004d7fa8 lw t9, -0x60b8(gp)            |     t9 = sym.imp.strcat;[0m
    0x004d7fac move a0, s1                   |     a0 = s1;
    0x004d7fb0 jalr t9                       |     t9 ();
    0x004d7fb4 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x004d7fb8 lw t9, -0x7a60(gp)            |     t9 = sym.imp.strlen;
    0x004d7fbc move a0, s1                   |     a0 = s1;
    0x004d7fc0 jalr t9                       |     t9 ();
    0x004d7fc4 move a1, s1                   |     a1 = s1;
    0x004d7fc8 lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x004d7fcc move a2, v0                   |     a2 = v0;
    0x004d7fd0 lw t9, -0x5378(gp)            |     t9 = sym.md5_make_digest;
    0x004d7fd4 addiu a0, sp, 0x18            |     a0 = sp + 0x18;
    0x004d7fd8 jalr t9                       |     t9 ();
    0x004d7fdc lw gp, 0x10(sp)               |     gp = *(var_10h);
    0x004d7fe0 lw a0, 0x18(sp)               |     a0 = *(var_18h);
    0x004d7fe4 lw v1, 0x1c(sp)               |     v1 = *(var_1ch);
    0x004d7fe8 lw a1, -0x7fe8(gp)            |     a1 = *((gp - 8186));
    0x004d7fec srl a2, a0, 0x18              |     a2 = a0 >> 0x18;
    0x004d7ff0 srl a3, a0, 0x10              |     a3 = a0 >> 0x10;
    0x004d7ff4 srl t0, a0, 8                 |     t0 = a0 >> 8;
    0x004d7ff8 addiu v0, a1, -0x30a4         |     v0 = a1 + -0x30a4;
    0x004d7ffc srl t1, v1, 0x18              |     t1 = v1 >> 0x18;
    0x004d8000 srl t2, v1, 0x10              |     t2 = v1 >> 0x10;
    0x004d8004 srl t3, v1, 8                 |     t3 = v1 >> 8;
    0x004d8008 sb v1, 7(v0)                  |     *((v0 + 7)) = v1;
    0x004d800c sb a2, -0x30a4(a1)            |     *((a1 - 12452)) = a2;
    0x004d8010 sb a3, 1(v0)                  |     *((v0 + 1)) = a3;
    0x004d8014 sb t0, 2(v0)                  |     *((v0 + 2)) = t0;
    0x004d8018 sb a0, 3(v0)                  |     *((v0 + 3)) = a0;
    0x004d801c sb t1, 4(v0)                  |     *((v0 + 4)) = t1;
    0x004d8020 sb t2, 5(v0)                  |     *((v0 + 5)) = t2;
    0x004d8024 sb t3, 6(v0)                  |     *((v0 + 6)) = t3;
                                             | label_0:
    0x004d8028 lw ra, 0xa0(sp)               |     ra = *(var_a0h);
    0x004d802c lw s3, 0x9c(sp)               |     s3 = *(var_9ch);
    0x004d8030 lw s2, 0x98(sp)               |     s2 = *(var_98h);
    0x004d8034 lw s1, 0x94(sp)               |     s1 = *(var_94h);
    0x004d8038 lw s0, 0x90(sp)               |     s0 = *(var_90h);
    0x004d803c addiu sp, sp, 0xa8            |     
    0x004d8040 jr ra                         |     return v1;
                                             | }
    ; assembly                               | /* r2dec pseudo code output */
                                             | /* /logs/firmware/unblob_extracted/firmware_extract/1180160-3904000.squashfs_v4_le_extract/usr/bin/httpd @ 0x4e60fc */
                                             | #include <stdint.h>
                                             |  
    ; (fcn) sym.web_server_callback ()       | void web_server_callback () {
    0x004e60fc lui gp, 0xc                   |     
    0x004e6100 addiu gp, gp, -0x6adc         |     
    0x004e6104 addu gp, gp, t9               |     gp += t9;
    0x004e6108 addiu sp, sp, -0x740          |     
    0x004e610c sw ra, 0x73c(sp)              |     *(var_73ch) = ra;
    0x004e6110 sw fp, 0x738(sp)              |     *(var_738h) = fp;
    0x004e6114 sw s7, 0x734(sp)              |     *(var_734h) = s7;
    0x004e6118 sw s6, 0x730(sp)              |     *(var_730h) = s6;
    0x004e611c sw s5, 0x72c(sp)              |     *(var_72ch) = s5;
    0x004e6120 sw s4, 0x728(sp)              |     *(var_728h) = s4;
    0x004e6124 sw s3, 0x724(sp)              |     *(var_724h) = s3;
    0x004e6128 sw s2, 0x720(sp)              |     *(var_720h) = s2;
    0x004e612c sw s1, 0x71c(sp)              |     *(var_71ch) = s1;
    0x004e6130 sw s0, 0x718(sp)              |     *(var_718h) = s0;
    0x004e6134 sw gp, 0x28(sp)               |     *(var_28h) = gp;
    0x004e6138 lw t9, -0x6c0c(gp)            |     t9 = sym.imp.memset;
    0x004e613c move s5, a1                   |     s5 = a1;
    0x004e6140 sw a2, 0x748(sp)              |     *(arg_748h) = a2;
    0x004e6144 addiu a0, sp, 0x30            |     a0 = sp + 0x30;
    0x004e6148 move a1, zero                 |     a1 = 0;
    0x004e614c addiu a2, zero, 0x400         |     a2 = 0x400;
    0x004e6150 sw zero, 0x710(sp)            |     *(var_710h) = 0;
    0x004e6154 addiu s6, sp, 0x430           |     s6 = sp + 0x430;
    0x004e6158 jalr t9                       |     t9 ();
    0x004e615c move a0, s6                   |     a0 = s6;
    0x004e6160 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x004e6164 move a1, zero                 |     a1 = 0;
    0x004e6168 addiu a2, zero, 0x64          |     a2 = 0x64;
    0x004e616c addiu s4, sp, 0x580           |     s4 = sp + 0x580;
    0x004e6170 lw t9, -0x6c0c(gp)            |     t9 = sym.imp.memset;
    0x004e6174 addiu s7, sp, 0x498           |     s7 = sp + 0x498;
    0x004e6178 addiu s0, s5, 8               |     s0 = s5 + 8;
    0x004e617c jalr t9                       |     t9 ();
    0x004e6180 move a0, s4                   |     a0 = s4;
    0x004e6184 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x004e6188 move a1, zero                 |     a1 = 0;
    0x004e618c addiu a2, zero, 0x64          |     a2 = 0x64;
    0x004e6190 lw t9, -0x6c0c(gp)            |     t9 = sym.imp.memset;
    0x004e6194 sw zero, 0x498(sp)            |     *(var_498h) = 0;
    0x004e6198 sw zero, 0x49c(sp)            |     *(var_49ch) = 0;
    0x004e619c sw zero, 0x4a0(sp)            |     *(var_4a0h) = 0;
    0x004e61a0 sw zero, 0x4a4(sp)            |     *(var_4a4h) = 0;
    0x004e61a4 jalr t9                       |     t9 ();
    0x004e61a8 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x004e61ac lw t9, -0x73b0(gp)            |     t9 = sym.print_http_headers;
    0x004e61b0 move a0, s5                   |     a0 = s5;
    0x004e61b4 jalr t9                       |     t9 ();
    0x004e61b8 lw v1, 4(s5)                  |     v1 = *((s5 + 1));
    0x004e61bc lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x004e61c0 addiu v0, v1, -5              |     v0 = v1 + -5;
    0x004e61c4 sltiu v0, v0, 2               |     v0 = (v0 < 2) ? 1 : 0;
                                             |     if (v0 == 0) {
    0x004e61c8 bnez v0, 0x4e6204             |         
    0x004e61cc nop                           |         
    0x004e61d0 addiu v0, zero, 0xa           |         v0 = 0xa;
                                             |         if (v1 == 0) {
    0x004e61d4 beqz v1, 0x4e6204             |             goto label_0;
                                             |         }
    0x004e61d8 addiu a2, zero, 0x31e         |         a2 = 0x31e;
                                             |         if (v1 == v0) {
    0x004e61dc beq v1, v0, 0x4e6204          |             goto label_0;
                                             |         }
    0x004e61e0 lw a0, -0x7fdc(gp)            |         a0 = *((gp - 8183));
    0x004e61e4 lw a1, -0x7fdc(gp)            |         a1 = *((gp - 8183));
    0x004e61e8 lw a3, -0x7fdc(gp)            |         a3 = *((gp - 8183));
                                             |         /* esilref: 'req->method == HTTPMETHOD_GET || req->method == HTTPMETHOD_HEAD || req->method == HTTPMETHOD_POST || req->method == HTTPMETHOD_SIMPLEGET' */
    0x004e61ec addiu a0, a0, -0x7e1c         |         a0 += -0x7e1c;
    0x004e61f0 lw t9, -0x7b30(gp)            |         t9 = sym.imp.__assert;
                                             |         /* esilref: 'libUpnp/src/webserver.c' */
    0x004e61f4 addiu a1, a1, -0x7f18         |         a1 += -0x7f18;
                                             |         /* esilref: 'process_request' */
    0x004e61f8 addiu a3, a3, -0x7e2c         |         a3 += -0x7e2c;
    0x004e61fc jalr t9                       |         t9 ();
    0x004e6200 lw gp, 0x28(sp)               |         gp = *(var_28h);
                                             |     }
                                             | label_0:
    0x004e6204 lw t9, -0x6110(gp)            |     t9 = sym.http_CalcResponseVersion;
    0x004e6208 addiu a3, sp, 0x700           |     a3 = sp + 0x700;
    0x004e620c lw a0, 0x138(s5)              |     a0 = *((s5 + 78));
    0x004e6210 addiu a2, sp, 0x6fc           |     a2 = sp + 0x6fc;
    0x004e6214 lw a1, 0x13c(s5)              |     a1 = *((s5 + 79));
    0x004e6218 addiu s0, s0, 0xb             |     s0 += 0xb;
    0x004e621c sb zero, 0x5f8(sp)            |     *(var_5f8h) = 0;
    0x004e6220 addiu s3, zero, 0x1f4         |     s3 = 0x1f4;
    0x004e6224 jalr t9                       |     t9 ();
    0x004e6228 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x004e622c lw t9, -0x7a60(gp)            |     t9 = sym.imp.strlen;
    0x004e6230 move a0, s0                   |     a0 = s0;
    0x004e6234 jalr t9                       |     t9 ();
    0x004e6238 move a3, v0                   |     a3 = v0;
    0x004e623c addiu v0, v0, 1               |     v0++;
    0x004e6240 sltiu v0, v0, 0x65            |     v0 = (v0 < 0x65) ? 1 : 0;
    0x004e6244 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x004e6248 move a2, s0                   |     a2 = s0;
                                             |     if (v0 == 0) {
    0x004e624c beqz v0, 0x4e66c8             |         goto label_1;
                                             |     }
    0x004e6250 lw t9, -0x4d8c(gp)            |     t9 = sym.bufCharCopy;
    0x004e6254 addiu a1, zero, 0x64          |     a1 = 0x64;
    0x004e6258 move a0, s4                   |     a0 = s4;
    0x004e625c jalr t9                       |     t9 ();
    0x004e6260 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x004e6264 lw t9, -0x7a60(gp)            |     t9 = sym.imp.strlen;
    0x004e6268 move a0, s0                   |     a0 = s0;
    0x004e626c jalr t9                       |     t9 ();
    0x004e6270 addiu a1, sp, 0x704           |     a1 = sp + 0x704;
    0x004e6274 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x004e6278 move a0, s4                   |     a0 = s4;
    0x004e627c lw t9, -0x5200(gp)            |     t9 = sym.remove_escaped_chars;
    0x004e6280 sw v0, 0x704(sp)              |     *(var_704h) = v0;
    0x004e6284 jalr t9                       |     t9 ();
    0x004e6288 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x004e628c lw t9, -0x7a60(gp)            |     t9 = sym.imp.strlen;
    0x004e6290 move a0, s0                   |     a0 = s0;
    0x004e6294 jalr t9                       |     t9 ();
    0x004e6298 move a0, s4                   |     a0 = s4;
    0x004e629c lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x004e62a0 lw t9, -0x609c(gp)            |     t9 = sym.remove_dots;
    0x004e62a4 move a1, v0                   |     a1 = v0;
    0x004e62a8 jalr t9                       |     t9 ();
    0x004e62ac lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x004e62b0 addiu v0, zero, 0x2f          |     v0 = 0x2f;
                                             |     if (v0 != 0) {
    0x004e62b4 beqz v0, 0x4e62c0             |         
    0x004e62b8 addiu s3, zero, 0x193         |         s3 = 0x193;
    0x004e62bc b 0x4e66c8                    |         goto label_1;
                                             |     }
    0x004e62c0 lb s2, 0x580(sp)              |     s2 = *(var_580h);
                                             |     if (s2 != v0) {
    0x004e62c4 beq s2, v0, 0x4e62d4          |         
    0x004e62c8 nop                           |         
    0x004e62cc addiu s3, zero, 0x190         |         s3 = 0x190;
    0x004e62d0 b 0x4e66c8                    |         goto label_1;
                                             |     }
    0x004e62d4 lw s1, -0x5410(gp)            |     s1 = *(gp);
    0x004e62d8 lb v0, (s1)                   |     v0 = *(s1);
                                             |     if (v0 == 0) {
    0x004e62dc beqz v0, 0x4e66c8             |         goto label_1;
                                             |     }
    0x004e62e0 nop                           |     
    0x004e62e4 lw t9, -0x7a60(gp)            |     t9 = sym.imp.strlen;
    0x004e62e8 move a0, s1                   |     a0 = s1;
    0x004e62ec jalr t9                       |     t9 ();
    0x004e62f0 move a0, s4                   |     a0 = s4;
    0x004e62f4 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x004e62f8 lw t9, -0x7a60(gp)            |     t9 = sym.imp.strlen;
    0x004e62fc move s0, v0                   |     s0 = v0;
    0x004e6300 jalr t9                       |     t9 ();
    0x004e6304 addu s0, s0, v0               |     s0 += v0;
    0x004e6308 sltiu s0, s0, 0x64            |     s0 = (s0 < 0x64) ? 1 : 0;
    0x004e630c lw gp, 0x28(sp)               |     gp = *(var_28h);
                                             |     if (s0 == 0) {
    0x004e6310 beqz s0, 0x4e66c8             |         goto label_1;
                                             |     }
    0x004e6314 nop                           |     
    0x004e6318 lw t9, -0x4b5c(gp)            |     t9 = sym.imp.strcpy;
    0x004e631c move a1, s1                   |     a1 = s1;
    0x004e6320 move a0, s6                   |     a0 = s6;
    0x004e6324 jalr t9                       |     t9 ();
    0x004e6328 move a0, s6                   |     a0 = s6;
    0x004e632c lw gp, 0x28(sp)               |     gp = *(var_28h);
[31m    0x004e6330 lw t9, -0x60b8(gp)            |     t9 = sym.imp.strcat;[0m
    0x004e6334 move a1, s4                   |     a1 = s4;
    0x004e6338 jalr t9                       |     t9 ();
    0x004e633c lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x004e6340 lw t9, -0x7a60(gp)            |     t9 = sym.imp.strlen;
    0x004e6344 move a0, s6                   |     a0 = s6;
    0x004e6348 jalr t9                       |     t9 ();
    0x004e634c lb v1, (s6)                   |     v1 = *(s6);
    0x004e6350 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x004e6354 move a0, v0                   |     a0 = v0;
                                             |     if (v1 == 0) {
    0x004e6358 beqz v1, 0x4e6384             |         goto label_2;
                                             |     }
    0x004e635c addu v0, s6, v0               |     v0 = s6 + v0;
    0x004e6360 lb v0, -1(v0)                 |     v0 = *(var_1h);
    0x004e6364 addiu a1, zero, 0x2f          |     a1 = 0x2f;
                                             |     if (v0 != s2) {
    0x004e6368 bne v0, s2, 0x4e6384          |         goto label_2;
                                             |     }
                                             |     do {
    0x004e636c addiu a0, a0, -1              |         a0 += -1;
    0x004e6370 addu v0, s6, a0               |         v0 = s6 + a0;
                                             |         if (v1 == 0) {
    0x004e6374 beqz v1, 0x4e6384             |             goto label_2;
                                             |         }
    0x004e6378 lb v0, -1(v0)                 |         v0 = *(var_1h_2);
    0x004e637c beq v0, a1, 0x4e636c          |         
                                             |     } while (v0 == a1);
    0x004e6380 nop                           |     
                                             | label_2:
    0x004e6384 lw v1, 4(s5)                  |     v1 = *((s5 + 1));
    0x004e6388 addu v0, s6, a0               |     v0 = s6 + a0;
    0x004e638c sb zero, (v0)                 |     *(v0) = 0;
                                             |     if (v1 == 0) {
    0x004e6390 beqz v1, 0x4e64f8             |         goto label_3;
                                             |     }
    0x004e6394 lw t9, -0x5ee8(gp)            |     t9 = sym.sfStat;
    0x004e6398 move a0, s6                   |     a0 = s6;
    0x004e639c sb zero, 0x5f8(sp)            |     *(var_5f8h) = 0;
    0x004e63a0 addiu a1, sp, 0x660           |     a1 = sp + 0x660;
    0x004e63a4 jalr t9                       |     t9 ();
    0x004e63a8 addiu v1, zero, -1            |     v1 = -1;
    0x004e63ac lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x004e63b0 addiu a2, sp, 0x5e8           |     a2 = sp + 0x5e8;
                                             |     if (v0 == v1) {
    0x004e63b4 beq v0, v1, 0x4e64b8          |         goto label_4;
                                             |     }
    0x004e63b8 lw v0, 0x674(sp)              |     v0 = *(var_674h);
    0x004e63bc andi v1, v0, 0xf000           |     v1 = v0 & 0xf000;
    0x004e63c0 addiu v0, zero, 0x4000        |     v0 = 0x4000;
    0x004e63c4 ori v0, zero, 0x8000          |     v0 = 0x8000;
                                             |     if (v1 == v0) {
    0x004e63c8 bne v1, v0, 0x4e63d8          |         
    0x004e63cc addiu v0, zero, 1             |         v0 = 1;
    0x004e63d0 sw v0, 0x5f0(sp)              |         *(var_5f0h) = v0;
    0x004e63d4 b 0x4e63e8                    |         
                                             |     } else {
    0x004e63d8 addiu s3, zero, 0x194         |         s3 = 0x194;
                                             |         if (v1 != v0) {
    0x004e63dc bne v1, v0, 0x4e66c8          |             goto label_1;
                                             |         }
    0x004e63e0 sw zero, 0x5f0(sp)            |         *(var_5f0h) = 0;
    0x004e63e4 addiu v0, zero, 1             |         v0 = 1;
                                             |     }
    0x004e63e8 move a0, s6                   |     a0 = s6;
    0x004e63ec sw v0, 0xc(a2)                |     *(var_5f4h) = v0;
    0x004e63f0 addiu a1, zero, 0x2e          |     a1 = 0x2e;
    0x004e63f4 lw v0, 0x694(sp)              |     v0 = *(var_694h);
    0x004e63f8 addiu fp, a2, 0x10            |     fp = a2 + 0x10;
    0x004e63fc lw t9, -0x5e54(gp)            |     t9 = sym.imp.strrchr;
    0x004e6400 sw v0, (a2)                   |     *(a2) = v0;
    0x004e6404 lw v0, 0x6a4(sp)              |     v0 = *(var_6a4h);
    0x004e6408 sw zero, 0x10(a2)             |     *(var_5f8h) = 0;
    0x004e640c sw v0, 4(a2)                  |     *(var_5ech) = v0;
    0x004e6410 jalr t9                       |     t9 ();
    0x004e6414 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x004e6418 move s3, zero                 |     s3 = 0;
                                             |     if (v0 == 0) {
    0x004e641c beqz v0, 0x4e649c             |         goto label_5;
                                             |     }
    0x004e6420 addiu s4, v0, 1               |     s4 = v0 + 1;
    0x004e6424 move s2, zero                 |     s2 = 0;
    0x004e6428 addu v0, s3, s2               |     v0 = s3 + s2;
                                             |     do {
    0x004e642c srl v1, v0, 0x1f              |         v1 = v0 >> 0x1f;
    0x004e6430 addu v0, v0, v1               |         v0 += v1;
    0x004e6434 sra s1, v0, 1                 |         s1 = v0 >> 1;
    0x004e6438 sll v1, s1, 1                 |         v1 = s1 << 1;
    0x004e643c lw v0, -0x7fe8(gp)            |         v0 = *((gp - 8186));
    0x004e6440 addu v1, v1, s1               |         v1 += s1;
    0x004e6444 sll v1, v1, 2                 |         v1 <<= 2;
    0x004e6448 addiu v0, v0, -0x2fb0         |         v0 += -0x2fb0;
    0x004e644c addu s0, v1, v0               |         s0 = v1 + v0;
    0x004e6450 lw t9, -0x6700(gp)            |         t9 = sym.imp.strcasecmp;
    0x004e6454 lw a1, (s0)                   |         a1 = *(s0);
    0x004e6458 move a0, s4                   |         a0 = s4;
    0x004e645c jalr t9                       |         t9 ();
    0x004e6460 lw gp, 0x28(sp)               |         gp = *(var_28h);
                                             |         if (v0 > 0) {
    0x004e6464 blez v0, 0x4e6474             |             
    0x004e6468 nop                           |             
    0x004e646c addiu s3, s1, 1               |             s3 = s1 + 1;
    0x004e6470 b 0x4e6490                    |             
                                             |         } else {
    0x004e6474 addiu s2, s1, -1              |             s2 = s1 + -1;
                                             |             if (v0 < 0) {
    0x004e6478 bltz v0, 0x4e6490             |                 goto label_6;
                                             |             }
    0x004e647c lw v0, 8(s0)                  |             v0 = *((s0 + 2));
    0x004e6480 lw v1, 4(s0)                  |             v1 = *((s0 + 1));
    0x004e6484 sw v0, 0x70c(sp)              |             *(var_70ch) = v0;
    0x004e6488 sw v1, 0x708(sp)              |             *(var_708h) = v1;
    0x004e648c b 0x4e64c0                    |             goto label_7;
                                             |         }
                                             | label_6:
    0x004e6490 slt v0, s2, s3                |         v0 = (s2 < s3) ? 1 : 0;
    0x004e6494 addu v0, s3, s2               |         v0 = s3 + s2;
    0x004e6498 beqz v0, 0x4e642c             |         
                                             |     } while (v0 == 0);
                                             | label_5:
    0x004e649c lw v0, -0x7fcc(gp)            |     v0 = *((gp - 8179));
    0x004e64a0 lw v0, 0x2800(v0)             |     v0 = *((v0 + 2560));
    0x004e64a4 sw v0, 0x708(sp)              |     *(var_708h) = v0;
    0x004e64a8 lw v0, -0x7fdc(gp)            |     v0 = *((gp - 8183));
                                             |     /* esilref: 'octet-stream' */
    0x004e64ac addiu v0, v0, -0x7f48         |     v0 += -0x7f48;
    0x004e64b0 sw v0, 0x70c(sp)              |     *(var_70ch) = v0;
    0x004e64b4 b 0x4e64c0                    |     goto label_7;
                                             | label_4:
    0x004e64b8 addiu s3, zero, 0x194         |     s3 = 0x194;
    0x004e64bc b 0x4e66c8                    |     goto label_1;
                                             | label_7:
    0x004e64c0 lw a2, -0x7fdc(gp)            |     a2 = *((gp - 8183));
    0x004e64c4 move a0, fp                   |     a0 = fp;
    0x004e64c8 lw v0, 0x70c(sp)              |     v0 = *(var_70ch);
    0x004e64cc addiu a1, zero, 0x64          |     a1 = 0x64;
    0x004e64d0 lw t9, -0x4fe0(gp)            |     t9 = sym.imp.snprintf;
                                             |     /* esilref: '&s/&s' */
    0x004e64d4 addiu a2, a2, -0x7f38         |     a2 += -0x7f38;
    0x004e64d8 lw a3, 0x708(sp)              |     a3 = *(var_708h);
    0x004e64dc addiu s3, zero, 0x193         |     s3 = 0x193;
    0x004e64e0 sw v0, 0x10(sp)               |     *(var_10h) = v0;
    0x004e64e4 jalr t9                       |     t9 ();
    0x004e64e8 lw v0, 0x5f4(sp)              |     v0 = *(var_5f4h);
    0x004e64ec lw gp, 0x28(sp)               |     gp = *(var_28h);
                                             |     if (v0 == 0) {
    0x004e64f0 beqz v0, 0x4e66c8             |         goto label_1;
                                             |     }
    0x004e64f4 nop                           |     
                                             | label_3:
    0x004e64f8 lw a2, 0x5e8(sp)              |     a2 = *(var_5e8h);
    0x004e64fc move a0, s5                   |     a0 = s5;
    0x004e6500 lw t9, -0x6c40(gp)            |     t9 = sym.CheckOtherHTTPHeaders;
    0x004e6504 move a1, s7                   |     a1 = s7;
    0x004e6508 sw a2, 0xdc(s7)               |     *(var_dch) = a2;
    0x004e650c jalr t9                       |     t9 ();
    0x004e6510 move s3, v0                   |     s3 = v0;
    0x004e6514 addiu v0, zero, 0xc8          |     v0 = 0xc8;
    0x004e6518 lw gp, 0x28(sp)               |     gp = *(var_28h);
                                             |     if (s3 != v0) {
    0x004e651c bne s3, v0, 0x4e66c0          |         goto label_8;
                                             |     }
    0x004e6520 nop                           |     
    0x004e6524 lw v0, 4(s5)                  |     v0 = *((s5 + 1));
    0x004e6528 addiu v0, zero, 4             |     v0 = 4;
                                             |     if (v0 == 0) {
    0x004e652c beqz v0, 0x4e66b0             |         goto label_9;
                                             |     }
    0x004e6530 lw v0, 8(s7)                  |     v0 = *(var_4a0h);
                                             |     if (v0 == 0) {
    0x004e6534 beqz v0, 0x4e65dc             |         goto label_10;
                                             |     }
    0x004e6538 nop                           |     
    0x004e653c lw v0, 4(s7)                  |     v0 = *(var_49ch);
    0x004e6540 addiu a0, sp, 0x30            |     a0 = sp + 0x30;
                                             |     if (v0 != 0) {
    0x004e6544 beqz v0, 0x4e6588             |         
    0x004e6548 addiu v0, zero, 0xce          |         v0 = 0xce;
    0x004e654c sw v0, 0x10(sp)               |         *(var_10h) = v0;
    0x004e6550 addiu v0, sp, 0x5f8           |         v0 = sp + 0x5f8;
    0x004e6554 sw v0, 0x14(sp)               |         *(var_14h) = v0;
    0x004e6558 lw v0, -0x7fdc(gp)            |         v0 = *((gp - 8183));
    0x004e655c lw a3, -0x7fdc(gp)            |         a3 = *((gp - 8183));
                                             |         /* esilref: 'LAST-MODIFIED: ' */
    0x004e6560 addiu v0, v0, -0x7d90         |         v0 += -0x7d90;
    0x004e6564 lw t9, -0x5e98(gp)            |         t9 = sym.http_MakeMessage;
                                             |         /* esilref: 'RTGKDstcSCc' */
    0x004e6568 addiu a3, a3, -0x7d80         |         a3 += -0x7d80;
    0x004e656c lw a1, 0x6fc(sp)              |         a1 = *(var_6fch);
    0x004e6570 lw a2, 0x700(sp)              |         a2 = *(var_700h);
    0x004e6574 sw v0, 0x1c(sp)               |         *(var_1ch) = v0;
    0x004e6578 addiu v0, sp, 0x5ec           |         v0 = sp + 0x5ec;
    0x004e657c sw v0, 0x20(sp)               |         *(var_20h) = v0;
    0x004e6580 sw s7, 0x18(sp)               |         *(var_18h) = s7;
    0x004e6584 b 0x4e65cc                    |         
                                             |     } else {
    0x004e6588 addiu v0, zero, 0xce          |         v0 = 0xce;
    0x004e658c lw v1, 0xdc(s7)               |         v1 = *(var_dch);
    0x004e6590 sw v0, 0x10(sp)               |         *(var_10h) = v0;
    0x004e6594 addiu v0, sp, 0x5f8           |         v0 = sp + 0x5f8;
    0x004e6598 sw v0, 0x18(sp)               |         *(var_18h) = v0;
    0x004e659c lw v0, -0x7fdc(gp)            |         v0 = *((gp - 8183));
    0x004e65a0 lw a3, -0x7fdc(gp)            |         a3 = *((gp - 8183));
                                             |         /* esilref: 'LAST-MODIFIED: ' */
    0x004e65a4 addiu v0, v0, -0x7d90         |         v0 += -0x7d90;
    0x004e65a8 sw v0, 0x20(sp)               |         *(var_20h) = v0;
    0x004e65ac addiu v0, sp, 0x5ec           |         v0 = sp + 0x5ec;
    0x004e65b0 lw a1, 0x6fc(sp)              |         a1 = *(var_6fch);
                                             |         /* esilref: 'RNTGDstcSCc' */
    0x004e65b4 addiu a3, a3, -0x7d74         |         a3 += -0x7d74;
    0x004e65b8 lw t9, -0x5e98(gp)            |         t9 = sym.http_MakeMessage;
    0x004e65bc lw a2, 0x700(sp)              |         a2 = *(var_700h);
    0x004e65c0 sw v1, 0x14(sp)               |         *(var_14h) = v1;
    0x004e65c4 sw v0, 0x24(sp)               |         *(var_24h) = v0;
    0x004e65c8 sw s7, 0x1c(sp)               |         *(var_1ch) = s7;
                                             |     }
                                             |     do {
    0x004e65cc jalr t9                       |         t9 ();
    0x004e65d0 nop                           |         
    0x004e65d4 b 0x4e6698                    |         goto label_11;
    0x004e65d8 nop                           |         
                                             | label_10:
    0x004e65dc lw v0, 4(s7)                  |         v0 = *(var_49ch);
    0x004e65e0 addiu t0, sp, 0x5f8           |         t0 = sp + 0x5f8;
                                             |         if (v0 != 0) {
    0x004e65e4 beqz v0, 0x4e6624             |             
    0x004e65e8 addiu v0, sp, 0x5f8           |             v0 = sp + 0x5f8;
    0x004e65ec addiu a0, sp, 0x30            |             a0 = sp + 0x30;
    0x004e65f0 sw v0, 0x14(sp)               |             *(var_14h) = v0;
    0x004e65f4 lw v0, -0x7fdc(gp)            |             v0 = *((gp - 8183));
    0x004e65f8 lw a3, -0x7fdc(gp)            |             a3 = *((gp - 8183));
                                             |             /* esilref: 'LAST-MODIFIED: ' */
    0x004e65fc addiu v0, v0, -0x7d90         |             v0 += -0x7d90;
    0x004e6600 lw a1, 0x6fc(sp)              |             a1 = *(var_6fch);
                                             |             /* esilref: 'RKTDstcSCc' */
    0x004e6604 addiu a3, a3, -0x7d68         |             a3 += -0x7d68;
    0x004e6608 lw t9, -0x5e98(gp)            |             t9 = sym.http_MakeMessage;
    0x004e660c lw a2, 0x700(sp)              |             a2 = *(var_700h);
    0x004e6610 sw v0, 0x18(sp)               |             *(var_18h) = v0;
    0x004e6614 addiu v0, sp, 0x5ec           |             v0 = sp + 0x5ec;
    0x004e6618 sw v0, 0x1c(sp)               |             *(var_1ch) = v0;
    0x004e661c sw s3, 0x10(sp)               |             *(var_10h) = s3;
    0x004e6620 b 0x4e6690                    |             goto label_12;
                                             |         }
    0x004e6624 lw a0, 0xdc(s7)               |         a0 = *(var_dch);
    0x004e6628 lw t9, -0x5e98(gp)            |         t9 = sym.http_MakeMessage;
    0x004e662c lw a1, 0x6fc(sp)              |         a1 = *(var_6fch);
    0x004e6630 lw a2, 0x700(sp)              |         a2 = *(var_700h);
    0x004e6634 lw v0, -0x7fdc(gp)            |         v0 = *((gp - 8183));
    0x004e6638 addiu t1, sp, 0x5ec           |         t1 = sp + 0x5ec;
                                             |         if (a0 < 0) {
    0x004e663c bltz a0, 0x4e666c             |             goto label_13;
                                             |         }
    0x004e6640 lw a3, -0x7fdc(gp)            |         a3 = *((gp - 8183));
                                             |         /* esilref: 'LAST-MODIFIED: ' */
    0x004e6644 addiu v0, v0, -0x7d90         |         v0 += -0x7d90;
    0x004e6648 addiu v1, zero, 0xc8          |         v1 = 0xc8;
    0x004e664c sw a0, 0x14(sp)               |         *(var_14h) = a0;
                                             |         /* esilref: 'RNTDstcSCc' */
    0x004e6650 addiu a3, a3, -0x7d5c         |         a3 += -0x7d5c;
    0x004e6654 addiu a0, sp, 0x30            |         a0 = sp + 0x30;
    0x004e6658 sw v1, 0x10(sp)               |         *(var_10h) = v1;
    0x004e665c sw t0, 0x18(sp)               |         *(var_18h) = t0;
    0x004e6660 sw v0, 0x1c(sp)               |         *(var_1ch) = v0;
    0x004e6664 sw t1, 0x20(sp)               |         *(var_20h) = t1;
    0x004e6668 b 0x4e65cc                    |         
                                             |     } while (1);
                                             | label_13:
    0x004e666c lw a3, -0x7fdc(gp)            |     a3 = *((gp - 8183));
                                             |     /* esilref: 'LAST-MODIFIED: ' */
    0x004e6670 addiu v0, v0, -0x7d90         |     v0 += -0x7d90;
    0x004e6674 addiu v1, zero, 0xc8          |     v1 = 0xc8;
    0x004e6678 addiu a0, sp, 0x30            |     a0 = sp + 0x30;
    0x004e667c sw v1, 0x10(sp)               |     *(var_10h) = v1;
                                             |     /* esilref: 'RTDstcSCc' */
    0x004e6680 addiu a3, a3, -0x7d50         |     a3 += -0x7d50;
    0x004e6684 sw t0, 0x14(sp)               |     *(var_14h) = t0;
    0x004e6688 sw v0, 0x18(sp)               |     *(var_18h) = v0;
    0x004e668c sw t1, 0x1c(sp)               |     *(var_1ch) = t1;
                                             | label_12:
    0x004e6690 jalr t9                       |     t9 ();
    0x004e6694 nop                           |     
                                             | label_11:
    0x004e6698 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x004e669c addiu v0, zero, 6             |     v0 = 6;
                                             |     if (v0 == 0) {
    0x004e66a0 bnez v0, 0x4e66c0             |         
    0x004e66a4 lw v1, 4(s5)                  |         v1 = *((s5 + 1));
    0x004e66a8 addiu v0, zero, 2             |         v0 = 2;
                                             |         if (v1 == v0) {
    0x004e66ac bne v1, v0, 0x4e66b8          |             
                                             | label_9:
    0x004e66b0 sw v0, 0x6f8(sp)              |             *(var_6f8h) = v0;
    0x004e66b4 b 0x4e66dc                    |             
                                             |         } else {
    0x004e66b8 sw zero, 0x6f8(sp)            |             *(var_6f8h) = 0;
                                             |         }
    0x004e66bc b 0x4e66dc                    |         
                                             |     } else {
                                             |         if (s3 == 0) {
                                             | label_8:
    0x004e66c0 beqz s3, 0x4e66dc             |             goto label_14;
                                             |         }
    0x004e66c4 nop                           |         
                                             | label_1:
    0x004e66c8 lw a3, 0x13c(s5)              |         a3 = *((s5 + 79));
    0x004e66cc lw a0, 0x748(sp)              |         a0 = *(arg_748h);
    0x004e66d0 lw t9, -0x774c(gp)            |         t9 = sym.http_SendStatusResponse;
    0x004e66d4 move a1, s3                   |         a1 = s3;
    0x004e66d8 b 0x4e67b4                    |         goto label_15;
                                             |     }
                                             | label_14:
    0x004e66dc lw v1, 0x6f8(sp)              |     v1 = *(var_6f8h);
    0x004e66e0 addiu v0, zero, 2             |     v0 = 2;
    0x004e66e4 sltiu v0, v1, 3               |     v0 = (v1 < 3) ? 1 : 0;
                                             |     if (v1 != v0) {
    0x004e66e8 beq v1, v0, 0x4e676c          |         
    0x004e66ec addiu v0, zero, 3             |         v0 = 3;
                                             |         if (v0 != 0) {
    0x004e66f0 beqz v0, 0x4e6704             |             
                                             |             if (v1 == 0) {
    0x004e66f4 beqz v1, 0x4e6714             |                 goto label_16;
                                             |             }
    0x004e66f8 nop                           |             
    0x004e66fc b 0x4e67a4                    |             goto label_17;
    0x004e6700 nop                           |             
                                             |         }
                                             |         if (v1 != v0) {
    0x004e6704 beq v1, v0, 0x4e6728          |             
    0x004e6708 nop                           |             
    0x004e670c b 0x4e67a4                    |             goto label_17;
    0x004e6710 nop                           |             
                                             | label_16:
    0x004e6714 lw t9, -0x7a60(gp)            |             t9 = sym.imp.strlen;
    0x004e6718 addiu a0, sp, 0x30            |             a0 = sp + 0x30;
    0x004e671c jalr t9                       |             t9 ();
    0x004e6720 b 0x4e6734                    |             goto label_18;
    0x004e6724 nop                           |             
                                             |         }
    0x004e6728 lw t9, -0x7a60(gp)            |         t9 = sym.imp.strlen;
    0x004e672c addiu a0, sp, 0x30            |         a0 = sp + 0x30;
    0x004e6730 jalr t9                       |         t9 ();
                                             | label_18:
    0x004e6734 lw gp, 0x28(sp)               |         gp = *(var_28h);
    0x004e6738 addiu v1, sp, 0x30            |         v1 = sp + 0x30;
    0x004e673c lw a0, 0x748(sp)              |         a0 = *(arg_748h);
    0x004e6740 move a3, s7                   |         a3 = s7;
    0x004e6744 lw a2, -0x7fdc(gp)            |         a2 = *((gp - 8183));
    0x004e6748 addiu a1, sp, 0x710           |         a1 = sp + 0x710;
    0x004e674c lw t9, -0x4df4(gp)            |         t9 = sym.http_SendMessage;
    0x004e6750 sw v1, 0x10(sp)               |         *(var_10h) = v1;
                                             |         /* esilref: 'Ibf' */
    0x004e6754 addiu a2, a2, -0x7d44         |         a2 += -0x7d44;
    0x004e6758 sw v0, 0x14(sp)               |         *(var_14h) = v0;
    0x004e675c sw s6, 0x18(sp)               |         *(var_18h) = s6;
    0x004e6760 jalr t9                       |         t9 ();
    0x004e6764 b 0x4e67c0                    |         goto label_19;
    0x004e6768 nop                           |         
                                             |     }
    0x004e676c lw t9, -0x7a60(gp)            |     t9 = sym.imp.strlen;
    0x004e6770 addiu a0, sp, 0x30            |     a0 = sp + 0x30;
    0x004e6774 jalr t9                       |     t9 ();
    0x004e6778 addiu a1, sp, 0x710           |     a1 = sp + 0x710;
    0x004e677c lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x004e6780 addiu a3, sp, 0x30            |     a3 = sp + 0x30;
    0x004e6784 lw a0, 0x748(sp)              |     a0 = *(arg_748h);
    0x004e6788 lw a2, -0x7fdc(gp)            |     a2 = *((gp - 8183));
    0x004e678c lw t9, -0x4df4(gp)            |     t9 = sym.http_SendMessage;
    0x004e6790 sw v0, 0x10(sp)               |     *(var_10h) = v0;
    0x004e6794 addiu a2, a2, -0x7d40         |     a2 += -0x7d40;
    0x004e6798 jalr t9                       |     t9 ();
    0x004e679c b 0x4e67c0                    |     goto label_19;
    0x004e67a0 nop                           |     
                                             | label_17:
    0x004e67a4 lw a3, 0x13c(s5)              |     a3 = *((s5 + 79));
    0x004e67a8 move a1, zero                 |     a1 = 0;
    0x004e67ac lw a0, 0x748(sp)              |     a0 = *(arg_748h);
    0x004e67b0 lw t9, -0x774c(gp)            |     t9 = sym.http_SendStatusResponse;
                                             | label_15:
    0x004e67b4 lw a2, 0x138(s5)              |     a2 = *((s5 + 78));
    0x004e67b8 jalr t9                       |     t9 ();
    0x004e67bc nop                           |     
                                             | label_19:
    0x004e67c0 lw gp, 0x28(sp)               |     gp = *(var_28h);
    0x004e67c4 lw ra, 0x73c(sp)              |     ra = *(var_73ch);
    0x004e67c8 lw fp, 0x738(sp)              |     fp = *(var_738h);
    0x004e67cc lw s7, 0x734(sp)              |     s7 = *(var_734h);
    0x004e67d0 lw s6, 0x730(sp)              |     s6 = *(var_730h);
    0x004e67d4 lw s5, 0x72c(sp)              |     s5 = *(var_72ch);
    0x004e67d8 lw s4, 0x728(sp)              |     s4 = *(var_728h);
    0x004e67dc lw s3, 0x724(sp)              |     s3 = *(var_724h);
    0x004e67e0 lw s2, 0x720(sp)              |     s2 = *(var_720h);
    0x004e67e4 lw s1, 0x71c(sp)              |     s1 = *(var_71ch);
    0x004e67e8 lw s0, 0x718(sp)              |     s0 = *(var_718h);
    0x004e67ec addiu sp, sp, 0x740           |     
    0x004e67f0 jr ra                         |     return v0;
                                             | }

[*] Function strcat used 32 times httpd

